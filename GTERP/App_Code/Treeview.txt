@*helper GetTreeView(List<GTERP.Models.Acc_ChartOfAccount> siteMenu, int? parentID)
{
    foreach (var i in siteMenu.Where(a => a.ParentID.Equals(parentID)))
    {
<li>
    @{var submenu = siteMenu.Where(a => a.ParentID.Equals(i.AccId)).Count();}
    @if (submenu > 0)
    {
        if (i.AccType == "L")
        {
            <span class="collapsez collapsible" style="background-color:green;">&nbsp;</span>
            <span class="text-primary">
                <a href="@i.AccCode">@i.AccName</a>
                @i.AccCode - @i.AccName - @i.AccType

            </span>
        }
        else
        {
            <span class="collapsez collapsible"  style="width:14px; background-color:green;">&nbsp;</span>
            <span class="text-primary">
                <a href="@i.AccCode">@i.AccName</a>
                @i.AccCode - @i.AccName - @i.AccType

            </span>
        }
    }
    else
    {
        if (i.AccType == "L")
        {
            <span class="text-success">
                <a href="@i.AccCode">@i.AccName</a>
                @i.AccCode - @i.AccName - @i.AccType

            </span>
        }
        else
        {
            <span style="width:14px; background-color:red;">&nbsp;</span>
            <span class="text-success">
                <a href="@i.AccCode">@i.AccName</a>
                @i.AccCode - @i.AccName - @i.AccType

            </span>
        }
    }
    <span class="text-danger">
            @i.AccCode - @i.AccName

        </span>
    @if (submenu > 0)
    {
        <ul class="text-success">
            @Treeview.GetTreeView(siteMenu, i.AccId)
             Recursive  Call for Populate Sub items here
        </ul>
    }
</li>
    }
}*@