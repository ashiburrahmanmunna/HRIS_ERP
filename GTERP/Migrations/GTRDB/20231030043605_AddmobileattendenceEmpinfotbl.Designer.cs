// <auto-generated />
using System;
using GTERP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GTERP.Migrations.GTRDB
{
    [DbContext(typeof(GTRDBContext))]
    [Migration("20231030043605_AddmobileattendenceEmpinfotbl")]
    partial class AddmobileattendenceEmpinfotbl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("GTERP.Controllers.Device.Model.HR_Emp_DeviceInfoHIK", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("empImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("empName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("fingerData")
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("userGroup")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("HR_Emp_DeviceInfoHIK");
                });

            modelBuilder.Entity("GTERP.Controllers.Device.Model.HR_MachineNoZKT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("LuserId")
                        .HasColumnType("smallint");

                    b.Property<string>("Pcname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZKtPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZKtUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HR_MachineNoZkt");
                });

            modelBuilder.Entity("GTERP.Models.Acc_AdvanceIncomeTax_Schedule", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AITAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BEDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BENo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAIT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAssesedAmountVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_AdvanceIncomeTax_Schedule");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BankStatementBalance", b =>
                {
                    b.Property<int>("BankStatementBalanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("AddAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("BalanceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BankStatementAmount")
                        .HasColumnType("float");

                    b.Property<double>("CashBookStatementAmount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("LessAmount")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BankStatementBalanceId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_BankStatementBalances");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetMain", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BudgetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BudgetDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BudgetSerialId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Referance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<double>("VAmountLocal")
                        .HasColumnType("float");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("vAmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vAmountLocalInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("vFiscalMonthFiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("vFiscalYearFiscalYearId")
                        .HasColumnType("int");

                    b.HasKey("BudgetId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("vFiscalMonthFiscalMonthId");

                    b.HasIndex("vFiscalYearFiscalYearId");

                    b.ToTable("Acc_BudgetMains");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetRelease", b =>
                {
                    b.Property<int>("BudgetReleaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("DebitAmount")
                        .HasColumnType("float");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BudgetReleaseId");

                    b.HasIndex("AccId");

                    b.HasIndex("EmpId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("Acc_BudgetRelease");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetSub", b =>
                {
                    b.Property<int>("BudgetSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int?>("Acc_BudgetMainBudgetId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int?>("ChartOfAccountAccId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.HasKey("BudgetSubId");

                    b.HasIndex("Acc_BudgetMainBudgetId");

                    b.HasIndex("ChartOfAccountAccId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Acc_BudgetSubs");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetSubSection", b =>
                {
                    b.Property<int>("BudgetSubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetSubId")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectionSubSectId")
                        .HasColumnType("int");

                    b.HasKey("BudgetSubSectionId");

                    b.HasIndex("BudgetSubId");

                    b.HasIndex("SubSectionSubSectId");

                    b.ToTable("Acc_BudgetSubSections");
                });

            modelBuilder.Entity("GTERP.Models.Acc_ChartOfAccount", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccCode_Old")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AccSubId")
                        .HasColumnType("int");

                    b.Property<string>("AccType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("AccumulatedDepId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("DepreciationRate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsBankItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChkRef")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsEntryBankLiability")
                        .HasColumnType("int");

                    b.Property<bool>("IsItemAccmulateddDep")
                        .HasColumnType("bit");

                    b.Property<int>("IsItemBS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemCS")
                        .HasColumnType("int");

                    b.Property<bool>("IsItemDepExp")
                        .HasColumnType("bit");

                    b.Property<int>("IsItemPL")
                        .HasColumnType("int");

                    b.Property<int>("IsItemTA")
                        .HasColumnType("int");

                    b.Property<int>("IsShowCOA")
                        .HasColumnType("int");

                    b.Property<int>("IsSysDefined")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<decimal>("OpCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpCreditLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpDebitLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("isShowUg")
                        .HasColumnType("bit");

                    b.Property<int>("opFYId")
                        .HasColumnType("int");

                    b.HasKey("AccId");

                    b.HasIndex("AccumulatedDepId");

                    b.HasIndex("ParentID");

                    b.HasIndex("ComId", "AccCode")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [AccCode] IS NOT NULL");

                    b.ToTable("Acc_ChartOfAccounts");
                });

            modelBuilder.Entity("GTERP.Models.Acc_ChartOfAccount_Initial", b =>
                {
                    b.Property<int>("InitialAccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AccSubId")
                        .HasColumnType("int");

                    b.Property<string>("AccType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsBankItem")
                        .HasColumnType("int");

                    b.Property<int>("IsCashItem")
                        .HasColumnType("int");

                    b.Property<int>("IsChkRef")
                        .HasColumnType("int");

                    b.Property<int>("IsEntryBankLiability")
                        .HasColumnType("int");

                    b.Property<int>("IsEntryDep")
                        .HasColumnType("int");

                    b.Property<int>("IsItemBS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemCS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemPL")
                        .HasColumnType("int");

                    b.Property<int>("IsItemTA")
                        .HasColumnType("int");

                    b.Property<int>("IsShowCOA")
                        .HasColumnType("int");

                    b.Property<int>("IsSysDefined")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<float>("OpCreditLocal")
                        .HasColumnType("real");

                    b.Property<float>("OpDebitLocal")
                        .HasColumnType("real");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.Property<int>("isItemConsumed")
                        .HasColumnType("int");

                    b.Property<int>("isItemInventory")
                        .HasColumnType("int");

                    b.Property<int>("isShowUg")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("InitialAccId");

                    b.HasIndex("ParentID");

                    b.ToTable("Acc_ChartOfAccount_Initials");
                });

            modelBuilder.Entity("GTERP.Models.Acc_FiscalHalfYear", b =>
                {
                    b.Property<int>("FiscalHalfYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<string>("HyearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HyearNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiscalHalfYearId");

                    b.ToTable("Acc_FiscalHalfYears");
                });

            modelBuilder.Entity("GTERP.Models.Acc_FiscalMonth", b =>
                {
                    b.Property<int>("FiscalMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ClosingdtTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningdtFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAccounts")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedSalary")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedStore")
                        .HasColumnType("bit");

                    b.HasKey("FiscalMonthId");

                    b.ToTable("Acc_FiscalMonths");
                });

            modelBuilder.Entity("GTERP.Models.Acc_FiscalQtr", b =>
                {
                    b.Property<int>("FiscalQtrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<string>("QtrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtrNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiscalQtrId");

                    b.ToTable("Acc_FiscalQtrs");
                });

            modelBuilder.Entity("GTERP.Models.Acc_FiscalYear", b =>
                {
                    b.Property<int>("FiscalYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<string>("FYName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FYNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("isWorking")
                        .HasColumnType("bit");

                    b.HasKey("FiscalYearId");

                    b.ToTable("Acc_FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Equity", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("CDVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Development")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Loan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_Equity");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_ForeignLoan", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeFlucLossGain")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("MilestonePortionPrincipleRMB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MilestonePortionPrincipleTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_ForeignLoans");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_JapanLoan", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeLossGainTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestAmountTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestPortionTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestPortionYen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("MilestonePortionTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MilestonePortionYen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaymentPortionTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaymentPortionYen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PortionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SupplyPortionTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SupplyPortionYen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmountTaka")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountYen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_JapanLoans");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Loan", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Principle")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalLoan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_Loans");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_StoreInTransit", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LPNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_StoreInTransit");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Subsidy", b =>
                {
                    b.Property<int>("GovtScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("BalanceCumulative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalancePlantOne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalancePlantTwo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivableCumulative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivablePlantOne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivablePlantTwo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivableTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedCumulative")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedPlantOne")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedPlantTwo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GovtScheduleId");

                    b.HasIndex("AccId");

                    b.ToTable("Acc_GovtSchedule_Subsidy");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherMain", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Referance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<double>("VAmountLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherInputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("VoucherSerialId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherTranGroupList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("YearlyVoucherTypeWiseSerial")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("vAmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vAmountLocalInWords")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryIdLocal");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("VoucherTranGroupId");

                    b.HasIndex("VoucherTypeId");

                    b.HasIndex("ComId", "VoucherNo", "FiscalYearId", "FiscalMonthId")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [VoucherNo] IS NOT NULL AND [FiscalYearId] IS NOT NULL AND [FiscalMonthId] IS NOT NULL");

                    b.ToTable("Acc_VoucherMains");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherNoCreatedType", b =>
                {
                    b.Property<int>("VoucherNoCreatedTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("VoucherNoCreatedTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNoCreatedTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherNoCreatedTypeId");

                    b.ToTable("Acc_VoucherNoCreatedTypes");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherNoPrefix", b =>
                {
                    b.Property<int>("VoucherNoPrefixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VoucherShortPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isVisible")
                        .HasColumnType("bit");

                    b.HasKey("VoucherNoPrefixId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Acc_VoucherNoPrefixes");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSub", b =>
                {
                    b.Property<int>("VoucherSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupIdRow")
                        .HasColumnType("int");

                    b.Property<int>("ccId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubId");

                    b.HasIndex("AccId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupIdRow");

                    b.ToTable("Acc_VoucherSubs");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSubCheckno", b =>
                {
                    b.Property<int>("VoucherSubCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChkNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoChk")
                        .HasColumnType("int");

                    b.Property<int?>("SRowNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherSubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtChk")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtChkClear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtChkTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClear")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualEntry")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("VoucherSubCheckId");

                    b.HasIndex("AccId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubChecnos");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSubSection", b =>
                {
                    b.Property<int>("VoucherSubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectionSubSectId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubSectionId");

                    b.HasIndex("SubSectionSubSectId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubSections");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherTranGroup", b =>
                {
                    b.Property<int>("VoucherTranId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.HasKey("VoucherTranId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupId");

                    b.ToTable("Acc_VoucherTranGroups");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherType", b =>
                {
                    b.Property<int>("VoucherTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("VoucherTypeButtonClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("VoucherTypeId");

                    b.ToTable("Acc_VoucherTypes");
                });

            modelBuilder.Entity("GTERP.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRight")
                        .HasColumnType("bit");

                    b.Property<string>("optionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quizid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("quizid");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("GTERP.Models.AppKeys", b =>
                {
                    b.Property<int>("AppKeysId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.HasKey("AppKeysId");

                    b.HasIndex("ComId");

                    b.ToTable("AppKeys");
                });

            modelBuilder.Entity("GTERP.Models.ApprovalPanel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovalRoleId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalRoleId");

                    b.HasIndex("ReportTypeId");

                    b.ToTable("ApprovalPanels");
                });

            modelBuilder.Entity("GTERP.Models.ApprovalRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalRoles");
                });

            modelBuilder.Entity("GTERP.Models.ApprovedBy", b =>
                {
                    b.Property<int>("ApprovedById")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedByName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovedByShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("ApprovedById");

                    b.ToTable("ApprovedBys");
                });

            modelBuilder.Entity("GTERP.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AssetCurrentStateCurrentStateId")
                        .HasColumnType("int");

                    b.Property<string>("AssetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignComponent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompanyComId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepreciationId")
                        .HasColumnType("int");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchaseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("UsefulLife")
                        .HasColumnType("real");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.HasIndex("AssetCurrentStateCurrentStateId");

                    b.HasIndex("CompanyComId");

                    b.HasIndex("DepreciationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseTypeId");

                    b.HasIndex("VendorId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("GTERP.Models.AssetCurrentState", b =>
                {
                    b.Property<int>("CurrentStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CurrentState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrentStateId");

                    b.ToTable("assetCurrentStates");
                });

            modelBuilder.Entity("GTERP.Models.Attachment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentMain", b =>
                {
                    b.Property<int>("AttachmentMainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AttachmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttachmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BasedId")
                        .HasColumnType("int");

                    b.Property<string>("BasedOn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Wid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttachmentMainID");

                    b.ToTable("AttachmentMains");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentSub", b =>
                {
                    b.Property<int>("AttachmentSubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AttachmentMainId")
                        .HasColumnType("int");

                    b.Property<byte[]>("FileContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttachmentSubID");

                    b.HasIndex("AttachmentMainId");

                    b.ToTable("AttachmentSubs");
                });

            modelBuilder.Entity("GTERP.Models.BOMMain", b =>
                {
                    b.Property<int>("BOMMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("AssembleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BOMMainId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("ProductId");

                    b.ToTable("BOMMain");
                });

            modelBuilder.Entity("GTERP.Models.BOMSub", b =>
                {
                    b.Property<int>("BOMSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("BOMMainId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("Consumption")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvProductId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("BOMSubId");

                    b.HasIndex("BOMMainId");

                    b.HasIndex("InvProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("BOMSub");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNo", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanysSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BankAccountId");

                    b.HasIndex("CommercialCompanysSisterConcernCompanyId");

                    b.HasIndex("OpeningBankId");

                    b.ToTable("BankAccountNos");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNoLienBank", b =>
                {
                    b.Property<int>("LienBankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanysSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SwiftCodeBankAccountNoLienBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridupdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LienBankAccountId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CommercialCompanysSisterConcernCompanyId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("SupplierId");

                    b.ToTable("BankAccountNoLienBanks");
                });

            modelBuilder.Entity("GTERP.Models.Bill_Main", b =>
                {
                    b.Property<int>("BillMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Advance")
                        .HasColumnType("float");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("GrossAmount")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("NetPayableBill")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("TotalAITAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalConfessionAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalElectricityAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalForfeitureAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalLDAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalOthersAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalPOQty")
                        .HasColumnType("float");

                    b.Property<double>("TotalReceiveQty")
                        .HasColumnType("float");

                    b.Property<double>("TotalReturnAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalSDAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalVATAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalWFAmount")
                        .HasColumnType("float");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BillMainId");

                    b.HasIndex("AccId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Bill_Main");
                });

            modelBuilder.Entity("GTERP.Models.Bill_Sub", b =>
                {
                    b.Property<int>("BillSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("AITAmount")
                        .HasColumnType("float");

                    b.Property<float>("AITPercentage")
                        .HasColumnType("real");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BillMainId")
                        .HasColumnType("int");

                    b.Property<double>("ConfessionAmount")
                        .HasColumnType("float");

                    b.Property<float>("ConfessionPercentage")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("ElectricityAmount")
                        .HasColumnType("float");

                    b.Property<double>("ForfeitureAmount")
                        .HasColumnType("float");

                    b.Property<double>("LDAmount")
                        .HasColumnType("float");

                    b.Property<float>("LDPercentage")
                        .HasColumnType("real");

                    b.Property<double>("NetAmount")
                        .HasColumnType("float");

                    b.Property<double>("OthersAmount")
                        .HasColumnType("float");

                    b.Property<double>("POQty")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<double>("ReceiveQty")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<double>("ReturnAmount")
                        .HasColumnType("float");

                    b.Property<double>("SDAmount")
                        .HasColumnType("float");

                    b.Property<float>("SDPercentage")
                        .HasColumnType("real");

                    b.Property<double>("VATAmount")
                        .HasColumnType("float");

                    b.Property<float>("VATPercentage")
                        .HasColumnType("real");

                    b.Property<double>("WFAmount")
                        .HasColumnType("float");

                    b.Property<float>("WFPercentage")
                        .HasColumnType("real");

                    b.HasKey("BillSubId");

                    b.HasIndex("BillMainId");

                    b.HasIndex("ProductId");

                    b.ToTable("Bill_Sub");
                });

            modelBuilder.Entity("GTERP.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("AllotmentQty")
                        .HasColumnType("real");

                    b.Property<string>("AllotmentType")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<int?>("DistWiseBookingId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("PStationId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BookingId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DistId");

                    b.HasIndex("DistWiseBookingId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PStationId");

                    b.HasIndex("ComId", "FiscalYearId", "FiscalMonthId", "CustomerId", "AllotmentType")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [AllotmentType] IS NOT NULL");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("GTERP.Models.BrandInfo", b =>
                {
                    b.Property<int>("BrandInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.HasKey("BrandInfoId");

                    b.ToTable("BrandInfo");
                });

            modelBuilder.Entity("GTERP.Models.BudgetDetails", b =>
                {
                    b.Property<int>("BudgetDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("BudgetCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BudgetDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetMainId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BudgetDetailsId");

                    b.HasIndex("AccId");

                    b.HasIndex("BudgetMainId");

                    b.ToTable("BudgetDetails");
                });

            modelBuilder.Entity("GTERP.Models.BudgetMain", b =>
                {
                    b.Property<int>("BudgetMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBudgetCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBudgetDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("BudgetMainId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("BudgetMains");
                });

            modelBuilder.Entity("GTERP.Models.Budget_ProductionTarget", b =>
                {
                    b.Property<int>("ProductionTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("ActualQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ApprovedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstimageQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDateActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDateEstimate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDatePreviousActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDateProposed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDateRevised")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InstalledCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("PreviousActualQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProposedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RevisedQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateApproved")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateEstimate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDatePreviousActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateProposed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDateRevised")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProductionTargetId");

                    b.HasIndex("PrdUnitId");

                    b.ToTable("Budget_ProductionTargets");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelChallan", b =>
                {
                    b.Property<int>("BufferDelChallanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BufferDelOrderId")
                        .HasColumnType("int");

                    b.Property<int>("ChallanNo")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeliveryQty")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BufferDelChallanId");

                    b.HasIndex("BufferDelOrderId");

                    b.ToTable("BufferDelChallan");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelOrder", b =>
                {
                    b.Property<int>("BufferDelOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BufferRepresentativeId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DODate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DONo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayInSlipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayInSlipNo")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("QtyInWordsBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtyInWordsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RemainingQty")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepresentativeBookingId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("TotalPriceInWordsBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPriceInWordsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("BufferDelOrderId");

                    b.HasIndex("BufferRepresentativeId");

                    b.HasIndex("RepresentativeBookingId");

                    b.ToTable("BufferDelOrder");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferGatePass", b =>
                {
                    b.Property<int>("BufferGatePassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BufferId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GatePassDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatePassFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GatePassNo")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalQty")
                        .HasColumnType("real");

                    b.Property<string>("TruckNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BufferGatePassId");

                    b.ToTable("BufferGatePass");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferGatePassSub", b =>
                {
                    b.Property<int>("BufferGatePassSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("BalanceQty")
                        .HasColumnType("real");

                    b.Property<int>("BufferDelChallanId")
                        .HasColumnType("int");

                    b.Property<int>("BufferGatePassId")
                        .HasColumnType("int");

                    b.Property<float>("TruckLoadQty")
                        .HasColumnType("real");

                    b.HasKey("BufferGatePassSubId");

                    b.HasIndex("BufferDelChallanId");

                    b.HasIndex("BufferGatePassId");

                    b.ToTable("BufferGatePassSub");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferList", b =>
                {
                    b.Property<int>("BufferListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BufferCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BufferName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BufferNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("BufferListId");

                    b.ToTable("Buffers");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferRepresentative", b =>
                {
                    b.Property<int>("BufferRepresentativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepresentativeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeCode")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RepresentativeMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BufferRepresentativeId");

                    b.ToTable("BuferRepresentative");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BuffertWiseBooking", b =>
                {
                    b.Property<int>("BufferBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AllotmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BufferID")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BufferBookingId");

                    b.HasIndex("BufferID");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("BuffertWiseBookings");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.DistictBuffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BufferListId")
                        .HasColumnType("int");

                    b.Property<int?>("Cat_DistrictDistId")
                        .HasColumnType("int");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BufferListId");

                    b.HasIndex("Cat_DistrictDistId");

                    b.ToTable("BufferDisticts");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.RepresentativeBooking", b =>
                {
                    b.Property<int>("RepresentativeBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("AllotmentQty")
                        .HasColumnType("real");

                    b.Property<int?>("BufferBookingId")
                        .HasColumnType("int");

                    b.Property<int>("BufferListId")
                        .HasColumnType("int");

                    b.Property<int>("BufferRepresentativeId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("RepresentativeBookingId");

                    b.HasIndex("BufferBookingId");

                    b.HasIndex("BufferListId");

                    b.HasIndex("BufferRepresentativeId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("RepresentativeBooking");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.RepresentativeBuffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BufferListId")
                        .HasColumnType("int");

                    b.Property<int>("BufferRepresentativeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BufferListId");

                    b.HasIndex("BufferRepresentativeId");

                    b.ToTable("RepresentativeBuffers");
                });

            modelBuilder.Entity("GTERP.Models.BusinessType", b =>
                {
                    b.Property<int>("BusinessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BusinessTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessTypeId");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("GTERP.Models.ButtonPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsShowEarn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSendEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSettlement")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ButtonPermissions");
                });

            modelBuilder.Entity("GTERP.Models.BuyerGroup", b =>
                {
                    b.Property<int>("BuyerGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuyerGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("BuyerGroupShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BuyerGroupId");

                    b.ToTable("BuyerGroups");
                });

            modelBuilder.Entity("GTERP.Models.BuyerInformation", b =>
                {
                    b.Property<int>("BuyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerGroupId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("BuyerSearchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CMPPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefferredPaymentDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmployeeIdExport")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeIdImport")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LCMargin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocalOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BuyerId");

                    b.HasIndex("BuyerGroupId");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployeeIdExport");

                    b.HasIndex("EmployeeIdImport");

                    b.ToTable("BuyerInformation");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Details", b =>
                {
                    b.Property<int>("BBLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_BBLC_MasterBBLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_ProformaInvoicePIId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PIId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BBLCId");

                    b.HasIndex("COM_BBLC_MasterBBLCId");

                    b.HasIndex("COM_ProformaInvoicePIId");

                    b.ToTable("COM_BBLC_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Master", b =>
                {
                    b.Property<int>("BBLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AmdNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BBLCNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("BBLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BBLCPrintDocRef")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<decimal>("BBLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BBLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<decimal>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<decimal>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Percentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("PrintDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdateRefNo")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BBLCId");

                    b.HasIndex("CompanySisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("COM_BBLC_Master");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportDetails", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_CNFBillExportMasterCNFExpenseID")
                        .HasColumnType("int");

                    b.Property<int?>("COM_CNFExpenseTypesExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<string>("CTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("COM_CNFBillExportMasterCNFExpenseID");

                    b.HasIndex("COM_CNFExpenseTypesExpenseHeadID");

                    b.ToTable("COM_CNFBillExportDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportMaster", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNFExpenseID")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CNFEXpenseBillDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Comission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompaniesSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMastersInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Messers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CompaniesSisterConcernCompanyId");

                    b.HasIndex("ExportInvoiceMastersInvoiceId");

                    b.ToTable("COM_CNFBillExportMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportDetails", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_CNFBillImportMasterCNFExpenseID")
                        .HasColumnType("int");

                    b.Property<int?>("COM_CNFExpenseTypesExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseHeadID")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("COM_CNFBillImportMasterCNFExpenseID");

                    b.HasIndex("COM_CNFExpenseTypesExpenseHeadID");

                    b.ToTable("COM_CNFBillImportDetailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportMaster", b =>
                {
                    b.Property<int>("CNFExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CNFExpenseID")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BBLCDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BondBENo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BondDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CIAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CNFEXpenseBillDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("COM_BBLC_MastersBBLCId")
                        .HasColumnType("int");

                    b.Property<long?>("COM_CommercialInvoicesCommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Comission")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<long?>("CommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CompaniesSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Consignment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("JobNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RotationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VasselName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridupdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CNFExpenseID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("COM_BBLC_MastersBBLCId");

                    b.HasIndex("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasIndex("CompaniesSisterConcernCompanyId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_CNFBillImportMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFExpenseType", b =>
                {
                    b.Property<int>("ExpenseHeadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AmountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CNFExpenseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNFExpenseNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DefaultAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImportOrExport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ExpenseHeadID");

                    b.ToTable("COM_CNFExpenseTypes");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice", b =>
                {
                    b.Property<long>("CommercialInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CommercialInvoiceId")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillOfEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfEntryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommercialCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CommercialInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommercialInvoiceNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("CommercialLCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ETBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FidderVasel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GoodsInhouseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MachinaryLCId")
                        .HasColumnType("int");

                    b.Property<string>("MotherVassel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("SupplierID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VasselETADate")
                        .HasColumnType("datetime2");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CommercialInvoiceId");

                    b.HasIndex("BBLCId");

                    b.HasIndex("CommercialCompanyID");

                    b.HasIndex("CommercialLCTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("MachinaryLCId");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_CommercialInvoices");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice_Sub", b =>
                {
                    b.Property<long>("CommercialInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long?>("COM_CommercialInvoicesCommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemDescId")
                        .HasColumnType("int");

                    b.HasKey("CommercialInvoiceId");

                    b.HasIndex("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasIndex("ItemDescId");

                    b.ToTable("COM_CommercialInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Details", b =>
                {
                    b.Property<long>("BillsOfExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("COM_DocumentAcceptance_MasterBillsOfExchangeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommercialInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillsOfExchangeId");

                    b.HasIndex("COM_DocumentAcceptance_MasterBillsOfExchangeId");

                    b.HasIndex("CommercialInvoiceId");

                    b.ToTable("COM_DocumentAcceptance_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Master", b =>
                {
                    b.Property<long>("BillsOfExchangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("BillsOfExchangeId")
                        .UseIdentityColumn();

                    b.Property<decimal?>("AcceptedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillMaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfExchangeRef")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("BillPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanysSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<string>("MasterLCRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NewCIAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalBBLCAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BillsOfExchangeId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("BBLCId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("CommercialCompanysSisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_DocumentAcceptance_Masters");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Main", b =>
                {
                    b.Property<int>("GroupLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupLCId")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupLCAmdNo")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("GroupLCRefName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalGroupLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalGroupLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalGroupLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GroupLCId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CompanySisterConcernCompanyId");

                    b.ToTable("COM_GroupLC_Mains");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Sub", b =>
                {
                    b.Property<int>("GroupLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("COM_GroupLC_MainsGroupLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.HasKey("GroupLCId");

                    b.HasIndex("COM_GroupLC_MainsGroupLCId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.ToTable("COM_GroupLC_Subs");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Details", b =>
                {
                    b.Property<int>("MachinaryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_MachinaryLC_MasterMachinaryLCId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_ProformaInvoicePIId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PIId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachinaryLCId");

                    b.HasIndex("COM_MachinaryLC_MasterMachinaryLCId");

                    b.HasIndex("COM_ProformaInvoicePIId");

                    b.ToTable("COM_MachinaryLC_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Master", b =>
                {
                    b.Property<int>("MachinaryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<decimal>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<string>("MachinaryLCNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("MachinaryLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachinaryLCPrintDocRef")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<decimal>("MachinaryLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MachinaryLCId");

                    b.HasIndex("CompanySisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("COM_MachinaryLC_Masters");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCDetails", b =>
                {
                    b.Property<int>("MachineryLCDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MachineryLCId")
                        .HasColumnType("int");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MachineryLCDetailId");

                    b.HasIndex("MachineryLCId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("COM_MachineryLCDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCMaster", b =>
                {
                    b.Property<int>("MachineryLCId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillMacturityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillPayDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefferredPaymentDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImportBillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportBillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("InsurancePayStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MachineryLCId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_MachineryLCMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC", b =>
                {
                    b.Property<int>("MasterLCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MasterLCID")
                        .UseIdentityColumn();

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerGroupID")
                        .HasColumnType("int");

                    b.Property<int>("BuyerID")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerLCRef")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("CommercialCompaniesSisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayListId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<string>("FileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCExpirydate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNOforImport")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int>("LCNatureId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LCOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCRefNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int>("LCStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LienBankId")
                        .HasColumnType("int");

                    b.Property<decimal>("MasterLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesContractIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MasterLCID");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("BuyerGroupID");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CommercialCompaniesSisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("LCNatureId");

                    b.HasIndex("LCStatusId");

                    b.HasIndex("LCTypeId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_MasterLCs");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLCExport", b =>
                {
                    b.Property<int>("MasterLCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExportOrderID")
                        .HasColumnType("int");

                    b.Property<string>("ExportOrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterLCID");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("ExportOrderID");

                    b.ToTable("COM_MasterLCExports");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC_Details", b =>
                {
                    b.Property<int>("MasterLCDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kimball")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<float>("OrderQty")
                        .HasColumnType("real");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MasterLCDetailsID");

                    b.HasIndex("MasterLCID");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_MasterLC_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice", b =>
                {
                    b.Property<int>("PIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNoLienBanksLienBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_GroupLC_MainsGroupLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CartonRollQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FileNo")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<string>("HSCode")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("ImportPONo")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<decimal?>("ImportQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImportRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("LCAF")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("LienBankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("MerchandiserName")
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PIDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PINatureId")
                        .HasColumnType("int");

                    b.Property<string>("PINo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("PIReceivingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("RevNo")
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Size")
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PIId");

                    b.HasIndex("BankAccountNoLienBanksLienBankAccountId");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("COM_GroupLC_MainsGroupLCId");

                    b.HasIndex("CompanySisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PINatureId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_ProformaInvoices");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice_Sub", b =>
                {
                    b.Property<int>("PIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Com_proformaInvoicesPIId")
                        .HasColumnType("int");

                    b.Property<int>("ItemDescId")
                        .HasColumnType("int");

                    b.HasKey("PIId");

                    b.HasIndex("Com_proformaInvoicesPIId");

                    b.HasIndex("ItemDescId");

                    b.ToTable("COM_ProformaInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.Cat_AccountType", b =>
                {
                    b.Property<int>("AccTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccTypeName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("AccTypeId");

                    b.ToTable("Cat_AccountType");
                });

            modelBuilder.Entity("GTERP.Models.Cat_AttBonusSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDifference")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManual")
                        .HasColumnType("bit");

                    b.Property<int>("LateAllow")
                        .HasColumnType("int");

                    b.Property<int>("LeaveAllow")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Cat_AttBonusSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_AttStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AttStatus")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("AttStatusDetails")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StatusId");

                    b.ToTable("Cat_AttStatus");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Bank", b =>
                {
                    b.Property<int>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BankAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BankShortName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BankId");

                    b.ToTable("Cat_Bank");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BankBranch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BranchAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BranchId");

                    b.ToTable("Cat_BankBranch");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BloodGroup", b =>
                {
                    b.Property<int>("BloodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BloodName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BloodNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BloodId");

                    b.ToTable("Cat_BloodGroup");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BuildingType", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BuildingNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BuildingShortName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BId");

                    b.ToTable("Cat_BuildingType");
                });

            modelBuilder.Entity("GTERP.Models.Cat_BusStop", b =>
                {
                    b.Property<int>("BusStopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BusStopName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("BusStopId");

                    b.ToTable("Cat_BusStop");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Catagory", b =>
                {
                    b.Property<int>("CatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatId");

                    b.ToTable("Cat_Catagory");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ColorId");

                    b.HasIndex("StyleId");

                    b.ToTable("Cat_Colors");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Cat_StrengthStId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DeptCLevelId")
                        .HasColumnType("int");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeptHODId")
                        .HasColumnType("int");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DeptId");

                    b.HasIndex("Cat_StrengthStId");

                    b.ToTable("Cat_Department");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Designation", b =>
                {
                    b.Property<int>("DesigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AttBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Cat_StrengthStId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DesigNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Gsmin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HolidayBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("NightAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProposedManPower")
                        .HasColumnType("int");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SlNo")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DesigId");

                    b.HasIndex("Cat_StrengthStId");

                    b.HasIndex("GradeId");

                    b.ToTable("Cat_Designation");
                });

            modelBuilder.Entity("GTERP.Models.Cat_District", b =>
                {
                    b.Property<int>("DistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DistNameB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DistNameShort")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DistId");

                    b.ToTable("Cat_District");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ElectricChargeSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("ElectricCharge")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersentage")
                        .HasColumnType("bit");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("LId");

                    b.ToTable("Cat_ElectricChargeSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Emp_Type", b =>
                {
                    b.Property<int>("EmpTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpTypeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpTypeNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.HasKey("EmpTypeId");

                    b.ToTable("Cat_Emp_Type");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Employment_Type", b =>
                {
                    b.Property<int>("EmploymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmploymentTypeName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmploymentTypeNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("EmploymentTypeId");

                    b.ToTable("Cat_Employment_Type");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ExchangeRate", b =>
                {
                    b.Property<int>("ExChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ExChangeId");

                    b.ToTable("Cat_ExchangeRate");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FloorNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("FloorId");

                    b.ToTable("Cat_Floor");
                });

            modelBuilder.Entity("GTERP.Models.Cat_GasChargeSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("GasCharge")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersentage")
                        .HasColumnType("bit");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("LId");

                    b.ToTable("Cat_GasChargeSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("GenderName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GenderNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("GenderId");

                    b.ToTable("Cat_Gender");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("GradeNameB")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double?>("MinGS")
                        .HasColumnType("float");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SlNo")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManPowerWorker")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GradeId");

                    b.ToTable("Cat_Grade");
                });

            modelBuilder.Entity("GTERP.Models.Cat_HRExpSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BId")
                        .HasColumnType("int");

                    b.Property<float>("BS")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<float>("HRExp")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersentage")
                        .HasColumnType("bit");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("LId");

                    b.ToTable("Cat_HRExpSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_HRSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<float>("BS")
                        .HasColumnType("real");

                    b.Property<float>("CA")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeductionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<float>("FA")
                        .HasColumnType("real");

                    b.Property<float>("HR")
                        .HasColumnType("real");

                    b.Property<bool>("IsBSPersentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCADifference")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCAPersentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFADifference")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFAPersentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHRPersentage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLateDedcution")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMAPersentage")
                        .HasColumnType("bit");

                    b.Property<int>("LId")
                        .HasColumnType("int");

                    b.Property<float>("MA")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("LId");

                    b.ToTable("Cat_HRSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ITComputationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiscalYear")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<float>("TaxComputation")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("dtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_ITComputationSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ITInvestmentItem", b =>
                {
                    b.Property<int>("ITInvestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("DPSAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DSSMFundAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("FYID")
                        .HasColumnType("int");

                    b.Property<decimal>("LIPAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NSCBAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ITInvestId");

                    b.HasIndex("EmpId");

                    b.HasIndex("FYID");

                    b.ToTable("Cat_ITInvestmentItem");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ITaxBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChqNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MonthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.ToTable("Cat_ITaxBank");
                });

            modelBuilder.Entity("GTERP.Models.Cat_IncenBand", b =>
                {
                    b.Property<int>("InBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncenBandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("InBId");

                    b.ToTable("Cat_IncenBand");
                });

            modelBuilder.Entity("GTERP.Models.Cat_IncomeTaxChk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStopTax")
                        .HasColumnType("bit");

                    b.Property<string>("ProssType")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Cat_IncomeTaxChk");
                });

            modelBuilder.Entity("GTERP.Models.Cat_InsurGrade", b =>
                {
                    b.Property<int>("InGId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InSurGrade")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("SlNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("InGId");

                    b.ToTable("Cat_InsurGrade");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Integration_Setting_Details", b =>
                {
                    b.Property<int>("IntegrationSettingDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ColNameFour")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameFourGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameOne")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameOneGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameThree")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameThreeGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameTwoGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ConditionCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegrationSettingMainId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubtract")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SelectColumnNameOne")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SelectStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WhereCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colNameFourValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameOneValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameThreeValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameTwoValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("IntegrationSettingDetailsId");

                    b.HasIndex("AccId");

                    b.HasIndex("IntegrationSettingMainId");

                    b.ToTable("Cat_Integration_Setting_Details");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Integration_Setting_Main", b =>
                {
                    b.Property<int>("IntegrationSettingMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IntegrationRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrationSettingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IntegrationTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MainSLNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PcName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("VoucherTypeId")
                        .HasColumnType("int");

                    b.HasKey("IntegrationSettingMainId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Cat_Integration_Setting_Mains");
                });

            modelBuilder.Entity("GTERP.Models.Cat_JobCardDynamic", b =>
                {
                    b.Property<int>("JcdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dateupdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHideWHDayOT")
                        .HasColumnType("bit");

                    b.Property<float?>("OTHrLimit")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("userId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JcdId");

                    b.ToTable("Cat_JobCardDynamic");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Leave_Type", b =>
                {
                    b.Property<int>("LTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsAllowHalfLeave")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidation")
                        .HasColumnType("bit");

                    b.Property<float?>("LDays")
                        .HasColumnType("real");

                    b.Property<string>("LTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LTypeNameShort")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("ValidDays")
                        .HasColumnType("int");

                    b.HasKey("LTypeId");

                    b.ToTable("Cat_Leave_Type");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LineNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LineId");

                    b.ToTable("Cat_Line");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Location", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameShort")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameShortB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LId");

                    b.ToTable("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_MailSettings", b =>
                {
                    b.Property<int>("MSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApplicant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstApprvd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHOD")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<string>("MailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("SenderAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MSId");

                    b.ToTable("Cat_MailSettings");
                });

            modelBuilder.Entity("GTERP.Models.Cat_MedicalDiagnosis", b =>
                {
                    b.Property<int>("DiagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiagName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DiagId");

                    b.ToTable("Cat_MedicalDiagnosis");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Meeting", b =>
                {
                    b.Property<int>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Meeting")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MeetingBangla")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MeetingType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MeetingId");

                    b.ToTable("Cat_Meeting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PFIntegrationSummary", b =>
                {
                    b.Property<int>("Cat_PFIntegrationSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Cat_PFIntegrationSummaryId");

                    b.HasIndex("AccId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("Cat_PFIntegrationSummary");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PayMode", b =>
                {
                    b.Property<int>("PayModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PayModeName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("PayModeId");

                    b.ToTable("Cat_PayMode");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PayrollIntegrationSummary", b =>
                {
                    b.Property<int>("Cat_PayrollIntegrationSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Cat_PayrollIntegrationSummaryId");

                    b.HasIndex("AccId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("Cat_PayrollIntegrationSummary");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PoliceStation", b =>
                {
                    b.Property<int>("PStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PStationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PStationNameB")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PStationId");

                    b.HasIndex("DistId");

                    b.ToTable("Cat_PoliceStation");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PostOffice", b =>
                {
                    b.Property<int>("POId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("POCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("POName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PONameB")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PStationId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("POId");

                    b.HasIndex("DistId");

                    b.HasIndex("PStationId");

                    b.ToTable("Cat_PostOffice");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Religion", b =>
                {
                    b.Property<int>("RelgionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReligionName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReligionNameB")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RelgionId");

                    b.ToTable("Cat_Religion");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ReportSignatory", b =>
                {
                    b.Property<int>("SignatoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory1B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory2B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory3B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory4B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory5")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory5B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory6")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Signatory6B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig1B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig2B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig3B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig4")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig4B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig5")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig5B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig6")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SignatoryDesig6B")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SignatoryId");

                    b.ToTable("Cat_ReportSignatory");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SalaryMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DtFrom")
                        .HasColumnType("int");

                    b.Property<int>("DtTo")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Cat_SalaryMonths");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Section", b =>
                {
                    b.Property<int>("SectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Cat_StrengthStId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectCLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("SectHODId")
                        .HasColumnType("int");

                    b.Property<string>("SectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SectNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SectId");

                    b.HasIndex("Cat_StrengthStId");

                    b.HasIndex("DeptId");

                    b.ToTable("Cat_Section");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LunchIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegHour")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftCat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftCode")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ShiftDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftLate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("ShiftOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TiffinIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn2")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ShiftId");

                    b.ToTable("Cat_Shift");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SizeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SizeId");

                    b.HasIndex("ColorId");

                    b.ToTable("Cat_Sizes");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SkillNameB")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SkillId");

                    b.ToTable("Cat_Skill");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Stamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStmap")
                        .HasColumnType("bit");

                    b.Property<int>("PayModeId")
                        .HasColumnType("int");

                    b.Property<double>("SalaryRangeFrom")
                        .HasColumnType("float");

                    b.Property<double>("SalaryRangeTo")
                        .HasColumnType("float");

                    b.Property<double>("Stamp")
                        .HasColumnType("float");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("PayModeId");

                    b.ToTable("Cat_Stamp");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Strength", b =>
                {
                    b.Property<int>("StId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("ManPower")
                        .HasColumnType("real");

                    b.Property<string>("RelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrengthType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StId");

                    b.ToTable("Cat_Strength");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DSLNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("GSMin")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedRate")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StyleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StyleNameB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StyleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StyleId");

                    b.ToTable("Cat_Style");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SubSection", b =>
                {
                    b.Property<int>("SubSectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<short>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("SubSectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubSectNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SubSectId");

                    b.HasIndex("DeptId");

                    b.HasIndex("SectId");

                    b.ToTable("Cat_SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SummerWinterAllowanceSetting", b =>
                {
                    b.Property<int>("SWAllowanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ProssType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RainCoatAndGumbootAllow")
                        .HasColumnType("real");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<float>("SummerAllow")
                        .HasColumnType("real");

                    b.Property<float>("TaxDiduction")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("VatDiduction")
                        .HasColumnType("real");

                    b.Property<float>("WinterAllow")
                        .HasColumnType("real");

                    b.HasKey("SWAllowanceId");

                    b.ToTable("Cat_SummerWinterAllowanceSetting");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitShortName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UnitId");

                    b.ToTable("Cat_Unit");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Variable", b =>
                {
                    b.Property<int>("VarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VarName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VarType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VarId");

                    b.ToTable("Cat_Variable");
                });

            modelBuilder.Entity("GTERP.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CategoryFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CategoryImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CategoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GTERP.Models.CertificateInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CertificateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("QrCodeUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CertificateInfos");
                });

            modelBuilder.Entity("GTERP.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GTERP.Models.CommercialLCType", b =>
                {
                    b.Property<int>("CommercialLCTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CommercialLCTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommercialLCTypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("CommercialLCTypeId");

                    b.ToTable("CommercialLCTypes");
                });

            modelBuilder.Entity("GTERP.Models.Company", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addvertise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("BaseComId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<byte[]>("ComImageHeader")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ComLogo")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("ComSign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyAddressBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CompanyNameBangla")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CompanySecretCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyShortName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContDesig")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ContPerson")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DecimalField")
                        .HasColumnType("int");

                    b.Property<string>("HeaderFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEPZ")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowCurrencySymbol")
                        .HasColumnType("bit");

                    b.Property<string>("LogoFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SignFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VoucherNoCreatedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("comEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("comFax")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comPhone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comWeb")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("isBarcode")
                        .HasColumnType("bit");

                    b.Property<bool>("isChequeDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("isCorporate")
                        .HasColumnType("bit");

                    b.Property<bool>("isIMEISale")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultipleWh")
                        .HasColumnType("bit");

                    b.Property<bool>("isOldDue")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSprint")
                        .HasColumnType("bit");

                    b.Property<bool>("isProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("isRestaurantSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isShoeSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isShortcutSale")
                        .HasColumnType("bit");

                    b.Property<bool>("isTouch")
                        .HasColumnType("bit");

                    b.Property<bool>("isVoucherDistributionEntry")
                        .HasColumnType("bit");

                    b.HasKey("ComId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("VoucherNoCreatedTypeId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("GTERP.Models.CompanyDetails", b =>
                {
                    b.Property<int>("ComDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcountantEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("AcountantName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AcountantPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyCode")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("HR_Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("HR_Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Hr_Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MD_Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("MD_Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MD_Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("NoE")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("YearOfEst")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("ComDetailsId");

                    b.HasIndex("CompanyCode");

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("GTERP.Models.CompanyPermission", b =>
                {
                    b.Property<int>("CompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("isChecked")
                        .HasColumnType("int");

                    b.Property<int>("isDefault")
                        .HasColumnType("int");

                    b.HasKey("CompanyPermissionId");

                    b.ToTable("CompanyPermissions");
                });

            modelBuilder.Entity("GTERP.Models.Consignee", b =>
                {
                    b.Property<int>("ConsigneeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ConsigneeId");

                    b.HasIndex("CountryId");

                    b.ToTable("Consignees");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Details", b =>
                {
                    b.Property<int>("CostAlloSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CostAlloMainId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsTableCaption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("DetailsTablePercentage")
                        .HasColumnType("real");

                    b.Property<int>("Details_AccId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("CostAlloSubId");

                    b.HasIndex("CostAlloMainId");

                    b.HasIndex("Details_AccId");

                    b.ToTable("CostAllocation_Details");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Distribute", b =>
                {
                    b.Property<int>("CostAlloDistributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Caption")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CostAlloMainId")
                        .HasColumnType("int");

                    b.Property<int?>("CostAlloSubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Details_AccId")
                        .HasColumnType("int");

                    b.Property<int?>("Distribute_AccId")
                        .HasColumnType("int");

                    b.Property<float?>("Percentage")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("CostAlloDistributeId");

                    b.HasIndex("CostAlloMainId");

                    b.HasIndex("CostAlloSubId");

                    b.HasIndex("Distribute_AccId");

                    b.ToTable("CostAllocation_Distribute");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Main", b =>
                {
                    b.Property<int>("CostAlloMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CostAlloMainId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("CostAllocation_Main");
                });

            modelBuilder.Entity("GTERP.Models.CostCalculated", b =>
                {
                    b.Property<int>("CostCalculatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CalculatedPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("CurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("CurrQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("GRRMainId")
                        .HasColumnType("int");

                    b.Property<int?>("IssueMainId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("PrevQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("StoreReqId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalPrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualProcess")
                        .HasColumnType("bit");

                    b.Property<bool>("isSubStore")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CostCalculatedId");

                    b.HasIndex("GRRMainId");

                    b.HasIndex("IssueMainId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreReqId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("CostCalculated");
                });

            modelBuilder.Entity("GTERP.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryShortName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FlagClass")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("GTERP.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("GTERP.Models.CurrencyTransaction", b =>
                {
                    b.Property<int>("CurrencyTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AmountForeign")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountLocalBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountLocalSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryIdForeign")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("tranDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("CurrencyTransactionId");

                    b.ToTable("CurrencyTransactions");
                });

            modelBuilder.Entity("GTERP.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DistId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDealer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PStationId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistId");

                    b.HasIndex("PStationId");

                    b.HasIndex("comid", "CustomerCode")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GTERP.Models.CustomerContact", b =>
                {
                    b.Property<int>("CustomerContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContactEmailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerContactId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts");
                });

            modelBuilder.Entity("GTERP.Models.CustomerPayment", b =>
                {
                    b.Property<int>("CustomerPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPaymentNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TrxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsageDuration")
                        .HasColumnType("int");

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("merchantInvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CustomerPaymentId");

                    b.ToTable("CustomerPayments");
                });

            modelBuilder.Entity("GTERP.Models.CustomerSerial", b =>
                {
                    b.Property<int>("CustomerSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CustomerSerialAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CustomerSerialMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("CustomerSerialName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerSerialNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CustomerSerialId");

                    b.ToTable("CustomerSerials");
                });

            modelBuilder.Entity("GTERP.Models.Daily_req_entry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Comid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost_head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Exc_A")
                        .HasColumnType("int");

                    b.Property<int>("Exc_B")
                        .HasColumnType("int");

                    b.Property<int>("Exc_C")
                        .HasColumnType("int");

                    b.Property<int>("Exc_G")
                        .HasColumnType("int");

                    b.Property<string>("Job_Loc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Job_Nat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Sup_A")
                        .HasColumnType("int");

                    b.Property<int>("Sup_B")
                        .HasColumnType("int");

                    b.Property<int>("Sup_C")
                        .HasColumnType("int");

                    b.Property<int>("Sup_G")
                        .HasColumnType("int");

                    b.Property<int>("Wor_A")
                        .HasColumnType("int");

                    b.Property<int>("Wor_B")
                        .HasColumnType("int");

                    b.Property<int>("Wor_C")
                        .HasColumnType("int");

                    b.Property<int>("Wor_G")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("deptid")
                        .HasColumnType("int");

                    b.Property<int>("desigid")
                        .HasColumnType("int");

                    b.Property<int>("unitid")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Daily_req_entry");
                });

            modelBuilder.Entity("GTERP.Models.DayList", b =>
                {
                    b.Property<int>("DayListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DayListGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayListName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DayListShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("DayListId");

                    b.ToTable("DayLists");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryChallan", b =>
                {
                    b.Property<int>("DeliveryChallanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ChallanNo")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DOId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeliveryQty")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DeliveryChallanId");

                    b.HasIndex("DOId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("ComId", "ChallanNo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("DeliveryChallan");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryOrder", b =>
                {
                    b.Property<int>("DOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("BookingId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DODate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DONo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PayInSlipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayInSlipNo")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("QtyInWordsBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtyInWordsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RemainingQty")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RepresentativeId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("TotalPriceInWordsBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPriceInWordsEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DOId");

                    b.HasIndex("AccId");

                    b.HasIndex("BookingId");

                    b.HasIndex("RepresentativeId");

                    b.HasIndex("ComId", "DONo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("DeliveryOrder");
                });

            modelBuilder.Entity("GTERP.Models.Depreciation", b =>
                {
                    b.Property<int>("DepreciationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DMId")
                        .HasColumnType("int");

                    b.Property<decimal>("DRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DSDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EVAULife")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<int>("FoDId")
                        .HasColumnType("int");

                    b.Property<int>("TNoD")
                        .HasColumnType("int");

                    b.HasKey("DepreciationId");

                    b.HasIndex("DMId");

                    b.HasIndex("FA_DetailsId");

                    b.HasIndex("FA_MasterId");

                    b.HasIndex("FoDId");

                    b.ToTable("Depreciations");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationFrequency", b =>
                {
                    b.Property<int>("FoDId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CentinalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompoundingPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DSADay")
                        .HasColumnType("int");

                    b.Property<int>("DSAMonth")
                        .HasColumnType("int");

                    b.Property<string>("FractionOfOneYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FoDId");

                    b.ToTable("depreciationFrequencies");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationMethod", b =>
                {
                    b.Property<int>("DMId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DMName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DMId");

                    b.ToTable("DepreciationMethods");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationSchedule", b =>
                {
                    b.Property<int>("DepreciationScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulateDepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccumulateDepBooked")
                        .HasColumnType("int");

                    b.Property<int>("AccumulateDepRemain")
                        .HasColumnType("int");

                    b.Property<decimal>("DepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<bool>("JournalEntry")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepreciationScheduleId");

                    b.HasIndex("FA_DetailsId");

                    b.ToTable("DepreciationSchedules");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationScheduleSales", b =>
                {
                    b.Property<int>("DepreciationScheduleSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulateDepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccumulateDepBooked")
                        .HasColumnType("int");

                    b.Property<int>("AccumulateDepRemain")
                        .HasColumnType("int");

                    b.Property<decimal>("DepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_SellId")
                        .HasColumnType("int");

                    b.Property<bool>("JournalEntry")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepreciationScheduleSaleId");

                    b.HasIndex("FA_SellId");

                    b.ToTable("DepreciationScheduleSales");
                });

            modelBuilder.Entity("GTERP.Models.Destination", b =>
                {
                    b.Property<int>("DestinationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("DestinationNameSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DestinationID");

                    b.HasIndex("CountryId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("GTERP.Models.DistrictWiseBooking", b =>
                {
                    b.Property<int>("DistWiseBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AllotmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Qty")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DistWiseBookingId");

                    b.HasIndex("DistId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("DistrictWiseBooking");
                });

            modelBuilder.Entity("GTERP.Models.DocumentStatus", b =>
                {
                    b.Property<int>("DocumentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DocumentStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("DocumentStatusId");

                    b.ToTable("DocumentStatuss");
                });

            modelBuilder.Entity("GTERP.Models.DownTime", b =>
                {
                    b.Property<int>("DownTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("FromTime")
                        .HasColumnType("time");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("StrikeDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ToTime")
                        .HasColumnType("time");

                    b.Property<string>("TotalDownTime")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DownTimeId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("ReasonId");

                    b.ToTable("DownTime");
                });

            modelBuilder.Entity("GTERP.Models.DownTimeReason", b =>
                {
                    b.Property<int>("DownTimeReasonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ReasonB")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SLNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SLNoB")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("DownTimeReasonId");

                    b.ToTable("DownTimeReason");
                });

            modelBuilder.Entity("GTERP.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BaseEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EmployeeImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubSectId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BaseEmployeeId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("SubSectId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("GTERP.Models.ErrorLog", b =>
                {
                    b.Property<int>("ErrorLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ErrorLogId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceDetails", b =>
                {
                    b.Property<int>("ExportInvoiceDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BoxHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_MasterLC_DetailMasterLCDetailsID")
                        .HasColumnType("int");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DocumentSendDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMastersInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceQtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MasterLCDetailsID")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SLNO")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExportInvoiceDetailsId");

                    b.HasIndex("COM_MasterLC_DetailMasterLCDetailsID");

                    b.HasIndex("ExportInvoiceMastersInvoiceId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("ExportInvoiceDetailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("BalanceShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BankAccountNosBankAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerGroupId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CargoHandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CartonMeasurement")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DestinationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExfactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("FirstNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<string>("GoodsDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MainMark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ManufactureId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OnboardDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PackingType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTermsManual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("SecoundNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Session")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<string>("ShipmentAuthorization")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<long?>("ThirdNotifyPartyId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("TotalCartonQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQtyPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalShipped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VesselName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VoyageNo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("BankAccountNosBankAccountId");

                    b.HasIndex("BuyerGroupId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("FirstNotifyPartyId");

                    b.HasIndex("ManufactureId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("SecoundNotifyPartyId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ThirdNotifyPartyId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("ExportInvoiceMasters");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoicePackingList", b =>
                {
                    b.Property<int>("ExportInvoicePackingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BoxHeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLengthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<int>("ExportInvoiceDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SLNOLinePacking")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UPCNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExportInvoicePackingListId");

                    b.HasIndex("ExportInvoiceDetailsId");

                    b.ToTable("ExportInvoicePackingLists");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrder", b =>
                {
                    b.Property<int>("ExportOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerContactPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExFactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportOrderCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportOrderStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("POLineNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PoDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int>("StyleID")
                        .HasColumnType("int");

                    b.Property<int?>("StyleInformationStyleId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ExportOrderID");

                    b.HasIndex("DestinationID");

                    b.HasIndex("ExportOrderCategoryId");

                    b.HasIndex("ExportOrderStatusId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("StyleInformationStyleId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrderCategory", b =>
                {
                    b.Property<int>("ExportOrderCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ExportOrderCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExportOrderCategoryShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ExportOrderCategoryId");

                    b.ToTable("ExportOrderCategorys");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrderStatus", b =>
                {
                    b.Property<int>("ExportOrderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ExportOrderStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExportOrderStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ExportOrderStatusId");

                    b.ToTable("ExportOrderStatus");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationDetails", b =>
                {
                    b.Property<int>("RealizationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportRealizationMasterRealizationId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("RealizationId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RealizationDetailsId");

                    b.HasIndex("ExportRealizationMasterRealizationId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("ExportRealizationDetailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationMaster", b =>
                {
                    b.Property<int>("RealizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PendingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RealizationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RealizedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalExportInvoice")
                        .HasColumnType("int");

                    b.Property<int?>("TotalOrderQty")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RealizationId");

                    b.HasIndex("BuyerInformationBuyerId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExportRealizationMasters");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Details", b =>
                {
                    b.Property<int>("ExportRealizationDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportInvoiceMasterInvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportRealization_MastersRealizationId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("RealizationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceivingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExportRealizationDetailsId");

                    b.HasIndex("ExportInvoiceMasterInvoiceId");

                    b.HasIndex("ExportRealization_MastersRealizationId");

                    b.ToTable("ExportRealization_Detailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Master", b =>
                {
                    b.Property<int>("RealizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankRef")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("COM_MasterLCMasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CourierDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourierNo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportFormNo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<DateTime?>("FBPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FBPNo")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("FileNumber")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RealizationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivingVlaue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<decimal>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RealizationId");

                    b.HasIndex("COM_MasterLCMasterLCID");

                    b.ToTable("ExportRealization_Masters");
                });

            modelBuilder.Entity("GTERP.Models.FA_Calculation", b =>
                {
                    b.Property<int>("FA_CalculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CalculatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FA_CalculationId");

                    b.HasIndex("FA_DetailsId");

                    b.HasIndex("FA_MasterId");

                    b.ToTable("FA_Calculation");
                });

            modelBuilder.Entity("GTERP.Models.FA_Dep_Status", b =>
                {
                    b.Property<int>("FA_Dep_StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FA_Dep_StatusId");

                    b.ToTable("fA_Dep_Statuses");
                });

            modelBuilder.Entity("GTERP.Models.FA_Details", b =>
                {
                    b.Property<int>("FA_DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulatedDepreciatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignToDept")
                        .HasColumnType("int");

                    b.Property<int?>("AssignToSection")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepCalFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EVAULife")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Emp_InfoEmpId")
                        .HasColumnType("int");

                    b.Property<int>("FA_Dep_StatusId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDepRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("IssuNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("MRRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MRRNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RemainingMonth")
                        .HasColumnType("int");

                    b.Property<int>("RemainingYear")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("UsefullLife")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("WrittenDownValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FA_DetailsId");

                    b.HasIndex("AssignToDept");

                    b.HasIndex("AssignToSection");

                    b.HasIndex("Emp_InfoEmpId");

                    b.HasIndex("FA_Dep_StatusId");

                    b.HasIndex("FA_MasterId");

                    b.ToTable("FA_Details");
                });

            modelBuilder.Entity("GTERP.Models.FA_Master", b =>
                {
                    b.Property<int>("FA_MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccId_AccumulatedDepreciation")
                        .HasColumnType("int");

                    b.Property<int?>("AccId_DepreciationExpense")
                        .HasColumnType("int");

                    b.Property<string>("AnticipatedScrapValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlCodeNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CostCenter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountyOfOrigin")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("DMId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepreciationRate")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("DisposalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErectionContractor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FOD")
                        .HasColumnType("int");

                    b.Property<string>("Folio")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ForeignExchangeCost")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdentificationCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInProcess")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Maker")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PONoAndDate")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SubCodeNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("FA_MasterId");

                    b.HasIndex("AccId_AccumulatedDepreciation");

                    b.HasIndex("AccId_DepreciationExpense");

                    b.HasIndex("DMId");

                    b.HasIndex("FOD");

                    b.HasIndex("ProductId");

                    b.ToTable("fA_Masters");
                });

            modelBuilder.Entity("GTERP.Models.FA_ProcessRecord", b =>
                {
                    b.Property<int>("ProcessRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DSDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextDepDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProcessRecordId");

                    b.HasIndex("FA_DetailsId");

                    b.ToTable("FA_ProcessRecords");
                });

            modelBuilder.Entity("GTERP.Models.FA_Sell", b =>
                {
                    b.Property<int>("FA_SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepCalFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FA_Dep_StatusId")
                        .HasColumnType("int");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDepRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MRRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MRRNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SellsPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FA_SellId");

                    b.HasIndex("FA_Dep_StatusId");

                    b.HasIndex("FA_DetailsId");

                    b.HasIndex("FA_MasterId");

                    b.ToTable("fA_Sells");
                });

            modelBuilder.Entity("GTERP.Models.FileCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ModuleCourseId")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleCourseId");

                    b.ToTable("FileCollection");
                });

            modelBuilder.Entity("GTERP.Models.FileDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("DBFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupportId");

                    b.ToTable("FileDetails");
                });

            modelBuilder.Entity("GTERP.Models.GatePass", b =>
                {
                    b.Property<int>("GatePassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("DriverMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GatePassDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GatePassFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GatePassNo")
                        .HasColumnType("int");

                    b.Property<int?>("PoliceStationId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalQty")
                        .HasColumnType("real");

                    b.Property<string>("TruckNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GatePassId");

                    b.HasIndex("ComId", "GatePassNo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("GatePass");
                });

            modelBuilder.Entity("GTERP.Models.GatePassMs", b =>
                {
                    b.Property<int>("GatePassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentDeptId")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<short?>("GatePassNo")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reasone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RequestBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int?>("SectionSectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GatePassID");

                    b.HasIndex("DepartmentDeptId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SectionSectId");

                    b.ToTable("gatePassMs");
                });

            modelBuilder.Entity("GTERP.Models.GatePassSub", b =>
                {
                    b.Property<int>("GatePassSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("BalanceQty")
                        .HasColumnType("real");

                    b.Property<int>("DeliveryChallanId")
                        .HasColumnType("int");

                    b.Property<int>("GatePassId")
                        .HasColumnType("int");

                    b.Property<float>("TruckLoadQty")
                        .HasColumnType("real");

                    b.HasKey("GatePassSubId");

                    b.HasIndex("DeliveryChallanId");

                    b.HasIndex("GatePassId");

                    b.ToTable("GatePassSub");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveMain", b =>
                {
                    b.Property<int>("GRRMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CertificateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertificateNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ChallanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChallanNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("ConvertionRate")
                        .HasColumnType("real");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpectedReciveDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GRRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GRRNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GRRRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GateInHouseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirectGRR")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LPNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManualSupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("NetGRRValue")
                        .HasColumnType("real");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderMainId")
                        .HasColumnType("int");

                    b.Property<int?>("PurReqId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<float>("TotalGRRValue")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GRRMainId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeptId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("PurOrderMainId");

                    b.HasIndex("PurReqId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ComId", "GRRNo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("GoodsReceiveMain");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveProvision", b =>
                {
                    b.Property<int>("GRRProvisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DebitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GRRMainId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("GRRProvisionId");

                    b.HasIndex("AccId");

                    b.HasIndex("GRRMainId");

                    b.ToTable("GoodsReceiveProvision");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveSub", b =>
                {
                    b.Property<int>("GRRSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Addition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Damage")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Deduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GRRMainId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderSubId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quality")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("Received")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RequisitionQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VatParcent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("GRRSubId");

                    b.HasIndex("GRRMainId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurOrderSubId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("GoodsReceiveSub");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveSubWarehouse", b =>
                {
                    b.Property<int>("GRRSubWarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("GRRQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("GRRSubId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("GRRSubWarehouseId");

                    b.HasIndex("GRRSubId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("GoodsReceiveSubWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.Gratuity_Ledger", b =>
                {
                    b.Property<int>("GratuityLedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrinciple")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("GratuityLedgerId");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Gratuity_Ledgers");
                });

            modelBuilder.Entity("GTERP.Models.HR_ApprovalSetting", b =>
                {
                    b.Property<int>("ApprovalSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ApprovalType")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstLeaveApprove")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApprovalSettingId");

                    b.ToTable("HR_ApprovalSettings");
                });

            modelBuilder.Entity("GTERP.Models.HR_AttFixed", b =>
                {
                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<float>("OT")
                        .HasColumnType("real");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<TimeSpan>("OTHourInTime")
                        .HasColumnType("time");

                    b.Property<float>("OTHourPrev")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusPrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeInPrev")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOutPrev")
                        .HasColumnType("time");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("AttId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_AttFixed");
                });

            modelBuilder.Entity("GTERP.Models.HR_Cat_Shift_SP", b =>
                {
                    b.Property<int>("SP_ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegHour")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftLate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftOut")
                        .HasColumnType("datetime2");

                    b.HasKey("SP_ShiftId");

                    b.HasIndex("ShiftId");

                    b.ToTable("HR_Cat_Shift_SP");
                });

            modelBuilder.Entity("GTERP.Models.HR_CustomReport", b =>
                {
                    b.Property<int>("CustomReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("CompanyComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ReportType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CustomReportId");

                    b.HasIndex("CompanyComId");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("ReportId");

                    b.ToTable("HR_CustomReport");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Address", b =>
                {
                    b.Property<int>("EmpAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCurrCityVill")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpCurrDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPSId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpPerCityVill")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpPerDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPSId")
                        .HasColumnType("int");

                    b.Property<string>("EmpRemarksCurr")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpRemarksPer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PcName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("EmpAddId");

                    b.HasIndex("EmpCurrDistId");

                    b.HasIndex("EmpCurrPOId");

                    b.HasIndex("EmpCurrPSId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("EmpPerDistId");

                    b.HasIndex("EmpPerPOId");

                    b.HasIndex("EmpPerPSId");

                    b.ToTable("HR_Emp_Address");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ArrearBill", b =>
                {
                    b.Property<int>("ArrBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Adv")
                        .HasColumnType("real");

                    b.Property<float?>("BSDiff")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("DAAllowDed")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFromMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtToMonth")
                        .HasColumnType("datetime2");

                    b.Property<float?>("EduAllowDiff")
                        .HasColumnType("real");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("HRDiff")
                        .HasColumnType("real");

                    b.Property<float?>("IncomeTax")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float?>("LastMonthDays")
                        .HasColumnType("real");

                    b.Property<float?>("MADiff")
                        .HasColumnType("real");

                    b.Property<float?>("NetArrearPayable")
                        .HasColumnType("real");

                    b.Property<float?>("NewBS")
                        .HasColumnType("real");

                    b.Property<float?>("NewEduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("NewHR")
                        .HasColumnType("real");

                    b.Property<float?>("NewMA")
                        .HasColumnType("real");

                    b.Property<float?>("NewPF")
                        .HasColumnType("real");

                    b.Property<float?>("NewRiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("NewTiffinAllow")
                        .HasColumnType("real");

                    b.Property<float?>("NewWashingAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OldBS")
                        .HasColumnType("real");

                    b.Property<float?>("OldEduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OldHR")
                        .HasColumnType("real");

                    b.Property<float?>("OldMA")
                        .HasColumnType("real");

                    b.Property<float?>("OldPF")
                        .HasColumnType("real");

                    b.Property<float?>("OldRiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OldTiffinAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OldWashingAllow")
                        .HasColumnType("real");

                    b.Property<float?>("PFAdd")
                        .HasColumnType("real");

                    b.Property<float?>("PFDiff")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float?>("RiskAllowDiff")
                        .HasColumnType("real");

                    b.Property<float?>("Stamp")
                        .HasColumnType("real");

                    b.Property<float?>("TiffinAllowDiff")
                        .HasColumnType("real");

                    b.Property<float?>("TotalArrearDeduction")
                        .HasColumnType("real");

                    b.Property<float?>("TotalArrearPayable")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearBS")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearEduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearHR")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearMA")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearRiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TtlArrearTiffinAllow")
                        .HasColumnType("real");

                    b.Property<float>("TtlDay")
                        .HasColumnType("real");

                    b.Property<float>("TtlMonth")
                        .HasColumnType("real");

                    b.Property<float?>("TtlPF")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("WashingAllowDiff")
                        .HasColumnType("real");

                    b.Property<float?>("ttlArrearWashingAllow")
                        .HasColumnType("real");

                    b.HasKey("ArrBillId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_ArrearBill");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BankInfo", b =>
                {
                    b.Property<int>("BankInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int?>("PayModeId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RoutingNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("BankInfoId");

                    b.HasIndex("AccTypeId");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("PayModeId");

                    b.ToTable("HR_Emp_BankInfo");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Behave", b =>
                {
                    b.Property<int>("BehaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ActionResult")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NoticeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ViolenceDesc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("dtEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtNotice")
                        .HasColumnType("datetime2");

                    b.HasKey("BehaveId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Behave");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BusinessAllow", b =>
                {
                    b.Property<int>("BAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("ttlBusinessDuty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BAId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_BusinessAllow");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Devices", b =>
                {
                    b.Property<int>("EmpDeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dtIssue")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpDeviceId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Devices");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FilePath")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("RefCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VarType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("HR_Emp_Document");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Education", b =>
                {
                    b.Property<int>("EmpEduId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BoardName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExamName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ExamResult")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("InstituteName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MajorSub")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PassingYear")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtStart")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpEduId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Education");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Experience", b =>
                {
                    b.Property<int>("EmpExpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFromJob")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToJob")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExpYear")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PcName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrevCompany")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrevDesignation")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrevSalary")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpExpId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Experience");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Family", b =>
                {
                    b.Property<int>("EmpFamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildBirthCer1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer3")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer4")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("EmpChildDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB4")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildEdu1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu3")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu4")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName3")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName4")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFather")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFatherB")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFatherMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpFatherNID")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpMother")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpMotherB")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpMotherMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpMotherNID")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpSpouse")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpSpouseB")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpSpouseMobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpSpouseNID")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PcName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("EmpFamilyId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Family");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Image", b =>
                {
                    b.Property<int>("EmpImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte[]>("EmpImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EmpSign")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpSignExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpSignPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("EmpImageId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Image");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Increment", b =>
                {
                    b.Property<int>("IncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("BSDiff")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPromotion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("HRDiff")
                        .HasColumnType("real");

                    b.Property<float?>("HRExpDiff")
                        .HasColumnType("real");

                    b.Property<float?>("HRExpOtherDiff")
                        .HasColumnType("real");

                    b.Property<int?>("IncTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<float?>("MADiff")
                        .HasColumnType("real");

                    b.Property<double?>("NewBS")
                        .HasColumnType("float");

                    b.Property<double?>("NewDA")
                        .HasColumnType("float");

                    b.Property<int?>("NewDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("NewDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("NewEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("NewFA")
                        .HasColumnType("float");

                    b.Property<int?>("NewGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("NewHR")
                        .HasColumnType("float");

                    b.Property<double?>("NewHRExp")
                        .HasColumnType("float");

                    b.Property<double?>("NewHRExpOther")
                        .HasColumnType("float");

                    b.Property<double?>("NewMA")
                        .HasColumnType("float");

                    b.Property<double?>("NewPA")
                        .HasColumnType("float");

                    b.Property<double?>("NewSalary")
                        .HasColumnType("float");

                    b.Property<int?>("NewSectId")
                        .HasColumnType("int");

                    b.Property<double?>("NewTA")
                        .HasColumnType("float");

                    b.Property<int?>("NewUnitId")
                        .HasColumnType("int");

                    b.Property<double?>("OldBS")
                        .HasColumnType("float");

                    b.Property<double?>("OldDA")
                        .HasColumnType("float");

                    b.Property<int?>("OldDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("OldDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("OldEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("OldFA")
                        .HasColumnType("float");

                    b.Property<int?>("OldGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("OldHR")
                        .HasColumnType("float");

                    b.Property<double?>("OldHRExp")
                        .HasColumnType("float");

                    b.Property<double?>("OldHRExpOther")
                        .HasColumnType("float");

                    b.Property<double?>("OldMA")
                        .HasColumnType("float");

                    b.Property<double?>("OldPA")
                        .HasColumnType("float");

                    b.Property<double?>("OldSalary")
                        .HasColumnType("float");

                    b.Property<int?>("OldSectId")
                        .HasColumnType("int");

                    b.Property<double?>("OldTA")
                        .HasColumnType("float");

                    b.Property<int?>("OldUnitId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<float?>("Percentage")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IncId");

                    b.HasIndex("EmpId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL");

                    b.HasIndex("IncTypeId");

                    b.HasIndex("NewDeptId");

                    b.HasIndex("NewDesigId");

                    b.HasIndex("NewEmpTypeId");

                    b.HasIndex("NewGenderId");

                    b.HasIndex("NewSectId");

                    b.HasIndex("NewUnitId");

                    b.HasIndex("OldDeptId");

                    b.HasIndex("OldDesigId");

                    b.HasIndex("OldEmpTypeId");

                    b.HasIndex("OldGenderId");

                    b.HasIndex("OldSectId");

                    b.HasIndex("OldUnitId");

                    b.ToTable("HR_Emp_Increment");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Info", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AltitudeData")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BloodId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<int>("DesigId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtConfirm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtLocalJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPromotion")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpPerZip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpPhone1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpPhone2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpRemarks")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<int?>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("FinalAprvId")
                        .HasColumnType("int");

                    b.Property<string>("FingerId")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("FirstAprvId")
                        .HasColumnType("int");

                    b.Property<int?>("FloorId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllowOT")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCasual")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHOD")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHolidayAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncentiveBns")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNightAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStatus")
                        .HasColumnType("bit");

                    b.Property<int?>("JobNatureType")
                        .HasColumnType("int");

                    b.Property<int?>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("LinkUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ManageType")
                        .HasColumnType("int");

                    b.Property<string>("MobileAttendence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("RelgionId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("VendorType")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.HasIndex("BloodId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("EmpTypeId");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("FloorId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GradeId");

                    b.HasIndex("LineId");

                    b.HasIndex("RelgionId");

                    b.HasIndex("SectId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SkillId");

                    b.HasIndex("SubSectId");

                    b.HasIndex("UnitId");

                    b.HasIndex("VendorType");

                    b.ToTable("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ML", b =>
                {
                    b.Property<int>("MLId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("BS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesigId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTo")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FirstAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("FirstDays")
                        .HasColumnType("real");

                    b.Property<bool>("FirstPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("FirstPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FirstSalMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InputType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("LastPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LvId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("NoPay")
                        .HasColumnType("bit");

                    b.Property<decimal>("OtherBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherDeduct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecNname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SecondAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("SecondDays")
                        .HasColumnType("real");

                    b.Property<string>("SecondSalMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<decimal>("ThirdAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ThirdDays")
                        .HasColumnType("real");

                    b.Property<string>("ThirdSalMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDay")
                        .HasColumnType("float");

                    b.Property<decimal>("TtlAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TtlDays")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<double>("lvApp")
                        .HasColumnType("float");

                    b.Property<string>("lvType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MLId");

                    b.HasIndex("DesigId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LvId");

                    b.HasIndex("SectId");

                    b.ToTable("HR_Emp_ML");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Nominee", b =>
                {
                    b.Property<int>("EmpNomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpNomineeAddress1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpNomineeAddress2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EmpNomineeDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpNomineeDOB2")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpNomineeJobType1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNomineeJobType2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNomineeMobile1")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpNomineeMobile2")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpNomineeNID1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpNomineeNID2")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpNomineeName1")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpNomineeName2")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpNomineePercentage1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineePercentage2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineeRelation1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineeRelation2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpNomId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Nominee");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PF_OPBal", b =>
                {
                    b.Property<int>("PFOPBalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreditAccId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DebitAccId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("PFAdd")
                        .HasColumnType("real");

                    b.Property<float>("PFComp")
                        .HasColumnType("real");

                    b.Property<int?>("PFOPBalYID")
                        .HasColumnType("int");

                    b.Property<float>("PFOwn")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PFOPBalId");

                    b.HasIndex("CreditAccId");

                    b.HasIndex("DebitAccId");

                    b.HasIndex("EmpId");

                    b.HasIndex("PFOPBalYID");

                    b.ToTable("HR_Emp_PF_OPBal");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PersonalInfo", b =>
                {
                    b.Property<int>("EmpPersInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<string>("BirthCertificate")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Caste")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ChildNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPF")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmergencyContactNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpFileNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCodeBCIC")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Grade")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("GratuityFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("GratuityFundTransferYId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationSign")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsAllowPF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGratuityFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGratuityFundTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPFFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPFFundTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFFundTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MedicalBookNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NickName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PFFileNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PFFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("PFFundTransferYId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("PoliceVerificationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RelationEmerContact")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TINNo")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("WFFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("WFFundTransferYId")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDay")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDay2")
                        .HasColumnType("int");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("EmpPersInfoId");

                    b.HasIndex("BId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("GratuityFinalYId");

                    b.HasIndex("GratuityFundTransferYId");

                    b.HasIndex("PFFinalYId");

                    b.HasIndex("PFFundTransferYId");

                    b.HasIndex("WFFinalYId");

                    b.HasIndex("WFFundTransferYId");

                    b.ToTable("HR_Emp_PersonalInfo");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Projects", b =>
                {
                    b.Property<int>("EmpProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectRoll")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dtEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtStart")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpProjectId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Projects");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Recreation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtReference")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecreation")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Recreation");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Released", b =>
                {
                    b.Property<int>("RelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtReleased")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtSubmit")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("RelType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RelId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Released");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("AdvAgainstExp")
                        .HasColumnType("real");

                    b.Property<float?>("AdvFacility")
                        .HasColumnType("real");

                    b.Property<float?>("AdvInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AdvWagesDed")
                        .HasColumnType("real");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ArrearBasic")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearBonus")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AttAllow")
                        .HasColumnType("real");

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<float>("BasicSalary")
                        .HasColumnType("real");

                    b.Property<float?>("CanteenAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ChargeAllow")
                        .HasColumnType("real");

                    b.Property<float?>("CheForum")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalAsso")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalForum")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ComPfCount")
                        .HasColumnType("real");

                    b.Property<float?>("ContainSub")
                        .HasColumnType("real");

                    b.Property<float?>("ConvAllowDed")
                        .HasColumnType("real");

                    b.Property<float?>("ConveyanceAllow")
                        .HasColumnType("real");

                    b.Property<float?>("DapEmpClub")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DearnessAllow")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBns")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBonusOf")
                        .HasColumnType("real");

                    b.Property<float?>("DiplomaassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("Dishantenna")
                        .HasColumnType("real");

                    b.Property<float?>("Donation")
                        .HasColumnType("real");

                    b.Property<float?>("EduAlloDed")
                        .HasColumnType("real");

                    b.Property<float?>("EduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ElectricCharge")
                        .HasColumnType("real");

                    b.Property<float?>("ElectricChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("EmpClubDed")
                        .HasColumnType("real");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("EnggassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("FesBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("FestivalBonus")
                        .HasColumnType("real");

                    b.Property<float?>("FoodAllow")
                        .HasColumnType("real");

                    b.Property<int?>("GLId")
                        .HasColumnType("int");

                    b.Property<float?>("GasAllow")
                        .HasColumnType("real");

                    b.Property<float?>("GasChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("Gascharge")
                        .HasColumnType("real");

                    b.Property<int?>("HBLId")
                        .HasColumnType("int");

                    b.Property<int?>("HBLId2")
                        .HasColumnType("int");

                    b.Property<int?>("HBLId3")
                        .HasColumnType("int");

                    b.Property<float?>("HRExpensesOther")
                        .HasColumnType("real");

                    b.Property<float?>("HazScheme")
                        .HasColumnType("real");

                    b.Property<float?>("HbloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("HouseRent")
                        .HasColumnType("real");

                    b.Property<float?>("HrExp")
                        .HasColumnType("real");

                    b.Property<float?>("IncBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("IncomeTax")
                        .HasColumnType("real");

                    b.Property<bool>("IsAdvAgainstExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvFacility")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvWagesDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBasic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanteenAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChargAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComPfcount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContainSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllowDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDapEmpClub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDearAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBns")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBonusOf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiplomaassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDishantenna")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDonation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAlloDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricCharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpClubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnggassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFesBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFestivalBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGascharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHRExpensesOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHazScheme")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHbloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHr")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHrexp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncBonusDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncomeTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaterialLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMcloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalLoanDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMobileAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMoktab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNightAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffWlfareAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficeclubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwaSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersonalPay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfloann")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurChange")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurchaseAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevenueStamp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRiskAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalaryAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSiftAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTAExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTelcharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTiffinAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrncharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnionSubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWagesaAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWashingAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaterChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWatercharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfsub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWpfloanDed")
                        .HasColumnType("bit");

                    b.Property<int?>("LId1")
                        .HasColumnType("int");

                    b.Property<int?>("LId2")
                        .HasColumnType("int");

                    b.Property<int?>("LId3")
                        .HasColumnType("int");

                    b.Property<int?>("MCLId")
                        .HasColumnType("int");

                    b.Property<float?>("MadicalAllow")
                        .HasColumnType("real");

                    b.Property<float?>("MaterialLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("McloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalExp")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MiscAdd")
                        .HasColumnType("real");

                    b.Property<float?>("MiscDed")
                        .HasColumnType("real");

                    b.Property<float?>("MobileAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Moktab")
                        .HasColumnType("real");

                    b.Property<float?>("NightAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OffWlfareAsso")
                        .HasColumnType("real");

                    b.Property<float?>("OfficeclubDed")
                        .HasColumnType("real");

                    b.Property<float?>("OwaSub")
                        .HasColumnType("real");

                    b.Property<int?>("PFLId")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId2")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId3")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float?>("PersonalPay")
                        .HasColumnType("real");

                    b.Property<float?>("Pf")
                        .HasColumnType("real");

                    b.Property<float?>("PfAdd")
                        .HasColumnType("real");

                    b.Property<float?>("PfloannDed")
                        .HasColumnType("real");

                    b.Property<float?>("PurChange")
                        .HasColumnType("real");

                    b.Property<float?>("PurchaseAdv")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RevenueStamp")
                        .HasColumnType("real");

                    b.Property<float?>("RiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("SalaryAdv")
                        .HasColumnType("real");

                    b.Property<float?>("SiftAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TAExpense")
                        .HasColumnType("real");

                    b.Property<float?>("TeliphoneCharge")
                        .HasColumnType("real");

                    b.Property<float?>("TiffinAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Transportcharge")
                        .HasColumnType("real");

                    b.Property<float?>("UnionSubDed")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("WFL")
                        .HasColumnType("real");

                    b.Property<float?>("WagesaAdv")
                        .HasColumnType("real");

                    b.Property<float?>("WashingAllow")
                        .HasColumnType("real");

                    b.Property<float?>("WaterChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("Watercharge")
                        .HasColumnType("real");

                    b.Property<int?>("WelfareLId")
                        .HasColumnType("int");

                    b.Property<float?>("WfloanLocal")
                        .HasColumnType("real");

                    b.Property<float?>("WfloanOther")
                        .HasColumnType("real");

                    b.Property<float?>("Wfsub")
                        .HasColumnType("real");

                    b.Property<float?>("WpfloanDed")
                        .HasColumnType("real");

                    b.HasKey("SalaryId");

                    b.HasIndex("BId");

                    b.HasIndex("EmpId");

                    b.HasIndex("GLId");

                    b.HasIndex("HBLId");

                    b.HasIndex("HBLId2");

                    b.HasIndex("HBLId3");

                    b.HasIndex("LId1");

                    b.HasIndex("LId2");

                    b.HasIndex("LId3");

                    b.HasIndex("MCLId");

                    b.HasIndex("PFLId");

                    b.HasIndex("PFLLId");

                    b.HasIndex("PFLLId2");

                    b.HasIndex("PFLLId3");

                    b.HasIndex("WelfareLId");

                    b.ToTable("HR_Emp_Salary");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ShiftInput", b =>
                {
                    b.Property<int>("ShiftInputId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ShiftInputId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ShiftId");

                    b.ToTable("HR_Emp_ShiftInput");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Suppliment", b =>
                {
                    b.Property<int>("SupplimentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Basic")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAddPF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCPF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHBLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHR")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHRExpDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMCLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOPF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRisk")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWash")
                        .HasColumnType("bit");

                    b.Property<int>("Persantage")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SupplimentId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Emp_Suppliment");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_TempIdCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HR_Emp_TempIdCard");
                });

            modelBuilder.Entity("GTERP.Models.HR_Employee_VariablePermission", b =>
                {
                    b.Property<int>("EmpPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpSecretId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsMainStorePerson")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStoreRateCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubStorePerson")
                        .HasColumnType("bit");

                    b.HasKey("EmpPermissionId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Employee_VariablePermission");
                });

            modelBuilder.Entity("GTERP.Models.HR_IncType", b =>
                {
                    b.Property<int>("IncTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IncTypeId");

                    b.ToTable("HR_IncType");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Adjust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtJoin")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HR_Leave_Adjust");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Avail", b =>
                {
                    b.Property<int>("LvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLvInput")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtTo")
                        .HasColumnType("date");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<int>("LTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LeaveOption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("LvApp")
                        .HasColumnType("real");

                    b.Property<string>("LvType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Remark")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float?>("TotalDay")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("dtWork")
                        .HasColumnType("date");

                    b.HasKey("LvId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LTypeId");

                    b.ToTable("HR_Leave_Avail");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Balance", b =>
                {
                    b.Property<int>("LvBalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("AACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ABL")
                        .HasColumnType("real");

                    b.Property<float?>("ACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ACL")
                        .HasColumnType("real");

                    b.Property<float?>("AEL")
                        .HasColumnType("real");

                    b.Property<float?>("ALWP")
                        .HasColumnType("real");

                    b.Property<float?>("AML")
                        .HasColumnType("real");

                    b.Property<float?>("ASL")
                        .HasColumnType("real");

                    b.Property<float?>("ASPL")
                        .HasColumnType("real");

                    b.Property<float?>("ATL")
                        .HasColumnType("real");

                    b.Property<float?>("BL")
                        .HasColumnType("real");

                    b.Property<float>("CL")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("DtOpeningBalance")
                        .HasColumnType("int");

                    b.Property<float>("EL")
                        .HasColumnType("real");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsELPaid")
                        .HasColumnType("bit");

                    b.Property<float?>("LWP")
                        .HasColumnType("real");

                    b.Property<float?>("ML")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<float>("SL")
                        .HasColumnType("real");

                    b.Property<float?>("SPL")
                        .HasColumnType("real");

                    b.Property<float?>("TL")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LvBalId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Leave_Balance");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_HouseBuilding", b =>
                {
                    b.Property<int>("LoanDataHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BeginningLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EndingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstalmentNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanHouseId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("LoanDataHouseId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LoanHouseId");

                    b.ToTable("HR_Loan_Data_HouseBuilding");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_MotorCycle", b =>
                {
                    b.Property<int>("LoanDataMotorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BeginningLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EndingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstalmentNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanMotorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("LoanDataMotorId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LoanMotorId");

                    b.ToTable("HR_Loan_Data_MotorCycle");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_Other", b =>
                {
                    b.Property<int>("LoanDataOtherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BeginningLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EndingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstalmentNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanOtherId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("LoanDataOtherId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LoanOtherId");

                    b.ToTable("HR_Loan_Data_Other");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_PF", b =>
                {
                    b.Property<int>("LoanDataPFId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BeginningLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EndingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstalmentNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanPFId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("LoanDataPFId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LoanPFId");

                    b.ToTable("HR_Loan_Data_PF");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_Welfare", b =>
                {
                    b.Property<int>("LoanDataWelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("BeginningLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EndingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InstalmentNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("LoanWelId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal?>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("LoanDataWelId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LoanWelId");

                    b.ToTable("HR_Loan_Data_Welfare");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_HouseBuilding", b =>
                {
                    b.Property<int>("LoanHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isinactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("LoanTerm")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlyInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayBack")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TotalInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanHouseId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_HouseBuilding");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_IncreaseInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtEffectiveMonth")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("InputType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LoanType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OtherLoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("TtlIncreaseMonth")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("HR_Loan_IncreaseInfo");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_MotorCycle", b =>
                {
                    b.Property<int>("LoanMotorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isinactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("LoanTerm")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlyInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayBack")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TotalInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanMotorId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_MotorCycle");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Other", b =>
                {
                    b.Property<int>("LoanOtherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isinactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("LoanTerm")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlyInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayBack")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TotalInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanOtherId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_Other");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_PF", b =>
                {
                    b.Property<int>("LoanPFId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isinactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("LoanTerm")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlyInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayBack")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TotalInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanPFId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_PF");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Return", b =>
                {
                    b.Property<int>("LoanReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LoanType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanReturnId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_Return");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Welfare", b =>
                {
                    b.Property<int>("LoanWelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compound")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtLoanStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isinactive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("LoanTerm")
                        .HasColumnType("real");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("MonthlyInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MonthlyLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayBack")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal?>("TotalInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LoanWelId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_Loan_Welfare");
                });

            modelBuilder.Entity("GTERP.Models.HR_LvEncashment", b =>
                {
                    b.Property<int>("LvEncashmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFromNext")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtToNext")
                        .HasColumnType("datetime2");

                    b.Property<int>("ELBalance")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsELEnjoy")
                        .HasColumnType("bit");

                    b.Property<int>("LvEncashmentIYear")
                        .HasColumnType("int");

                    b.Property<float?>("NetAmount")
                        .HasColumnType("real");

                    b.Property<string>("ProssType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("Stamp")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LvEncashmentId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_LvEncashment");
                });

            modelBuilder.Entity("GTERP.Models.HR_Notification", b =>
                {
                    b.Property<int>("NtfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("execTime")
                        .HasColumnType("datetime2");

                    b.HasKey("NtfId");

                    b.ToTable("HR_Notification");
                });

            modelBuilder.Entity("GTERP.Models.HR_Notify", b =>
                {
                    b.Property<int>("NotifyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DtEntry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailBCc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsEmail")
                        .HasColumnType("int");

                    b.Property<int?>("IsMobileApp")
                        .HasColumnType("int");

                    b.Property<int?>("IsSMS")
                        .HasColumnType("int");

                    b.Property<int?>("IsWhatsApp")
                        .HasColumnType("int");

                    b.Property<string>("MobileAppText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NtfId")
                        .HasColumnType("int");

                    b.Property<string>("SMSText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsAppText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotifyId");

                    b.HasIndex("EmpId");

                    b.HasIndex("NtfId");

                    b.ToTable("HR_Notify");
                });

            modelBuilder.Entity("GTERP.Models.HR_OT_FC", b =>
                {
                    b.Property<int>("OtFcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ProssType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("ttlFC")
                        .HasColumnType("real");

                    b.Property<float?>("ttlNight")
                        .HasColumnType("real");

                    b.Property<float?>("ttlOT")
                        .HasColumnType("real");

                    b.Property<float?>("ttlShiftNight")
                        .HasColumnType("real");

                    b.HasKey("OtFcId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_OT_FC");
                });

            modelBuilder.Entity("GTERP.Models.HR_OtherDedAssociation", b =>
                {
                    b.Property<int>("OtherDedAssId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherDedName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OtherDedNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProssType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("OtherDedAssId");

                    b.ToTable("HR_OtherDedAssociation");
                });

            modelBuilder.Entity("GTERP.Models.HR_OverTimeSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("From1")
                        .HasColumnType("int");

                    b.Property<int>("From2")
                        .HasColumnType("int");

                    b.Property<int>("From3")
                        .HasColumnType("int");

                    b.Property<int>("From4")
                        .HasColumnType("int");

                    b.Property<int>("GraceTimeFrom")
                        .HasColumnType("int");

                    b.Property<int>("GraceTimeTo")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllowMinute")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManualOT")
                        .HasColumnType("bit");

                    b.Property<float>("OT1")
                        .HasColumnType("real");

                    b.Property<float>("OT2")
                        .HasColumnType("real");

                    b.Property<float>("OT3")
                        .HasColumnType("real");

                    b.Property<float>("OT4")
                        .HasColumnType("real");

                    b.Property<double>("OTRate")
                        .HasColumnType("float");

                    b.Property<int>("OTStart")
                        .HasColumnType("int");

                    b.Property<int>("To1")
                        .HasColumnType("int");

                    b.Property<int>("To2")
                        .HasColumnType("int");

                    b.Property<int>("To3")
                        .HasColumnType("int");

                    b.Property<int>("To4")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HR_OverTimeSetting");
                });

            modelBuilder.Entity("GTERP.Models.HR_PFCheque", b =>
                {
                    b.Property<int>("PFId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<float>("ReturnChequeAmt")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReturnChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnChequeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PFId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_PFCheque");
                });

            modelBuilder.Entity("GTERP.Models.HR_PFContribution", b =>
                {
                    b.Property<int>("PFContributionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PF")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PFContributionId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_PFContribution");
                });

            modelBuilder.Entity("GTERP.Models.HR_PF_Cheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<float>("ReturnChequeAmt")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReturnChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReturnChequeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_PF_Cheque");
                });

            modelBuilder.Entity("GTERP.Models.HR_PF_Withdrawn", b =>
                {
                    b.Property<int>("WdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtWithdrawn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApprove")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("WdId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_PF_Withdrawn");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessLock", b =>
                {
                    b.Property<int>("ProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("LockType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProcessId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("HR_ProcessLock");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessedData", b =>
                {
                    b.Property<long>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AdJusted")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("EOT")
                        .HasColumnType("real");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<float>("IsLunchDay")
                        .HasColumnType("real");

                    b.Property<float>("IsNightShift")
                        .HasColumnType("real");

                    b.Property<DateTime?>("Late")
                        .HasColumnType("datetime2");

                    b.Property<float?>("OT")
                        .HasColumnType("real");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<float>("OTHourDed")
                        .HasColumnType("real");

                    b.Property<float>("ROT")
                        .HasColumnType("real");

                    b.Property<float>("RegHour")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<float>("StaffOT")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.HasKey("PId");

                    b.ToTable("HR_ProcessedData");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessedDataSal", b =>
                {
                    b.Property<int?>("AEmpId")
                        .HasColumnType("int");

                    b.Property<long>("AId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Ab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("AbL")
                        .HasColumnType("smallint");

                    b.Property<decimal>("AbLamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Absent")
                        .HasColumnType("real");

                    b.Property<float>("AccL")
                        .HasColumnType("real");

                    b.Property<decimal>("AdjustedItded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Adv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvAgainstExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvAgainstExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvExploanBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvFacility")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvInTaxDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvWagesDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("Arrear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearBasic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearInTaxDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearOt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BandSl")
                        .HasColumnType("int");

                    b.Property<int?>("Bank1")
                        .HasColumnType("int");

                    b.Property<string>("BankAcNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("BankId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BankPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BankPf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("BasicRate")
                        .HasColumnType("real");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bcl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bsded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bsl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CanteenAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Cash")
                        .HasColumnType("int");

                    b.Property<decimal>("CashPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashPf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("Cf")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ChargeAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CheForum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChemicalAsso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChemicalForum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Cl")
                        .HasColumnType("real");

                    b.Property<short?>("Clh")
                        .HasColumnType("smallint");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ComPfCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ComPfRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Conf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContainSub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConvAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConvAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConveyanceAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("CurrEl")
                        .HasColumnType("real");

                    b.Property<decimal>("DapEmpClub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Dday")
                        .HasColumnType("real");

                    b.Property<decimal>("DearnessAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBnsBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBonusOf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBonusOfBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("DeptId")
                        .HasColumnType("smallint");

                    b.Property<short?>("DesigId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("DiplomaassoDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dishantenna")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DishantennaRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Donation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<string>("DtSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EduAlloDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EduAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("El")
                        .HasColumnType("real");

                    b.Property<decimal>("Elamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricityExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Elh")
                        .HasColumnType("real");

                    b.Property<decimal>("EmpClubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpSts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("EnggassoDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Epf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExOtamount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ExOthr")
                        .HasColumnType("real");

                    b.Property<float>("ExOtmin")
                        .HasColumnType("real");

                    b.Property<decimal>("ExchRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fbonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Fcttl")
                        .HasColumnType("real");

                    b.Property<decimal>("FesBonusDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FesBonusDedBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FestivalBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<decimal>("FoodAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gascharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Glid")
                        .HasColumnType("int");

                    b.Property<decimal>("Gp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GradeAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GradeSal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsdiff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsfinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsmin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gsusd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HazScheme")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Hblid")
                        .HasColumnType("int");

                    b.Property<int>("Hblid2")
                        .HasColumnType("int");

                    b.Property<int>("Hblid3")
                        .HasColumnType("int");

                    b.Property<decimal>("HbloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Hday")
                        .HasColumnType("real");

                    b.Property<decimal>("HdayBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("HdayP")
                        .HasColumnType("real");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hrded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrexpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrexpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Inc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncBonusDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IncenBns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeTaxRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("IsAllowGradeBns")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsAllowOt")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsAllowPf")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsManual")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsNewJoin")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsOk")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsReleased")
                        .HasColumnType("tinyint");

                    b.Property<float>("Late")
                        .HasColumnType("real");

                    b.Property<float>("LateHr")
                        .HasColumnType("real");

                    b.Property<float>("LateMin")
                        .HasColumnType("real");

                    b.Property<int>("Lid1")
                        .HasColumnType("int");

                    b.Property<int>("Lid2")
                        .HasColumnType("int");

                    b.Property<int>("Lid3")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineSl")
                        .HasColumnType("int");

                    b.Property<decimal?>("Loan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("Lunch")
                        .HasColumnType("smallint");

                    b.Property<short?>("LunchAmt")
                        .HasColumnType("smallint");

                    b.Property<short?>("Lwp")
                        .HasColumnType("smallint");

                    b.Property<short?>("Lwppay")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Ma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MadicalAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ManualDay")
                        .HasColumnType("real");

                    b.Property<decimal>("MaterialLoanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Mclid")
                        .HasColumnType("int");

                    b.Property<decimal>("McloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalLoanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MiscAddAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MiscDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Ml")
                        .HasColumnType("real");

                    b.Property<decimal?>("Mlpay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("MngType")
                        .HasColumnType("tinyint");

                    b.Property<short?>("MobileAllow")
                        .HasColumnType("smallint");

                    b.Property<short?>("MobileDeduction")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Moktab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetFoodAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetOtamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalaryB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetSalaryBuyer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetSalaryPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalaryPayableB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("Night")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NightAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("NightAmt")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NoticePayDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OffDayAllowAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OffWlfareAsso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OfficeclubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ot")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtallowAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtamtBuyer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Otdes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherAddType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherDedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherloannDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OthersAddition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OthersDeduct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("OthrTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Othrbuyer")
                        .HasColumnType("real");

                    b.Property<float>("OtminTtl")
                        .HasColumnType("real");

                    b.Property<decimal>("Otrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Otstamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OwaSub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pbonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Pday")
                        .HasColumnType("real");

                    b.Property<decimal>("PersonalPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfAdd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfcom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Pflid")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid2")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid3")
                        .HasColumnType("int");

                    b.Property<decimal>("PfloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloannDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfprofit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("PreLeave")
                        .HasColumnType("smallint");

                    b.Property<float>("Present")
                        .HasColumnType("real");

                    b.Property<float>("PrevEl")
                        .HasColumnType("real");

                    b.Property<short>("ProLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("ProssType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RevenueStamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RiskAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RiskDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rvi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalAdvBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalaryAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("SectId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ServiceBenefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ServiceMonth")
                        .HasColumnType("real");

                    b.Property<float>("ServiceYear")
                        .HasColumnType("real");

                    b.Property<decimal>("ShiftAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAllowDedBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAllowanceAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftIncenAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ShiftTtl")
                        .HasColumnType("real");

                    b.Property<decimal>("SiftAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Sl")
                        .HasColumnType("real");

                    b.Property<short?>("Slh")
                        .HasColumnType("smallint");

                    b.Property<float>("Spl")
                        .HasColumnType("real");

                    b.Property<decimal>("Stamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("SubSectId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Taexpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TeliphoneCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TiffinAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TiffinAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tk1")
                        .HasColumnType("int");

                    b.Property<int>("Tk10")
                        .HasColumnType("int");

                    b.Property<int>("Tk100")
                        .HasColumnType("int");

                    b.Property<int>("Tk1000")
                        .HasColumnType("int");

                    b.Property<int>("Tk2")
                        .HasColumnType("int");

                    b.Property<int>("Tk20")
                        .HasColumnType("int");

                    b.Property<int>("Tk5")
                        .HasColumnType("int");

                    b.Property<int>("Tk50")
                        .HasColumnType("int");

                    b.Property<int>("Tk500")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAddition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDeduct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeductBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeductCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TotalOffDay")
                        .HasColumnType("real");

                    b.Property<string>("TotalOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalOtb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TotalWorkDay")
                        .HasColumnType("real");

                    b.Property<decimal>("TotaldeductB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalpayableB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transportcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Trn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Trnd")
                        .HasColumnType("float");

                    b.Property<short?>("TtlAbsent")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UniFormAdd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UniFormDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnionSubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VigilanceDutyAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("WId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("WagesaAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WagesaAdvBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WashingAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WashingAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Watercharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Wday")
                        .HasColumnType("real");

                    b.Property<float>("WdayP")
                        .HasColumnType("real");

                    b.Property<int>("WelfareLid")
                        .HasColumnType("int");

                    b.Property<decimal>("Wfl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WflloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Wfsub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("WhdayAbsent")
                        .HasColumnType("real");

                    b.Property<decimal>("WhdayOtamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("WhdayOthr")
                        .HasColumnType("real");

                    b.Property<float>("WhdayP")
                        .HasColumnType("real");

                    b.Property<float>("WorkingDays")
                        .HasColumnType("real");

                    b.Property<decimal>("WpfloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.ToTable("HR_ProcessedDataSal");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessedDataSalUpdate", b =>
                {
                    b.Property<int?>("AEmpId")
                        .HasColumnType("int");

                    b.Property<long>("AId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Ab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("AbL")
                        .HasColumnType("smallint");

                    b.Property<decimal>("AbLamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Absent")
                        .HasColumnType("real");

                    b.Property<float>("AccL")
                        .HasColumnType("real");

                    b.Property<decimal>("AdjustedItded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Adv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvAgainstExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvAgainstExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvExploanBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvFacility")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvInTaxDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdvWagesDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("Arrear")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearBasic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearElectricityExpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearGasExpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearHrexpOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearInTaxDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ArrearOt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AttBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BandSl")
                        .HasColumnType("int");

                    b.Property<int?>("Bank1")
                        .HasColumnType("int");

                    b.Property<string>("BankAcNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("BankId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BankPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BankPf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("BasicRate")
                        .HasColumnType("real");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bcl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bsded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bsl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CanteenAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Cash")
                        .HasColumnType("int");

                    b.Property<decimal>("CashPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashPf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("Cf")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ChargeAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CheForum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChemicalAsso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChemicalForum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Cl")
                        .HasColumnType("real");

                    b.Property<short?>("Clh")
                        .HasColumnType("smallint");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ComPfCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ComPfRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Conf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContainSub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConvAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConvAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ConveyanceAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("CurrEl")
                        .HasColumnType("real");

                    b.Property<decimal>("DapEmpClub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Dday")
                        .HasColumnType("real");

                    b.Property<decimal>("DearnessAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBnsBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBonusOf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DedIncBonusOfBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("DeptId")
                        .HasColumnType("smallint");

                    b.Property<short?>("DesigId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("DiplomaassoDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dishantenna")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DishantennaRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Donation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<string>("DtSalary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EduAlloDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EduAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("El")
                        .HasColumnType("real");

                    b.Property<decimal>("Elamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ElectricityExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Elh")
                        .HasColumnType("real");

                    b.Property<decimal>("EmpClubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpSts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("EnggassoDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Epf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExOtamount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ExOthr")
                        .HasColumnType("real");

                    b.Property<float>("ExOtmin")
                        .HasColumnType("real");

                    b.Property<decimal>("ExchRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fbonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Fcttl")
                        .HasColumnType("real");

                    b.Property<decimal>("FesBonusDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FesBonusDedBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FestivalBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<decimal>("FoodAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GasExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gascharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Glid")
                        .HasColumnType("int");

                    b.Property<decimal>("Gp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GradeAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GradeSal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsdiff")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsfinal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Gsmin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gsusd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HazScheme")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Hblid")
                        .HasColumnType("int");

                    b.Property<int>("Hblid2")
                        .HasColumnType("int");

                    b.Property<int>("Hblid3")
                        .HasColumnType("int");

                    b.Property<decimal>("HbloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOther2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanDedOtherBal2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HbloanRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Hday")
                        .HasColumnType("real");

                    b.Property<decimal>("HdayBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("HdayP")
                        .HasColumnType("real");

                    b.Property<decimal>("HouseRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hrded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrexpOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HrexpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Inc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncBonusDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IncenBns")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncomeTaxRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte?>("IsAllowGradeBns")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsAllowOt")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsAllowPf")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsManual")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsNewJoin")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsOk")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsReleased")
                        .HasColumnType("tinyint");

                    b.Property<float>("Late")
                        .HasColumnType("real");

                    b.Property<float>("LateHr")
                        .HasColumnType("real");

                    b.Property<float>("LateMin")
                        .HasColumnType("real");

                    b.Property<int>("Lid1")
                        .HasColumnType("int");

                    b.Property<int>("Lid2")
                        .HasColumnType("int");

                    b.Property<int>("Lid3")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineSl")
                        .HasColumnType("int");

                    b.Property<decimal?>("Loan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("Lunch")
                        .HasColumnType("smallint");

                    b.Property<short?>("LunchAmt")
                        .HasColumnType("smallint");

                    b.Property<short?>("Lwp")
                        .HasColumnType("smallint");

                    b.Property<short?>("Lwppay")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Ma")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Maded")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MadicalAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ManualDay")
                        .HasColumnType("real");

                    b.Property<decimal>("MaterialLoanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Mclid")
                        .HasColumnType("int");

                    b.Property<decimal>("McloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("McloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MedicalLoanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MiscAddAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MiscDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Ml")
                        .HasColumnType("real");

                    b.Property<decimal?>("Mlpay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("MngType")
                        .HasColumnType("tinyint");

                    b.Property<short?>("MobileAllow")
                        .HasColumnType("smallint");

                    b.Property<short?>("MobileDeduction")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Moktab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetFoodAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetOtamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalaryB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetSalaryBuyer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetSalaryPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalaryPayableB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("Night")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NightAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("NightAmt")
                        .HasColumnType("smallint");

                    b.Property<decimal>("NoticePayDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OffDayAllowAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OffWlfareAsso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OfficeclubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ot")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtallowAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtamtBuyer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Otdes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherAddType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherDedType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherLoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherloannDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OthersAddition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OthersDeduct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("OthrTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Othrbuyer")
                        .HasColumnType("real");

                    b.Property<float>("OtminTtl")
                        .HasColumnType("real");

                    b.Property<decimal>("Otrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Otstamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OwaSub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySlipNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Pbonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Pday")
                        .HasColumnType("real");

                    b.Property<decimal>("PersonalPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfAdd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfcom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Pflid")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid2")
                        .HasColumnType("int");

                    b.Property<int>("Pfllid3")
                        .HasColumnType("int");

                    b.Property<decimal>("PfloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOther2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanDedOtherBal2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloanRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PfloannDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfown")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfprofit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("PreLeave")
                        .HasColumnType("smallint");

                    b.Property<float>("Present")
                        .HasColumnType("real");

                    b.Property<float>("PrevEl")
                        .HasColumnType("real");

                    b.Property<short>("ProLeave")
                        .HasColumnType("smallint");

                    b.Property<string>("ProssType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RevenueStamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RiskAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RiskDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rvi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalAdvBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalaryAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("SectId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("ServiceBenefit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ServiceMonth")
                        .HasColumnType("real");

                    b.Property<float>("ServiceYear")
                        .HasColumnType("real");

                    b.Property<decimal>("ShiftAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAllowDedBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAllowanceAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShiftIncenAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ShiftTtl")
                        .HasColumnType("real");

                    b.Property<decimal>("SiftAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Sl")
                        .HasColumnType("real");

                    b.Property<short?>("Slh")
                        .HasColumnType("smallint");

                    b.Property<float>("Spl")
                        .HasColumnType("real");

                    b.Property<decimal>("Stamp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("SubSectId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Taexpense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TeliphoneCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TiffinAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TiffinAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tk1")
                        .HasColumnType("int");

                    b.Property<int>("Tk10")
                        .HasColumnType("int");

                    b.Property<int>("Tk100")
                        .HasColumnType("int");

                    b.Property<int>("Tk1000")
                        .HasColumnType("int");

                    b.Property<int>("Tk2")
                        .HasColumnType("int");

                    b.Property<int>("Tk20")
                        .HasColumnType("int");

                    b.Property<int>("Tk5")
                        .HasColumnType("int");

                    b.Property<int>("Tk50")
                        .HasColumnType("int");

                    b.Property<int>("Tk500")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAddition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDeduct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeductBank")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeductCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TotalOffDay")
                        .HasColumnType("real");

                    b.Property<string>("TotalOt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalOtb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TotalWorkDay")
                        .HasColumnType("real");

                    b.Property<decimal>("TotaldeductB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalpayableB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transportcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Trn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Trnd")
                        .HasColumnType("float");

                    b.Property<short?>("TtlAbsent")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UniFormAdd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UniFormDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnionSubDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VigilanceDutyAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("WId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("WagesaAdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WagesaAdvBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WashingAllow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WashingAllowDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterChargeOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WaterExpRefund")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Watercharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Wday")
                        .HasColumnType("real");

                    b.Property<float>("WdayP")
                        .HasColumnType("real");

                    b.Property<int>("WelfareLid")
                        .HasColumnType("int");

                    b.Property<decimal>("Wfl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WflloanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WfloanOtherBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Wfsub")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("WhdayAbsent")
                        .HasColumnType("real");

                    b.Property<decimal>("WhdayOtamt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("WhdayOthr")
                        .HasColumnType("real");

                    b.Property<float>("WhdayP")
                        .HasColumnType("real");

                    b.Property<float>("WorkingDays")
                        .HasColumnType("real");

                    b.Property<decimal>("WpfloanDed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Year")
                        .HasColumnType("smallint");

                    b.Property<int>("suid")
                        .HasColumnType("int");

                    b.ToTable("HR_ProcessedDataSalUpdate");
                });

            modelBuilder.Entity("GTERP.Models.HR_Production", b =>
                {
                    b.Property<int>("PrdnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("dtInput")
                        .HasColumnType("datetime2");

                    b.HasKey("PrdnId");

                    b.ToTable("HR_Production");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProssType", b =>
                {
                    b.Property<int>("ProssId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DaySts")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DayStsB")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsLock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("ProssDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ProssId");

                    b.ToTable("HR_ProssType");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProssType_WHDay", b =>
                {
                    b.Property<int>("WHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaySts")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DayStsB")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("dtPunchDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WHId");

                    b.ToTable("HR_ProssType_WHDay");
                });

            modelBuilder.Entity("GTERP.Models.HR_RawData_App", b =>
                {
                    b.Property<int>("aId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CardNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DeviceNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FPId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Imei")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InOut")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsNew")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LUserId")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OvNMark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PCName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PicBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRData")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPunchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("wId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("aId");

                    b.ToTable("HR_RawData_Apps");
                });

            modelBuilder.Entity("GTERP.Models.HR_ReportType", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ReportName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ReportPath")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ReportType")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.ToTable("HR_ReportType");
                });

            modelBuilder.Entity("GTERP.Models.HR_Sal_Suspense", b =>
                {
                    b.Property<int>("AdvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("dtInput")
                        .HasColumnType("datetime2");

                    b.HasKey("AdvId");

                    b.ToTable("HR_Sal_Suspense");
                });

            modelBuilder.Entity("GTERP.Models.HR_SalarySettlement", b =>
                {
                    b.Property<int>("StlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("AB")
                        .HasColumnType("float");

                    b.Property<double>("ADV")
                        .HasColumnType("float");

                    b.Property<float>("Absent")
                        .HasColumnType("real");

                    b.Property<float>("AccL")
                        .HasColumnType("real");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<double>("Arrear")
                        .HasColumnType("float");

                    b.Property<double>("AttBonus")
                        .HasColumnType("float");

                    b.Property<float>("BCL")
                        .HasColumnType("real");

                    b.Property<float>("BEL")
                        .HasColumnType("real");

                    b.Property<double>("BS")
                        .HasColumnType("float");

                    b.Property<float>("BSL")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAcNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("CF")
                        .HasColumnType("int");

                    b.Property<float>("CL")
                        .HasColumnType("real");

                    b.Property<float>("CLH")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CompensationAdd")
                        .HasColumnType("float");

                    b.Property<float>("CompensationDay")
                        .HasColumnType("real");

                    b.Property<float>("CurrEL")
                        .HasColumnType("real");

                    b.Property<double>("CurrELAmt")
                        .HasColumnType("float");

                    b.Property<double>("DD")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("Dday")
                        .HasColumnType("real");

                    b.Property<double>("DeathFacilityAdd")
                        .HasColumnType("float");

                    b.Property<float>("DeathFacilityDay")
                        .HasColumnType("real");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<int?>("DesigId")
                        .HasColumnType("int");

                    b.Property<float>("EL")
                        .HasColumnType("real");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExOTAmount")
                        .HasColumnType("float");

                    b.Property<double>("ExOTAmount1")
                        .HasColumnType("float");

                    b.Property<double>("ExOTAmount2")
                        .HasColumnType("float");

                    b.Property<float>("ExOTHr")
                        .HasColumnType("real");

                    b.Property<float>("ExOTHr1")
                        .HasColumnType("real");

                    b.Property<float>("ExOTHr2")
                        .HasColumnType("real");

                    b.Property<float>("ExOTMin")
                        .HasColumnType("real");

                    b.Property<double>("ExchRate")
                        .HasColumnType("float");

                    b.Property<double>("FoodAllow")
                        .HasColumnType("float");

                    b.Property<double>("GS")
                        .HasColumnType("float");

                    b.Property<double>("GSUSD")
                        .HasColumnType("float");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HDayBonus")
                        .HasColumnType("float");

                    b.Property<double>("HDayWork")
                        .HasColumnType("float");

                    b.Property<double>("HR")
                        .HasColumnType("float");

                    b.Property<float>("HalfDay")
                        .HasColumnType("real");

                    b.Property<float>("Hday")
                        .HasColumnType("real");

                    b.Property<double>("IncenBns")
                        .HasColumnType("float");

                    b.Property<double>("IncomeTax")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IsPaid")
                        .HasColumnType("int");

                    b.Property<int>("IsReleased")
                        .HasColumnType("int");

                    b.Property<float>("LWP")
                        .HasColumnType("real");

                    b.Property<float>("LWPPay")
                        .HasColumnType("real");

                    b.Property<float>("Late")
                        .HasColumnType("real");

                    b.Property<float>("LateMin")
                        .HasColumnType("real");

                    b.Property<float>("LeaveAdjust")
                        .HasColumnType("real");

                    b.Property<double>("Loan")
                        .HasColumnType("float");

                    b.Property<double>("LoanBalance")
                        .HasColumnType("float");

                    b.Property<int>("Lunch")
                        .HasColumnType("int");

                    b.Property<double>("LunchAmt")
                        .HasColumnType("float");

                    b.Property<float>("LunchRamadan")
                        .HasColumnType("real");

                    b.Property<double>("MA")
                        .HasColumnType("float");

                    b.Property<float>("ML")
                        .HasColumnType("real");

                    b.Property<double>("MLPay")
                        .HasColumnType("float");

                    b.Property<double>("MobileAllow")
                        .HasColumnType("float");

                    b.Property<double>("MobileDeduction")
                        .HasColumnType("float");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MonthDays")
                        .HasColumnType("real");

                    b.Property<double>("NetAmount")
                        .HasColumnType("float");

                    b.Property<double>("NetPayableAmt")
                        .HasColumnType("float");

                    b.Property<double>("NetSalary")
                        .HasColumnType("float");

                    b.Property<double>("NetSalaryB")
                        .HasColumnType("float");

                    b.Property<double>("NetSalaryBuyer")
                        .HasColumnType("float");

                    b.Property<double>("NetSalaryPayable")
                        .HasColumnType("float");

                    b.Property<int>("Night")
                        .HasColumnType("int");

                    b.Property<double>("NightAmt")
                        .HasColumnType("float");

                    b.Property<float>("NightDuty")
                        .HasColumnType("real");

                    b.Property<double>("NoticePayAdd")
                        .HasColumnType("float");

                    b.Property<float>("NoticePayDay")
                        .HasColumnType("real");

                    b.Property<double>("NoticePayDed")
                        .HasColumnType("float");

                    b.Property<float>("NoticePayDedDay")
                        .HasColumnType("real");

                    b.Property<double>("OT")
                        .HasColumnType("float");

                    b.Property<string>("OTDes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OTHrTtl")
                        .HasColumnType("real");

                    b.Property<float>("OTMinTtl")
                        .HasColumnType("real");

                    b.Property<double>("OTRate")
                        .HasColumnType("float");

                    b.Property<double>("OtherAllow")
                        .HasColumnType("float");

                    b.Property<double>("OthersAddition")
                        .HasColumnType("float");

                    b.Property<double>("OthersDeduct")
                        .HasColumnType("float");

                    b.Property<double>("PBonus")
                        .HasColumnType("float");

                    b.Property<double>("PF")
                        .HasColumnType("float");

                    b.Property<double>("PFComp")
                        .HasColumnType("float");

                    b.Property<double>("PFOwn")
                        .HasColumnType("float");

                    b.Property<double>("PFProfit")
                        .HasColumnType("float");

                    b.Property<double>("PFTotal")
                        .HasColumnType("float");

                    b.Property<string>("PayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Pday")
                        .HasColumnType("real");

                    b.Property<float>("Present")
                        .HasColumnType("real");

                    b.Property<float>("PrevEL")
                        .HasColumnType("real");

                    b.Property<double>("PrevELAmt")
                        .HasColumnType("float");

                    b.Property<string>("ProssType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ROTAmount")
                        .HasColumnType("float");

                    b.Property<float>("ROTHr")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SL")
                        .HasColumnType("real");

                    b.Property<float>("SLH")
                        .HasColumnType("real");

                    b.Property<float>("SPL")
                        .HasColumnType("real");

                    b.Property<string>("SalaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<float>("SerDay")
                        .HasColumnType("real");

                    b.Property<float>("SerMonth")
                        .HasColumnType("real");

                    b.Property<float>("SerYear")
                        .HasColumnType("real");

                    b.Property<double>("ServiceBenifitAdd")
                        .HasColumnType("float");

                    b.Property<float>("ServiceBenifitDay")
                        .HasColumnType("real");

                    b.Property<float>("ShortLeave")
                        .HasColumnType("real");

                    b.Property<double>("ShortLeaveDay")
                        .HasColumnType("float");

                    b.Property<double>("Stamp")
                        .HasColumnType("float");

                    b.Property<double>("StampB")
                        .HasColumnType("float");

                    b.Property<double>("SubsistenceAdd")
                        .HasColumnType("float");

                    b.Property<float>("SubsistenceDay")
                        .HasColumnType("real");

                    b.Property<float>("SuspentionDay")
                        .HasColumnType("real");

                    b.Property<double>("SuspentionDed")
                        .HasColumnType("float");

                    b.Property<int>("TK1")
                        .HasColumnType("int");

                    b.Property<int>("TK10")
                        .HasColumnType("int");

                    b.Property<int>("TK100")
                        .HasColumnType("int");

                    b.Property<int>("TK1000")
                        .HasColumnType("int");

                    b.Property<int>("TK2")
                        .HasColumnType("int");

                    b.Property<int>("TK20")
                        .HasColumnType("int");

                    b.Property<int>("TK5")
                        .HasColumnType("int");

                    b.Property<int>("TK50")
                        .HasColumnType("int");

                    b.Property<int>("TK500")
                        .HasColumnType("int");

                    b.Property<float>("TotalAbsentEL")
                        .HasColumnType("real");

                    b.Property<double>("TotalAddition")
                        .HasColumnType("float");

                    b.Property<float>("TotalDaysEL")
                        .HasColumnType("real");

                    b.Property<double>("TotalDeduct")
                        .HasColumnType("float");

                    b.Property<float>("TotalHDayEL")
                        .HasColumnType("real");

                    b.Property<float>("TotalLeaveEL")
                        .HasColumnType("real");

                    b.Property<string>("TotalOT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalOTB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPayable")
                        .HasColumnType("float");

                    b.Property<float>("TotalPresentEL")
                        .HasColumnType("real");

                    b.Property<float>("TotalWDayEL")
                        .HasColumnType("real");

                    b.Property<double>("Trn")
                        .HasColumnType("float");

                    b.Property<double>("TrnAllow")
                        .HasColumnType("float");

                    b.Property<double>("TrnDed")
                        .HasColumnType("float");

                    b.Property<float>("Trnday")
                        .HasColumnType("real");

                    b.Property<float>("TtlAbsent")
                        .HasColumnType("real");

                    b.Property<float>("TtlWorkDays")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double>("WDayBonus")
                        .HasColumnType("float");

                    b.Property<float>("Wday")
                        .HasColumnType("real");

                    b.Property<float>("WdayWork")
                        .HasColumnType("real");

                    b.Property<float>("WorkingDays")
                        .HasColumnType("real");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int?>("aEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtElEffective")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPayment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<double>("totaldeductB")
                        .HasColumnType("float");

                    b.Property<double>("totalpayableB")
                        .HasColumnType("float");

                    b.HasKey("StlId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("SectId");

                    b.ToTable("HR_SalarySettlement");
                });

            modelBuilder.Entity("GTERP.Models.HR_SummerWinterAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRaincoat")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSummer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWinter")
                        .HasColumnType("bit");

                    b.Property<float?>("NetAmount")
                        .HasColumnType("real");

                    b.Property<float?>("RainCoatAndGumbootAllow")
                        .HasColumnType("real");

                    b.Property<int>("SWAllowanceId")
                        .HasColumnType("int");

                    b.Property<float?>("Stamp")
                        .HasColumnType("real");

                    b.Property<float?>("SummerAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TaxDed")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("VatDed")
                        .HasColumnType("real");

                    b.Property<float?>("WinterAllow")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("SWAllowanceId");

                    b.ToTable("HR_SummerWinterAllowance");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempCount", b =>
                {
                    b.Property<int>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Cnt")
                        .HasColumnType("real");

                    b.Property<float>("Cnt1")
                        .HasColumnType("real");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DateTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime3")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vchr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vchr1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Vchr2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TId");

                    b.ToTable("HR_TempCount");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempFixAttExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtPunchDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HR_TempFixAttExcel");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempIncrementExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewBS")
                        .HasColumnType("real");

                    b.Property<string>("NewDeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewDesigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewFA")
                        .HasColumnType("real");

                    b.Property<float>("NewHR")
                        .HasColumnType("real");

                    b.Property<float>("NewMA")
                        .HasColumnType("real");

                    b.Property<float>("NewSalary")
                        .HasColumnType("real");

                    b.Property<string>("NewSectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewTA")
                        .HasColumnType("real");

                    b.Property<float>("OldSalary")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("HR_TempIncrementExcel");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempJob", b =>
                {
                    b.Property<int>("TempCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Absent")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComAdd1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComAdd2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DeptId")
                        .HasColumnType("smallint");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DesigId")
                        .HasColumnType("smallint");

                    b.Property<string>("DesigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtJoin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DtReleased")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Eot")
                        .HasColumnType("real");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Gs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float?>("Hday")
                        .HasColumnType("real");

                    b.Property<float?>("LateDay")
                        .HasColumnType("real");

                    b.Property<float?>("LateHrTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Leave")
                        .HasColumnType("real");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Lunch")
                        .HasColumnType("real");

                    b.Property<float?>("Night")
                        .HasColumnType("real");

                    b.Property<float?>("Othr")
                        .HasColumnType("real");

                    b.Property<float?>("OthrDed")
                        .HasColumnType("real");

                    b.Property<float?>("OthrsTtl")
                        .HasColumnType("real");

                    b.Property<float?>("Present")
                        .HasColumnType("real");

                    b.Property<float?>("Rot")
                        .HasColumnType("real");

                    b.Property<short>("SectId")
                        .HasColumnType("smallint");

                    b.Property<string>("SectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Wday")
                        .HasColumnType("real");

                    b.HasKey("TempCardId");

                    b.ToTable("HR_TempJob");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempLeaveBalanceExcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("CL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ELYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrevELBal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SL")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("HR_TempLeaveBalanceExcels");
                });

            modelBuilder.Entity("GTERP.Models.HR_TempReleasedExcel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtReleased")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dtSubmit")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("HR_TempReleasedExcel");
                });

            modelBuilder.Entity("GTERP.Models.HomeSlider", b =>
                {
                    b.Property<int>("HomeSliderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SliderImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SliderImg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SliderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HomeSliderId");

                    b.ToTable("HomeSlider");
                });

            modelBuilder.Entity("GTERP.Models.Hr_Emp_AbsentLetter", b =>
                {
                    b.Property<int>("RefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DtFirst")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtFrom")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("DtSecond")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtThird")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtTo")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("EmpId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("SelfDefenceRef")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShowCauseLetterRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TerminationLetterRef")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RefId");

                    b.HasIndex("EmpId");

                    b.ToTable("Hr_Emp_AbsentLetter");
                });

            modelBuilder.Entity("GTERP.Models.Hr_RawData", b =>
                {
                    b.Property<int>("aId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CardNo")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("DeviceNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("DtPunchDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPunchTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FPId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Imei")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InOut")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNew")
                        .HasColumnType("int");

                    b.Property<int?>("LUserId")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OvNMark")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PCName")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("PicBack")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PicFront")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("QRData")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StNo")
                        .HasColumnType("int");

                    b.HasKey("aId");

                    b.HasIndex("EmpId");

                    b.ToTable("Hr_RawData");
                });

            modelBuilder.Entity("GTERP.Models.ImageCriteria", b =>
                {
                    b.Property<int>("ImageCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImageCriteriaCaption")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageCriteriaId");

                    b.ToTable("ImageCriterias");
                });

            modelBuilder.Entity("GTERP.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("ChallanQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EnStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GoodsRcvRtnQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GoodsReceiveQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IssueQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IssueRtnQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpStock")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OpeningStockDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurExcQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurRetQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("SalesExcQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesRetQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("InventoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WareHouseId");

                    b.HasIndex("comid", "ProductId", "WareHouseId")
                        .IsUnique();

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceMain", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("InvoiceDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InvoiceReferance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("InvoiceId");

                    b.ToTable("InvoiceMains");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceSub", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InvoiceMainInvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceMainInvoiceId");

                    b.HasIndex("SoftwarePackageId");

                    b.ToTable("InvoiceSubs");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceTermsSub", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceMainInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("InvoiceMainInvoiceId");

                    b.ToTable("InvoiceTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.IssueMain", b =>
                {
                    b.Property<int>("IssueMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Addition")
                        .HasColumnType("real");

                    b.Property<string>("AmmoniaReceivingCapco")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("AmmoniaReceivingCufl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("BOMMainId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("ConvertionRate")
                        .HasColumnType("real");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Deduction")
                        .HasColumnType("real");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExpectedReciveDatestring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<string>("GateInHouseDatestring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("INDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("INNo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDirectIssue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubStore")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssueNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IssueRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ManualSRRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ManualSRRNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("NetIssueValue")
                        .HasColumnType("real");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PhosphoricReceiving")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StoreReqId")
                        .HasColumnType("int");

                    b.Property<float>("TotalIssueValue")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IssueMainId");

                    b.HasIndex("BOMMainId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("EmpId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("SectId");

                    b.HasIndex("StoreReqId");

                    b.HasIndex("ComId", "IssueNo", "FiscalYearId")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [FiscalYearId] IS NOT NULL");

                    b.ToTable("IssueMain");
                });

            modelBuilder.Entity("GTERP.Models.IssueSub", b =>
                {
                    b.Property<int>("IssueSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float?>("Age")
                        .HasColumnType("real");

                    b.Property<decimal?>("BalanceQty")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int?>("IssueMainId")
                        .HasColumnType("int");

                    b.Property<decimal>("IssueQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("Patient")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<float?>("ProductionBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("ProductionSeedQty")
                        .HasColumnType("real");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RequisitionQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("SalesBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("SalesSeedQty")
                        .HasColumnType("real");

                    b.Property<int?>("StoreReqSubId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("IssueSubId");

                    b.HasIndex("IssueMainId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreReqSubId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("IssueSub");
                });

            modelBuilder.Entity("GTERP.Models.IssueSubWarehouse", b =>
                {
                    b.Property<int>("IssueSubWarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("IssueQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IssueSubId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("IssueSubWarehouseId");

                    b.HasIndex("IssueSubId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("IssueSubWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.ItemDesc", b =>
                {
                    b.Property<int>("ItemDescId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ItemDescCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescHSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("ItemDescShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemDescs");
                });

            modelBuilder.Entity("GTERP.Models.ItemGroup", b =>
                {
                    b.Property<int>("ItemGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ItemGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupHSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("ItemGroupShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ItemMargin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ItemGroupId");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("GTERP.Models.JobNo", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InputDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Prefix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("jobno");
                });

            modelBuilder.Entity("GTERP.Models.LCNature", b =>
                {
                    b.Property<int>("LCNatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LCNatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCNatureShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCNatureId");

                    b.ToTable("LCNatures");
                });

            modelBuilder.Entity("GTERP.Models.LCStatus", b =>
                {
                    b.Property<int>("LCStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LCStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCStatusId");

                    b.ToTable("LCStatus");
                });

            modelBuilder.Entity("GTERP.Models.LCType", b =>
                {
                    b.Property<int>("LCTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LCTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCTypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("LCTypeId");

                    b.ToTable("LCTypes");
                });

            modelBuilder.Entity("GTERP.Models.LienBank", b =>
                {
                    b.Property<int>("LienBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LienBankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LienBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("LienBankId");

                    b.HasIndex("CountryId");

                    b.ToTable("LienBanks");
                });

            modelBuilder.Entity("GTERP.Models.Medical_Details", b =>
                {
                    b.Property<int>("MedicalDetaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MedicalMasterId")
                        .HasColumnType("int");

                    b.Property<string>("MedicineName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Patient")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UOM")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("MedicalDetaisId");

                    b.HasIndex("MedicalMasterId");

                    b.HasIndex("ProductId");

                    b.ToTable("Medical_Details");
                });

            modelBuilder.Entity("GTERP.Models.Medical_Master", b =>
                {
                    b.Property<int>("MedicalMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Advice")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BP")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Patient")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Pulse")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("MedicalMasterId");

                    b.HasIndex("DoctorId");

                    b.HasIndex("EmpId");

                    b.ToTable("Medical_Master");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Details", b =>
                {
                    b.Property<int>("MenuPermissionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("MenuPermissionDetailsId");

                    b.HasIndex("MenuPermissionId");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("MenuPermissionDetails");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Master", b =>
                {
                    b.Property<int>("MenuPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefaultModuleId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridPermission")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MenuPermissionId");

                    b.ToTable("MenuPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("ModuleImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("GTERP.Models.ModuleCourses", b =>
                {
                    b.Property<int>("ModuleCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleMenuChildId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleMenuChildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleMenuParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCourseId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("ModuleCourses");
                });

            modelBuilder.Entity("GTERP.Models.ModuleGroup", b =>
                {
                    b.Property<int>("ModuleGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleGroupCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleGroupImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.ToTable("ModuleGroups");
                });

            modelBuilder.Entity("GTERP.Models.ModuleMenu", b =>
                {
                    b.Property<int>("ModuleMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImageCriteriaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("ModuleImageExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuClass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModuleMenuClassi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ModuleMenuImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ModuleMenuLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModuleMenuName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<bool>("isCertificate")
                        .HasColumnType("bit");

                    b.Property<int>("isInactive")
                        .HasColumnType("int");

                    b.Property<int>("isParent")
                        .HasColumnType("int");

                    b.HasKey("ModuleMenuId");

                    b.HasIndex("ImageCriteriaId");

                    b.HasIndex("ModuleGroupId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("ParentId");

                    b.ToTable("ModuleMenus");
                });

            modelBuilder.Entity("GTERP.Models.Module_Menu_Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("Module_Menu_Action");
                });

            modelBuilder.Entity("GTERP.Models.MonthName", b =>
                {
                    b.Property<int>("MonthNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortBanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MonthNameId");

                    b.ToTable("MonthNames");
                });

            modelBuilder.Entity("GTERP.Models.MonthlySalesProduction", b =>
                {
                    b.Property<int>("MonthlySalesProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductionQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProductionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("SalesQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MonthlySalesProductionId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("ComId", "FiscalYearId", "FiscalMonthId")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [FiscalMonthId] IS NOT NULL");

                    b.ToTable("MonthlySalesProductions");
                });

            modelBuilder.Entity("GTERP.Models.NoteDescription", b =>
                {
                    b.Property<int>("NoteDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NoteDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("NoteDescriptionId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("NoteDescriptions");
                });

            modelBuilder.Entity("GTERP.Models.NotifyParty", b =>
                {
                    b.Property<long>("NotifyPartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerInformationsBuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyPartyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyPartyNameSearch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<string>("ShippedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("NotifyPartyId");

                    b.HasIndex("BuyerInformationsBuyerId");

                    b.HasIndex("CountryId");

                    b.HasIndex("PortOfDischargeId");

                    b.ToTable("NotifyPartys");
                });

            modelBuilder.Entity("GTERP.Models.OpeningBank", b =>
                {
                    b.Property<int>("OpeningBankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OpeningBankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("OpeningBankId");

                    b.HasIndex("CountryId");

                    b.ToTable("OpeningBanks");
                });

            modelBuilder.Entity("GTERP.Models.PBC_EmployeeTask", b =>
                {
                    b.Property<int>("EmployeeTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Files")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HODRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("MNGRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PBCStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskAssignId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Comments")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeTaskId");

                    b.HasIndex("EmpId");

                    b.HasIndex("PBCStatusId");

                    b.HasIndex("TaskAssignId");

                    b.ToTable("PBC_EmployeeTask");
                });

            modelBuilder.Entity("GTERP.Models.PBC_Status", b =>
                {
                    b.Property<int>("PBCStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PBCStatusId");

                    b.ToTable("PBC_Status");
                });

            modelBuilder.Entity("GTERP.Models.PBC_TaskAssign", b =>
                {
                    b.Property<int>("TaskAssignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("AssignDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Quarter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmiteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Type_BV_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_BV_Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_K_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_K_Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_M_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_M_Task")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_T_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_T_Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskAssignId");

                    b.HasIndex("EmpId");

                    b.ToTable("PBC_TaskAssign");
                });

            modelBuilder.Entity("GTERP.Models.PF_ChartOfAccount", b =>
                {
                    b.Property<int>("AccId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AccCode_Old")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AccSubId")
                        .HasColumnType("int");

                    b.Property<string>("AccType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBankItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChkRef")
                        .HasColumnType("bit");

                    b.Property<int>("IsEntryBankLiability")
                        .HasColumnType("int");

                    b.Property<bool>("IsItemAccmulateddDep")
                        .HasColumnType("bit");

                    b.Property<int>("IsItemBS")
                        .HasColumnType("int");

                    b.Property<int>("IsItemCS")
                        .HasColumnType("int");

                    b.Property<bool>("IsItemDepExp")
                        .HasColumnType("bit");

                    b.Property<int>("IsItemPL")
                        .HasColumnType("int");

                    b.Property<int>("IsItemTA")
                        .HasColumnType("int");

                    b.Property<int>("IsShowCOA")
                        .HasColumnType("int");

                    b.Property<int>("IsSysDefined")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<decimal>("OpCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpCreditLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpDebitLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ParentCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RelatedId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("isShowUg")
                        .HasColumnType("bit");

                    b.Property<int>("opFYId")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("AccId");

                    b.HasIndex("ParentID");

                    b.HasIndex("comid", "AccCode")
                        .IsUnique()
                        .HasFilter("[comid] IS NOT NULL AND [AccCode] IS NOT NULL");

                    b.ToTable("PF_ChartOfAccounts");
                });

            modelBuilder.Entity("GTERP.Models.PF_FiscalMonth", b =>
                {
                    b.Property<int>("FiscalMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("ClosingdtTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningdtFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAccounts")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedSalary")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedStore")
                        .HasColumnType("bit");

                    b.HasKey("FiscalMonthId");

                    b.ToTable("PF_FiscalMonth");
                });

            modelBuilder.Entity("GTERP.Models.PF_FiscalYear", b =>
                {
                    b.Property<int>("FiscalYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<string>("FYName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FYNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("isWorking")
                        .HasColumnType("bit");

                    b.HasKey("FiscalYearId");

                    b.ToTable("PF_FiscalYear");
                });

            modelBuilder.Entity("GTERP.Models.PF_Ledger", b =>
                {
                    b.Property<int>("PFLedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrinciple")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PFLedgerId");

                    b.HasIndex("BankAccountId");

                    b.ToTable("PF_Ledgers");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherMain", b =>
                {
                    b.Property<int>("VoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Referance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<double>("VAmountLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherInputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VoucherSerialId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("YearlyVoucherTypeWiseSerial")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("vAmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VoucherId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryIdLocal");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("VoucherTypeId");

                    b.HasIndex("comid", "VoucherNo", "FiscalYearId", "FiscalMonthId")
                        .IsUnique()
                        .HasFilter("[comid] IS NOT NULL AND [VoucherNo] IS NOT NULL AND [FiscalYearId] IS NOT NULL AND [FiscalMonthId] IS NOT NULL");

                    b.ToTable("PF_VoucherMains");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSub", b =>
                {
                    b.Property<int>("VoucherSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("ccId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubId");

                    b.HasIndex("AccId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmpId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PF_VoucherSubs");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSubCheckno", b =>
                {
                    b.Property<int>("VoucherSubCheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChkNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoChk")
                        .HasColumnType("int");

                    b.Property<int?>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherSubId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("dtChk")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtChkClear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtChkTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClear")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualEntry")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("VoucherSubCheckId");

                    b.HasIndex("AccId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("PF_VoucherSubChecnos");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSubSection", b =>
                {
                    b.Property<int>("VoucherSubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectionSubSectId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.HasKey("VoucherSubSectionId");

                    b.HasIndex("SubSectionSubSectId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("PF_VoucherSubSections");
                });

            modelBuilder.Entity("GTERP.Models.PINature", b =>
                {
                    b.Property<int>("PINatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PINatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PINatureShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("PINatureId");

                    b.ToTable("PINature");
                });

            modelBuilder.Entity("GTERP.Models.PaymentTerms", b =>
                {
                    b.Property<int>("PaymentTermsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTermsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentTermsShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("PaymentTermsId");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("GTERP.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaymentTypeId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("GTERP.Models.Payroll.SalaryProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdvFestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdvType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFIndDtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFIndDtTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFIndPercentage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bonusAdvPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bonusPer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtELPrcFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtELPrcLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFestEffect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtSalAdv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salDesc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalaryProcess");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_InComeTaxAmountSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float>("GSLimitFrom")
                        .HasColumnType("real");

                    b.Property<float>("GSLimitTo")
                        .HasColumnType("real");

                    b.Property<float>("IncomeTax")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInComeTax")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Payroll_InComeTaxAmountSettings");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryAddition", b =>
                {
                    b.Property<int>("SalAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OtherAddType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SalAddId");

                    b.HasIndex("EmpId");

                    b.ToTable("Payroll_SalaryAddition");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryDeduction", b =>
                {
                    b.Property<int>("SalDedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("OtherDedType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SalDedId");

                    b.HasIndex("EmpId");

                    b.ToTable("Payroll_SalaryDeduction");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_Temp_SalaryDataInputWithFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("money");

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("date");

                    b.Property<string>("EmpCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("OtherType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.ToTable("Payroll_Temp_SalaryDataInputWithFile");
                });

            modelBuilder.Entity("GTERP.Models.PortOfDischarge", b =>
                {
                    b.Property<int>("PortOfDischargeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDischargeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PortOfDischargeId");

                    b.HasIndex("CountryId");

                    b.ToTable("PortOfDischarges");
                });

            modelBuilder.Entity("GTERP.Models.PortOfLoading", b =>
                {
                    b.Property<int>("PortOfLoadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PortCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfLoadingName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PortOfLoadingId");

                    b.HasIndex("CountryId");

                    b.ToTable("PortOfLoadings");
                });

            modelBuilder.Entity("GTERP.Models.PrdUnit", b =>
                {
                    b.Property<int>("PrdUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PrdUnitBanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrdUnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitShortName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPrdUnit")
                        .HasColumnType("bit");

                    b.HasKey("PrdUnitId");

                    b.ToTable("PrdUnits");
                });

            modelBuilder.Entity("GTERP.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccIdConsumption")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdInventory")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MinimumOrderQty")
                        .HasColumnType("real");

                    b.Property<string>("ProductBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductBrand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("ProductImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ProductMainGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ProductNameBangla")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<float>("ReorderLevelOne")
                        .HasColumnType("real");

                    b.Property<decimal>("RetailerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("vatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("AccIdConsumption");

                    b.HasIndex("AccIdInventory");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CountryId");

                    b.HasIndex("ProductMainGroupId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("UnitId");

                    b.HasIndex("comid", "ProductCode")
                        .IsUnique()
                        .HasFilter("[ProductCode] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GTERP.Models.ProductCategory", b =>
                {
                    b.Property<long>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("GTERP.Models.ProductGroup", b =>
                {
                    b.Property<int>("ProductGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductGroupId");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("GTERP.Models.ProductMainGroup", b =>
                {
                    b.Property<int>("ProductMainGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductMainGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductMainGroupDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProductMainGroupId");

                    b.ToTable("ProductMainGroups");
                });

            modelBuilder.Entity("GTERP.Models.ProductPrie", b =>
                {
                    b.Property<int>("ProductPrieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<decimal>("cPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("sPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProductPrieId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice");
                });

            modelBuilder.Entity("GTERP.Models.ProductRegistration", b =>
                {
                    b.Property<int>("ProductRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Account_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AddedBy")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Addeddate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Area_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerPhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DealerPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Item_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Item_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Model")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OfferSmsResult")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Organization_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Party_Number")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ProductRegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductRegistrationSerialNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductSize")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesChannel")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Source")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UserPhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Zone_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProductRegistrationId");

                    b.ToTable("ProductRegistrations");
                });

            modelBuilder.Entity("GTERP.Models.ProductSerial", b =>
                {
                    b.Property<int>("ProductSerialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductSerialNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseSubId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarrentyId")
                        .HasColumnType("int");

                    b.HasKey("ProductSerialId");

                    b.HasIndex("PurchaseSubId");

                    b.HasIndex("WarrentyId");

                    b.ToTable("ProductSerial");
                });

            modelBuilder.Entity("GTERP.Models.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("GTERP.Models.Production", b =>
                {
                    b.Property<int>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float>("AmmoniaPerTon")
                        .HasColumnType("real");

                    b.Property<string>("AmmoniaReceive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<float?>("ClosingBagStock")
                        .HasColumnType("real");

                    b.Property<float?>("ClosingSeedStock")
                        .HasColumnType("real");

                    b.Property<float?>("DOBalance")
                        .HasColumnType("real");

                    b.Property<float?>("DailyBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("DailySalesBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("DailySalesSeedQty")
                        .HasColumnType("real");

                    b.Property<float?>("DailySeedQty")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<float?>("MonthlyBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("MonthlySalesBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("MonthlySalesSeedQty")
                        .HasColumnType("real");

                    b.Property<float?>("MonthlySeedQty")
                        .HasColumnType("real");

                    b.Property<float>("PhosphoricPerTon")
                        .HasColumnType("real");

                    b.Property<string>("PhosphoricReceive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("SandPerTon")
                        .HasColumnType("real");

                    b.Property<string>("SandReceive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<float>("SulfuricPerTon")
                        .HasColumnType("real");

                    b.Property<string>("SulfuricReceive")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("YearlyBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("YearlySalesBagQty")
                        .HasColumnType("real");

                    b.Property<float?>("YearlySalesSeedQty")
                        .HasColumnType("real");

                    b.Property<float?>("YearlySeedQty")
                        .HasColumnType("real");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProductionId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("ProductId");

                    b.ToTable("Production");
                });

            modelBuilder.Entity("GTERP.Models.ProductionTargetSetup", b =>
                {
                    b.Property<int>("PrdTargetSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("FiscalMonthGoal")
                        .HasColumnType("real");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<float?>("FiscalYearGoal")
                        .HasColumnType("real");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<float?>("PrdCapacityMonth")
                        .HasColumnType("real");

                    b.Property<float>("PrdCapacityYear")
                        .HasColumnType("real");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PrdTargetSetId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.ToTable("ProductionTargetSetup");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseMain", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("DueAmt")
                        .HasColumnType("real");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PaidAmt")
                        .HasColumnType("real");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PurchaseDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PurchasePerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierContactId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurchaseId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseMains");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderMain", b =>
                {
                    b.Property<int>("PurOrderMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("ConvertionRate")
                        .HasColumnType("real");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Deduction")
                        .HasColumnType("real");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpectedRecivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<float?>("NetPOValue")
                        .HasColumnType("real");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PORef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("PurReqId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalPOValue")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurOrderMainId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DeptId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("PurReqId");

                    b.HasIndex("SectId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ComId", "PONo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("PurchaseOrderMain");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderSub", b =>
                {
                    b.Property<int>("PurOrderSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderMainId")
                        .HasColumnType("int");

                    b.Property<int?>("PurReqSubId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequisitionQty")
                        .HasColumnType("int");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurOrderSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurOrderMainId");

                    b.HasIndex("PurReqSubId");

                    b.ToTable("PurchaseOrderSub");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidMain", b =>
                {
                    b.Property<int>("PurOrderValidMainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ConvertionRate")
                        .HasColumnType("real");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Deduction")
                        .HasColumnType("real");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedReciveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedReciveDatestring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GateInHouseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GateInHouseDatestring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastDateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<float?>("NetPOValue")
                        .HasColumnType("real");

                    b.Property<DateTime>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PORef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POValidNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("PurReqId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("TermsAndCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalPOValue")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurOrderValidMainId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("PurReqId");

                    b.HasIndex("SectId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrderValidMains");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidSub", b =>
                {
                    b.Property<int>("PurOrderValidSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurOrderValidMainId")
                        .HasColumnType("int");

                    b.Property<int?>("PurReqSubId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PurchaseQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequisitionQty")
                        .HasColumnType("int");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurOrderValidSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurOrderValidMainId");

                    b.HasIndex("PurReqSubId");

                    b.ToTable("PurchaseOrderValidSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidSubSupplier", b =>
                {
                    b.Property<int>("POValidSubSupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("POValidQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurOrderValidSubId")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("POValidSubSupplierId");

                    b.HasIndex("PurOrderValidSubId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrderValidSubSuppliers");
                });

            modelBuilder.Entity("GTERP.Models.PurchasePaymentSub", b =>
                {
                    b.Property<int>("PurchasePaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PaymentCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurchasePaymentSubId");

                    b.HasIndex("AccId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchasePaymentSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseRequisitionMain", b =>
                {
                    b.Property<int>("PurReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ApprovedByEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BoardMeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PRNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int>("PurposeId")
                        .HasColumnType("int");

                    b.Property<int?>("RecommenedByEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReqRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurReqId");

                    b.HasIndex("ApprovedByEmpId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("PurposeId");

                    b.HasIndex("RecommenedByEmpId");

                    b.HasIndex("SectId");

                    b.HasIndex("ComId", "PRNo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("PurchaseRequisitionMain");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseRequisitionSub", b =>
                {
                    b.Property<int>("PurReqSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("LastPurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurReqId")
                        .HasColumnType("int");

                    b.Property<decimal>("PurReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PurReqSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurReqId");

                    b.ToTable("PurchaseRequisitionSub");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnMain", b =>
                {
                    b.Property<int>("PurchaseReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("DueAmt")
                        .HasColumnType("real");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NetAmount")
                        .HasColumnType("real");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PaidAmt")
                        .HasColumnType("real");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseReturnDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseReturnNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PurchaseReturnPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierContactId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDirectReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("vPurchaseMainsPurchaseId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseReturnId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("vPurchaseMainsPurchaseId");

                    b.ToTable("PurchaseReturnMains");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnPaymentSub", b =>
                {
                    b.Property<int>("PurchaseReturnPaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnMainPurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("vChartofAccountsAccId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseReturnPaymentSubId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PurchaseReturnMainPurchaseReturnId");

                    b.HasIndex("vChartofAccountsAccId");

                    b.ToTable("PurchaseReturnPaymentSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnSub", b =>
                {
                    b.Property<int>("PurchaseReturnSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSerialId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnMainPurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SalesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseReturnSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSerialId");

                    b.HasIndex("PurchaseReturnMainPurchaseReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseReturnSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnTermsSub", b =>
                {
                    b.Property<int>("PurchaseReturnTermsSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnMainPurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseReturnTermsSubId");

                    b.HasIndex("PurchaseReturnMainPurchaseReturnId");

                    b.ToTable("PurchaseReturnTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseSub", b =>
                {
                    b.Property<int>("PurchaseSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSerialId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SalesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseTermsSub", b =>
                {
                    b.Property<int>("PurchaseTermsSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseTermsSubId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseType", b =>
                {
                    b.Property<int>("PurchaseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseTypeId");

                    b.ToTable("PurchaseTypes");
                });

            modelBuilder.Entity("GTERP.Models.Purpose", b =>
                {
                    b.Property<int>("PurposeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PurposeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("PurposeId");

                    b.ToTable("Purpose");
                });

            modelBuilder.Entity("GTERP.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("authDesig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("authSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("passMark")
                        .HasColumnType("int");

                    b.Property<string>("preparedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Quiz");
                });

            modelBuilder.Entity("GTERP.Models.RawMaterialStock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<float?>("ReceiveQty")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<float?>("SendQty")
                        .HasColumnType("real");

                    b.Property<float?>("StockQty")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("RawMaterialStock");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Answer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRight")
                        .HasColumnType("bit");

                    b.Property<string>("optionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("quizid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("quizid");

                    b.ToTable("Exam_Answers");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("timer")
                        .HasColumnType("int");

                    b.HasKey("ModuleId");

                    b.ToTable("Exam_Modules");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Quiz", b =>
                {
                    b.Property<int>("Quiz_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("passMark")
                        .HasColumnType("int");

                    b.Property<string>("preparedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("quiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("timer")
                        .HasColumnType("int");

                    b.HasKey("Quiz_Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("Exam_Quizzes");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Applicant", b =>
                {
                    b.Property<int>("Applicant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("A_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExamResult")
                        .HasColumnType("float");

                    b.Property<int>("Moduleid")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("S_Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("VivaResult")
                        .HasColumnType("float");

                    b.HasKey("Applicant_Id");

                    b.ToTable("HR_Recruitment_Applicants");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Dept_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("DeptId");

                    b.ToTable("HR_Recruitment_Department");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("A_Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobResponsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBenifits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int>("TempId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Vacancy")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("DeptId");

                    b.ToTable("HR_Recruitment_Posts");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Requisition", b =>
                {
                    b.Property<int>("RequId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requ_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Vacancy")
                        .HasColumnType("int");

                    b.HasKey("RequId");

                    b.HasIndex("DeptId");

                    b.ToTable("HR_Recruitment_Requisition");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_SubmittedCV", b =>
                {
                    b.Property<int>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("Attachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("SubmittedCV_CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedCV_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SubmittedCV_ExpectedSalary")
                        .HasColumnType("float");

                    b.Property<string>("SubmittedCV_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedCV_Number")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("SubmittedCV_linkedin_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("S_Id");

                    b.ToTable("HR_Recruitment_SubmittedCVs");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Templete", b =>
                {
                    b.Property<int>("TempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("A_Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_Requirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobResponsibility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherBenifits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TempId");

                    b.ToTable("HR_Recruitment_Templetes");
                });

            modelBuilder.Entity("GTERP.Models.ReorderLevel", b =>
                {
                    b.Property<int>("ReorderLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserId")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ReorderLevelId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("ComId", "ProductId", "WarehouseId")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("ReorderLevel");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermission_Details", b =>
                {
                    b.Property<int>("ReportPermission_DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<int>("ReportPermission_MasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportTypeReportId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.HasKey("ReportPermission_DetailsId");

                    b.HasIndex("ReportPermission_MasterId");

                    b.HasIndex("ReportTypeReportId");

                    b.ToTable("ReportPermission_Details");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermission_Master", b =>
                {
                    b.Property<int>("ReportPermission_MasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUser")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridPermission")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportPermission_MasterId");

                    b.ToTable("ReportPermission_Masters");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermissions", b =>
                {
                    b.Property<int>("ReportPermissionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("isChecked")
                        .HasColumnType("int");

                    b.HasKey("ReportPermissionsId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportPermissions");
                });

            modelBuilder.Entity("GTERP.Models.ReportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TypeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");
                });

            modelBuilder.Entity("GTERP.Models.Representative", b =>
                {
                    b.Property<int>("RepresentativeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepresentativeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("RepresentativeId");

                    b.ToTable("Representative");
                });

            modelBuilder.Entity("GTERP.Models.SalesMain", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerContactId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("SalesDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SalesId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesMains");
                });

            modelBuilder.Entity("GTERP.Models.SalesPaymentSub", b =>
                {
                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SalesId", "PaymentTypeId", "AccId");

                    b.HasIndex("AccId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("SalesPaymentSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnMain", b =>
                {
                    b.Property<int>("SalesReturnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerContactId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetAmountBDT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaidInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SalesReturnDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesReturnNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SalesReturnPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDirectReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SalesReturnId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesReturnMains");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnPaymentSub", b =>
                {
                    b.Property<int>("SalesReturnPaymentSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnMainSalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("comid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("vChartofAccountsAccId")
                        .HasColumnType("int");

                    b.HasKey("SalesReturnPaymentSubId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalesReturnMainSalesReturnId");

                    b.HasIndex("vChartofAccountsAccId");

                    b.ToTable("SalesReturnPaymentSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnSub", b =>
                {
                    b.Property<int>("SalesReturnSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductSerialId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnMainSalesReturnId")
                        .HasColumnType("int");

                    b.Property<int>("SalesTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("SalesReturnSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSerialId");

                    b.HasIndex("SalesReturnMainSalesReturnId");

                    b.HasIndex("SalesTypeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesReturnSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnTermsSub", b =>
                {
                    b.Property<int>("SalesReturnTermsSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnMainSalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SalesReturnTermsSubId");

                    b.HasIndex("SalesReturnMainSalesReturnId");

                    b.ToTable("SalesReturnTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesSub", b =>
                {
                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int>("SalesTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ProductSerialId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Carton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndChkPer")
                        .HasColumnType("int");

                    b.Property<decimal>("IndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndVatPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PCTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("SalesId", "SalesTypeId", "ProductId", "ProductDescription", "ProductSerialId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductSerialId");

                    b.HasIndex("SalesTypeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesTargetSetup", b =>
                {
                    b.Property<int>("SaleTargetSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<float?>("FiscalMonthGoal")
                        .HasColumnType("real");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<float>("FiscalYearGoal")
                        .HasColumnType("real");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SaleTargetSetId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.ToTable("SalesTargetSetup");
                });

            modelBuilder.Entity("GTERP.Models.SalesTermsSub", b =>
                {
                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.HasKey("SalesId", "Terms", "Description");

                    b.ToTable("SalesTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesType", b =>
                {
                    b.Property<int>("SalesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SalesTypeId");

                    b.ToTable("SalesType");
                });

            modelBuilder.Entity("GTERP.Models.ShareHolding", b =>
                {
                    b.Property<int>("ShareHoldingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("NoOfShareHoldings")
                        .HasColumnType("int");

                    b.Property<string>("NoteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("ShareHolderDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ShareHoldingId");

                    b.HasIndex("FiscalYearId");

                    b.ToTable("ShareHoldings");
                });

            modelBuilder.Entity("GTERP.Models.ShipMode", b =>
                {
                    b.Property<int>("ShipModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ShipModeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShipModeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("ShipModeId");

                    b.ToTable("ShipModes");
                });

            modelBuilder.Entity("GTERP.Models.SisterConcernCompany", b =>
                {
                    b.Property<int>("SisterConcernCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TINNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeLicenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Web")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SisterConcernCompanyId");

                    b.ToTable("SisterConcernCompany");
                });

            modelBuilder.Entity("GTERP.Models.SmsSetting", b =>
                {
                    b.Property<int>("SmsSettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Wid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("isInactive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsAbsent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsCollection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsLate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPresent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SmsSettingID");

                    b.ToTable("smssettings");
                });

            modelBuilder.Entity("GTERP.Models.SoftwarePackage", b =>
                {
                    b.Property<int>("SoftwarePackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SoftwarePackageFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SoftwarePackageImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SoftwarePackageImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwarePackageId");

                    b.ToTable("SoftwarePackages");
                });

            modelBuilder.Entity("GTERP.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("GTERP.Models.StoreRequisitionMain", b =>
                {
                    b.Property<int>("StoreReqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ApprovedByEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BoardMeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Complete")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("INDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("INNo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubStore")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int>("PurposeId")
                        .HasColumnType("int");

                    b.Property<int?>("RecommenedByEmpId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReqRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SRNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubWarehouseId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StoreReqId");

                    b.HasIndex("ApprovedByEmpId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("PurposeId");

                    b.HasIndex("RecommenedByEmpId");

                    b.HasIndex("SectId");

                    b.HasIndex("SubWarehouseId");

                    b.HasIndex("ComId", "SRNo")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL");

                    b.ToTable("StoreRequisitionMain");
                });

            modelBuilder.Entity("GTERP.Models.StoreRequisitionSub", b =>
                {
                    b.Property<int>("StoreReqSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("RemainingReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("StoreReqId")
                        .HasColumnType("int");

                    b.Property<decimal>("StoreReqQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StoreReqSubId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreReqId");

                    b.ToTable("StoreRequisitionSub");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformation", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BrandInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySisterConcernCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("FOB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderQty")
                        .HasColumnType("int");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StyleStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("StyleId");

                    b.HasIndex("BrandInfoId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("CompanySisterConcernCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("StyleStatusId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("StyleInformation");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformations_Temp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BrandInfoId")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("FOB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderQty")
                        .HasColumnType("int");

                    b.Property<long?>("ProductCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ProductGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ProductGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StyleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<string>("StyleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("StyleStatusId")
                        .HasColumnType("int");

                    b.Property<string>("StyleStatusName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("StyleInformations_Temps");
                });

            modelBuilder.Entity("GTERP.Models.StyleStatus", b =>
                {
                    b.Property<int>("StyleStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("StyleStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StyleStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StyleStatusId");

                    b.ToTable("StyleStatus");
                });

            modelBuilder.Entity("GTERP.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SubCategoryFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("SubCategoryImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SubCategoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionDetails", b =>
                {
                    b.Property<int>("SubMenuPermissionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SubMenuPermissionId")
                        .HasColumnType("int");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("SubMenuPermissionDetailsId");

                    b.HasIndex("ModuleMenuId");

                    b.HasIndex("SubMenuPermissionId");

                    b.ToTable("SubMenuPermissionDetails");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionMasters", b =>
                {
                    b.Property<int>("SubMenuPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefaultModuleId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserIdPermission")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserIdUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("SubMenuPermissionId");

                    b.ToTable("SubMenuPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionReportDetails", b =>
                {
                    b.Property<int>("SubMenuPermissionReportDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportTypeReportId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SubMenuPermissionReportMasterId")
                        .HasColumnType("int");

                    b.HasKey("SubMenuPermissionReportDetailsId");

                    b.HasIndex("ReportTypeReportId");

                    b.HasIndex("SubMenuPermissionReportMasterId");

                    b.ToTable("SubMenuPermissionReportDetails");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionReportMaster", b =>
                {
                    b.Property<int>("SubMenuPermissionReportMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUser")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserIdPermission")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("SubMenuPermissionReportMasterId");

                    b.ToTable("SubMenuPermissionReportMasters");
                });

            modelBuilder.Entity("GTERP.Models.SuccessLog", b =>
                {
                    b.Property<int>("SuccessLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuccessLogId");

                    b.ToTable("SuccessLogs");
                });

            modelBuilder.Entity("GTERP.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DistId")
                        .HasColumnType("int");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PStationId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SupplierNameB")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TinNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("SupplierId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistId");

                    b.HasIndex("PStationId");

                    b.HasIndex("ComId", "SupplierCode")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [SupplierCode] IS NOT NULL");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GTERP.Models.SupplierContact", b =>
                {
                    b.Property<int>("SupplierContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ContactEmailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierContactId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierContacts");
                });

            modelBuilder.Entity("GTERP.Models.SupplierInformation", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContactID")
                        .UseIdentityColumn();

                    b.Property<string>("Addedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalOffice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Merchandiser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Updatedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ContactID");

                    b.HasIndex("CountryId");

                    b.ToTable("SupplierInformations");
                });

            modelBuilder.Entity("GTERP.Models.Support", b =>
                {
                    b.Property<int>("SupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ShipViewId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("SupportId");

                    b.ToTable("Supports");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientCompany", b =>
                {
                    b.Property<int>("ClientComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientComAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClientComCompanyType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ClientComEmail")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ClientComName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ClientComPhone")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ClientComId");

                    b.ToTable("Tax_ClientCompany");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientContactPayment", b =>
                {
                    b.Property<int>("ClientPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ContractPayment")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiscalYearId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ClientPaymentId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tax_ClientContactPayment");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientInfo", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClientAddress")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClientCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ClientCompId")
                        .HasColumnType("int");

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ClinetTaxCircle")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ClinetTinNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desigid")
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("dtContStar")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientCompId");

                    b.ToTable("Tax_ClientInfo");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientTaxInfo", b =>
                {
                    b.Property<int>("ClientTaxInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtAckSlipReceive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtSubmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTaxCerRcv")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTexExtension")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiscalYearId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IsAckSlipRcv")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IsSubmit")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("IsTaxCerRcv")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("IsTexExtension")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ClientTaxInfoId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tax_ClientTaxInfos");
                });

            modelBuilder.Entity("GTERP.Models.Tax_Costing", b =>
                {
                    b.Property<int>("CostingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("CostAmount")
                        .HasColumnType("real");

                    b.Property<string>("CostRemarks")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCostingInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("CostingID");

                    b.ToTable("Tax_Costings");
                });

            modelBuilder.Entity("GTERP.Models.Tax_DocumentInfo", b =>
                {
                    b.Property<int>("DocumentInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalYearId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VarType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("DocumentInfoId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tax_DocumentInfos");
                });

            modelBuilder.Entity("GTERP.Models.Tax_PaymentReceived", b =>
                {
                    b.Property<int>("PaymentReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtPaymentReceive")
                        .HasColumnType("datetime2");

                    b.Property<string>("FiscalYearId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("PaymentAmt")
                        .HasColumnType("real");

                    b.Property<string>("PaymentRemarks")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("PaymentReceiveId");

                    b.HasIndex("ClientId");

                    b.ToTable("Tax_PaymentReceiveds");
                });

            modelBuilder.Entity("GTERP.Models.Technical", b =>
                {
                    b.Property<int>("TechnicalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EGExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EGHydroTest")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EGNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EGRefillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EGType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("FSDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FSLocaiton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FSName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FSNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportChalanNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportDensity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportPhosphoric")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImportPhosphorusPentoxide")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("ImportQty")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LicenseApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LicenseCertificateRcvDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LicenseExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseRenewingAuth")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<string>("MeetingName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MeetingNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("MeetingTotalQty")
                        .HasColumnType("real");

                    b.Property<string>("MeetingType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("TrainingDay")
                        .HasColumnType("real");

                    b.Property<float?>("TrainingHour")
                        .HasColumnType("real");

                    b.Property<string>("TrainingName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("TrainingPresentQty")
                        .HasColumnType("real");

                    b.Property<string>("TrainingSub")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VisitName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("VisitOrg")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<float?>("VisitOther")
                        .HasColumnType("real");

                    b.Property<float?>("VisitTotalQty")
                        .HasColumnType("real");

                    b.Property<float?>("VisitTraineeQty")
                        .HasColumnType("real");

                    b.Property<float?>("VisitTrainerQty")
                        .HasColumnType("real");

                    b.Property<float?>("VisitWorkhour")
                        .HasColumnType("real");

                    b.Property<DateTime?>("WasteReportSendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteReportSendNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("WasteSampleCollectDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WasteTestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteTestNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("dtInput")
                        .HasColumnType("datetime2");

                    b.HasKey("TechnicalId");

                    b.HasIndex("MeetingId");

                    b.ToTable("Technical");
                });

            modelBuilder.Entity("GTERP.Models.TemDepSchedule", b =>
                {
                    b.Property<int>("DepreciationScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulateDepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccumulateDepBooked")
                        .HasColumnType("int");

                    b.Property<int>("AccumulateDepRemain")
                        .HasColumnType("int");

                    b.Property<decimal>("DepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<bool>("JournalEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepreciationScheduleId");

                    b.ToTable("TemDepSchedules");
                });

            modelBuilder.Entity("GTERP.Models.TemDepScheduleSale", b =>
                {
                    b.Property<int>("DepreciationScheduleSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulateDepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AccumulateDepBooked")
                        .HasColumnType("int");

                    b.Property<int>("AccumulateDepRemain")
                        .HasColumnType("int");

                    b.Property<decimal>("DepAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_SellId")
                        .HasColumnType("int");

                    b.Property<bool>("JournalEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepreciationScheduleSaleId");

                    b.ToTable("TemDepScheduleSales");
                });

            modelBuilder.Entity("GTERP.Models.Tem_FA_Details", b =>
                {
                    b.Property<int>("FA_DetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("AccumulatedDepreciatedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AssetItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AssignToDept")
                        .HasColumnType("int");

                    b.Property<int?>("AssignToSection")
                        .HasColumnType("int");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepCalFromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EVAULife")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FA_Dep_StatusId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDepRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("IssuNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RemainingMonth")
                        .HasColumnType("int");

                    b.Property<int>("RemainingYear")
                        .HasColumnType("int");

                    b.Property<int>("UsefullLife")
                        .HasColumnType("int");

                    b.Property<decimal>("WrittenDownValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FA_DetailsId");

                    b.ToTable("Tem_FA_Details");
                });

            modelBuilder.Entity("GTERP.Models.Tem_FA_Sell", b =>
                {
                    b.Property<int>("FA_SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DepCalFromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FA_Dep_StatusId")
                        .HasColumnType("int");

                    b.Property<int>("FA_DetailsId")
                        .HasColumnType("int");

                    b.Property<int>("FA_MasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDepRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("MRRDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MRRNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SellsPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("FA_SellId");

                    b.ToTable("Tem_FA_Sell");
                });

            modelBuilder.Entity("GTERP.Models.TempEmpData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("BS")
                        .HasColumnType("real");

                    b.Property<string>("BankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChildNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesignationB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EducationQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FA")
                        .HasColumnType("real");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GS")
                        .HasColumnType("real");

                    b.Property<float>("HR")
                        .HasColumnType("real");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MA")
                        .HasColumnType("real");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomineeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomineeMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomineeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerVill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerVillB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentPS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentVill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentVillB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationWithNominee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpouseNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TA")
                        .HasColumnType("real");

                    b.Property<string>("TinNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TempEmpData");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_MasterLC_Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CatNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabrication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("HSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kimball")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OrderQty")
                        .HasColumnType("real");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderUOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityPcs")
                        .HasColumnType("int");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("ShipDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalValue")
                        .HasColumnType("real");

                    b.Property<string>("UOM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("real");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_MasterLC_Details");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_MasterLC_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Buyer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsigneeBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incoterm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insurance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LCIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCQty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpeningBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDestination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDischarge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfLoading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("Shipmode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tolerance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_MasterLC_Masters");
                });

            modelBuilder.Entity("GTERP.Models.Temp_COM_ProformaInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportPONo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportQty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCAF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PIDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PINo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SL")
                        .HasColumnType("int");

                    b.Property<string>("Supplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temp_COM_ProformaInvoices");
                });

            modelBuilder.Entity("GTERP.Models.TermsMain", b =>
                {
                    b.Property<int>("TermsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsRemarks")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("TermsId");

                    b.ToTable("TermsMain");
                });

            modelBuilder.Entity("GTERP.Models.TermsSerialSub", b =>
                {
                    b.Property<int>("TermsSerialSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SerialNo")
                        .HasColumnType("int");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.Property<int>("TermsSubId")
                        .HasColumnType("int");

                    b.HasKey("TermsSerialSubId");

                    b.HasIndex("TermsSubId");

                    b.ToTable("TermsSerialSub");
                });

            modelBuilder.Entity("GTERP.Models.TermsSub", b =>
                {
                    b.Property<int>("TermsSubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.HasKey("TermsSubId");

                    b.HasIndex("TermsId");

                    b.ToTable("TermsSub");
                });

            modelBuilder.Entity("GTERP.Models.TradeTerm", b =>
                {
                    b.Property<int>("TradeTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TradeTermName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TradeTermShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("TradeTermId");

                    b.ToTable("TradeTerms");
                });

            modelBuilder.Entity("GTERP.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameBangla")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UnitId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("GTERP.Models.UnitGroup", b =>
                {
                    b.Property<string>("UnitGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UnitGroupId");

                    b.ToTable("UnitGroups");
                });

            modelBuilder.Entity("GTERP.Models.UnitMaster", b =>
                {
                    b.Property<string>("UnitMasterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsBaseUOM")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal?>("RelativeFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitMasterId");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("UnitMasters");
                });

            modelBuilder.Entity("GTERP.Models.UseUtilities", b =>
                {
                    b.Property<int>("UtilitiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<float?>("Consumption")
                        .HasColumnType("real");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<float?>("FiscalYearBudgetVal")
                        .HasColumnType("real");

                    b.Property<int>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<int>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<float?>("StdDesignVal")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedbyUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UtilitiesId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("UseUtilities");
                });

            modelBuilder.Entity("GTERP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("LoginUser");
                });

            modelBuilder.Entity("GTERP.Models.UserCompanyPermission", b =>
                {
                    b.Property<int>("UserCompanyPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("SortNo")
                        .HasColumnType("int");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("UserCompanyPermissionId");

                    b.ToTable("UserCompanyPermissions");
                });

            modelBuilder.Entity("GTERP.Models.UserLoggingTrack", b =>
                {
                    b.Property<int>("LoggingTrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleCourseId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoggingTrackId");

                    b.HasIndex("ModuleCourseId");

                    b.ToTable("UserLoggingTracks");
                });

            modelBuilder.Entity("GTERP.Models.UserLogingInfo", b =>
                {
                    b.Property<int>("UserLogingInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Platform")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebBrowserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UserLogingInfoId");

                    b.ToTable("UserLogingInfos");
                });

            modelBuilder.Entity("GTERP.Models.UserPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AppUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAll")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashbankMangement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGeneralAccouonts")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHRAndPayroll")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStore")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStoreAndAccounts")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PermissionId");

                    b.HasIndex("EmpId");

                    b.HasIndex("ComId", "EmpId", "AppUserId")
                        .IsUnique()
                        .HasFilter("[ComId] IS NOT NULL AND [EmpId] IS NOT NULL AND [AppUserId] IS NOT NULL");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("GTERP.Models.UserState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastVisited")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserStates");
                });

            modelBuilder.Entity("GTERP.Models.UserTransactionLog", b =>
                {
                    b.Property<int>("UserTransactionLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommandType")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DocumentReferance")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FlagValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PcName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatement")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("userid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UserTransactionLogId");

                    b.ToTable("UserTransactionLogs");
                });

            modelBuilder.Entity("GTERP.Models.VersionMenuPermission_Details", b =>
                {
                    b.Property<int>("MenuPermissionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleMenuId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("MenuPermissionDetailsId");

                    b.HasIndex("MenuPermissionId");

                    b.HasIndex("ModuleMenuId");

                    b.ToTable("VersionMenuPermission_Details");
                });

            modelBuilder.Entity("GTERP.Models.VersionMenuPermission_Master", b =>
                {
                    b.Property<int>("MenuPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefaultModuleId")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridUpdate")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("MenuPermissionId");

                    b.ToTable("VersionMenuPermission_Masters");
                });

            modelBuilder.Entity("GTERP.Models.Version_Report_Details", b =>
                {
                    b.Property<int>("VersionReportDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("ReportTypeReportId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("VersionReportMasterId")
                        .HasColumnType("int");

                    b.HasKey("VersionReportDetailsId");

                    b.HasIndex("ReportTypeReportId");

                    b.HasIndex("VersionReportMasterId");

                    b.ToTable("Version_Report_Details");
                });

            modelBuilder.Entity("GTERP.Models.Version_Report_Master", b =>
                {
                    b.Property<int>("VersionReportMasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoftwareId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUser")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Updatedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("VersionId")
                        .HasColumnType("int");

                    b.HasKey("VersionReportMasterId");

                    b.ToTable("Version_Report_Masters");
                });

            modelBuilder.Entity("GTERP.Models.VoucherTranGroup", b =>
                {
                    b.Property<int>("VoucherTranGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VoucherTranGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VoucherTranGroupId");

                    b.ToTable("VoucherTranGroups");
                });

            modelBuilder.Entity("GTERP.Models.WF_Ledger", b =>
                {
                    b.Property<int>("WFLedgerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AmountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaymentTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReceivedTK")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isPrinciple")
                        .HasColumnType("bit");

                    b.Property<string>("useridApprove")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("useridCheck")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("WFLedgerId");

                    b.HasIndex("BankAccountId");

                    b.ToTable("WF_Ledgers");
                });

            modelBuilder.Entity("GTERP.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConsumableWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductionWarehouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubWarehouse")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateByUserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WhName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("WarehouseId");

                    b.HasIndex("ParentId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("GTERP.Models.Warrenty", b =>
                {
                    b.Property<int>("WarrentyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("WarrentyDay")
                        .HasColumnType("int");

                    b.Property<string>("WarrentyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarrentyId");

                    b.ToTable("Warrenty");
                });

            modelBuilder.Entity("GTERP.Models.WorkOrderMaster", b =>
                {
                    b.Property<int>("WorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("AgreementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrencyId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<decimal?>("NetPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OtherExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecommenedById")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalesTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ServiceContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ServiceContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("ToPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WODetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkOrderAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("WorkOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkOrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkOrderRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkOrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("userid")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("WorkOrderId");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId1");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("RecommenedById");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WorkOrderStatusId");

                    b.ToTable("WorkOrderMasters");
                });

            modelBuilder.Entity("GTERP.Models.WorkorderStatus", b =>
                {
                    b.Property<int>("WorkorderStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("WorkorderStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkorderStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("comid")
                        .HasColumnType("int");

                    b.HasKey("WorkorderStatusId");

                    b.ToTable("WorkorderStatus");
                });

            modelBuilder.Entity("GTERP.Models.YearName", b =>
                {
                    b.Property<int>("YearNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearBng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearEng")
                        .HasColumnType("int");

                    b.HasKey("YearNameId");

                    b.ToTable("YearNames");
                });

            modelBuilder.Entity("HVFaceManagement.Models.HR_MachineNoHIK", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hikpassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hikuser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("LuserId")
                        .HasColumnType("smallint");

                    b.Property<string>("Pcname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HR_MachineNoHIK");
                });

            modelBuilder.Entity("GTERP.Models.Acc_AdvanceIncomeTax_Schedule", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BankStatementBalance", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetMain", b =>
                {
                    b.HasOne("GTERP.Models.PrdUnit", "vPrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "vFiscalMonth")
                        .WithMany()
                        .HasForeignKey("vFiscalMonthFiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "vFiscalYear")
                        .WithMany()
                        .HasForeignKey("vFiscalYearFiscalYearId");

                    b.Navigation("vFiscalMonth");

                    b.Navigation("vFiscalYear");

                    b.Navigation("vPrdUnit");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetRelease", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonth")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Acc_FiscalMonth");

                    b.Navigation("Acc_FiscalYear");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetSub", b =>
                {
                    b.HasOne("GTERP.Models.Acc_BudgetMain", "Acc_BudgetMain")
                        .WithMany("BudgetSubs")
                        .HasForeignKey("Acc_BudgetMainBudgetId");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("ChartOfAccountAccId");

                    b.HasOne("GTERP.Models.Country", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_BudgetMain");

                    b.Navigation("ChartOfAccount");

                    b.Navigation("Country");

                    b.Navigation("CountryForeign");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetSubSection", b =>
                {
                    b.HasOne("GTERP.Models.Acc_BudgetSub", "BudgetSub")
                        .WithMany("BudgetSubSections")
                        .HasForeignKey("BudgetSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_SubSection", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionSubSectId");

                    b.Navigation("BudgetSub");

                    b.Navigation("SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Acc_ChartOfAccount", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "AccumulatedDepChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccumulatedDepId");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "ParentChartOfAccount")
                        .WithMany()
                        .HasForeignKey("ParentID");

                    b.Navigation("AccumulatedDepChartOfAccount");

                    b.Navigation("ParentChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_ChartOfAccount_Initial", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount_Initial", "ParentChartOfAccountInitial")
                        .WithMany()
                        .HasForeignKey("ParentID");

                    b.Navigation("ParentChartOfAccountInitial");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Equity", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_ForeignLoan", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_JapanLoan", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Loan", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_StoreInTransit", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_GovtSchedule_Subsidy", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Acc_Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Acc_CurrencyLocal")
                        .WithMany()
                        .HasForeignKey("CountryIdLocal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "vPrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.VoucherTranGroup", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId");

                    b.HasOne("GTERP.Models.Acc_VoucherType", "Acc_VoucherType")
                        .WithMany("VoucherMains")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_Currency");

                    b.Navigation("Acc_CurrencyLocal");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Acc_VoucherType");

                    b.Navigation("VoucherTranGroups");

                    b.Navigation("vPrdUnit");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherNoPrefix", b =>
                {
                    b.HasOne("GTERP.Models.Acc_VoucherType", "vVoucherTypes")
                        .WithMany("VoucherNoPrefixs")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vVoucherTypes");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSub", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Infos")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Supplier", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.Acc_VoucherMain", "Acc_VoucherMain")
                        .WithMany("VoucherSubs")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.VoucherTranGroup", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupIdRow");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Acc_VoucherMain");

                    b.Navigation("Country");

                    b.Navigation("CountryForeign");

                    b.Navigation("Customers");

                    b.Navigation("HR_Emp_Infos");

                    b.Navigation("Suppliers");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSubCheckno", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_VoucherSub", "Acc_VoucherSub")
                        .WithMany("VoucherSubChecnoes")
                        .HasForeignKey("VoucherSubId");

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSubSection", b =>
                {
                    b.HasOne("GTERP.Models.Cat_SubSection", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionSubSectId");

                    b.HasOne("GTERP.Models.Acc_VoucherSub", "Acc_VoucherSub")
                        .WithMany("VoucherSubSections")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherTranGroup", b =>
                {
                    b.HasOne("GTERP.Models.Acc_VoucherMain", "acc_vouchermains")
                        .WithMany("Acc_VoucherTranGroups")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.VoucherTranGroup", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("acc_vouchermains");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("GTERP.Models.Answer", b =>
                {
                    b.HasOne("GTERP.Models.Quiz", "Quiz")
                        .WithMany("Answer")
                        .HasForeignKey("quizid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("GTERP.Models.AppKeys", b =>
                {
                    b.HasOne("GTERP.Models.Company", "Companies")
                        .WithMany("AppKeys")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");
                });

            modelBuilder.Entity("GTERP.Models.ApprovalPanel", b =>
                {
                    b.HasOne("GTERP.Models.ApprovalRole", "ApprovalRole")
                        .WithMany("ApprovalPanels")
                        .HasForeignKey("ApprovalRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ReportType", "ReportType")
                        .WithMany("ApprovalPanels")
                        .HasForeignKey("ReportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalRole");

                    b.Navigation("ReportType");
                });

            modelBuilder.Entity("GTERP.Models.Asset", b =>
                {
                    b.HasOne("GTERP.Models.AssetCurrentState", "AssetCurrentState")
                        .WithMany()
                        .HasForeignKey("AssetCurrentStateCurrentStateId");

                    b.HasOne("GTERP.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyComId");

                    b.HasOne("GTERP.Models.Depreciation", "Depreciation")
                        .WithMany()
                        .HasForeignKey("DepreciationId");

                    b.HasOne("GTERP.Models.Cat_Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("GTERP.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.PurchaseType", "PurchaseType")
                        .WithMany()
                        .HasForeignKey("PurchaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Supplier", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.Navigation("AssetCurrentState");

                    b.Navigation("Company");

                    b.Navigation("Depreciation");

                    b.Navigation("Location");

                    b.Navigation("Product");

                    b.Navigation("ProductCategory");

                    b.Navigation("PurchaseType");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentSub", b =>
                {
                    b.HasOne("GTERP.Models.AttachmentMain", "vAttachmentMain")
                        .WithMany("vAttachmentSub")
                        .HasForeignKey("AttachmentMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vAttachmentMain");
                });

            modelBuilder.Entity("GTERP.Models.BOMMain", b =>
                {
                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrdUnit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GTERP.Models.BOMSub", b =>
                {
                    b.HasOne("GTERP.Models.BOMMain", "BOMMain")
                        .WithMany("BOMSubs")
                        .HasForeignKey("BOMMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("InvProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("BOMMain");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNo", b =>
                {
                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanysSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBanks")
                        .WithMany("BankAccountNos")
                        .HasForeignKey("OpeningBankId");

                    b.Navigation("CommercialCompanys");

                    b.Navigation("OpeningBanks");
                });

            modelBuilder.Entity("GTERP.Models.BankAccountNoLienBank", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanysSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("GTERP.Models.LienBank", "LienBanks")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("BuyerInformations");

                    b.Navigation("CommercialCompanys");

                    b.Navigation("Countrys");

                    b.Navigation("LienBanks");

                    b.Navigation("SupplierInformations");
                });

            modelBuilder.Entity("GTERP.Models.Bill_Main", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId");

                    b.HasOne("GTERP.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GTERP.Models.Bill_Sub", b =>
                {
                    b.HasOne("GTERP.Models.Bill_Main", "Bill_Main")
                        .WithMany("Bill_Subs")
                        .HasForeignKey("BillMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Bill_Main");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GTERP.Models.Booking", b =>
                {
                    b.HasOne("GTERP.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DistrictWiseBooking", "DistrictWiseBooking")
                        .WithMany("Booking")
                        .HasForeignKey("DistWiseBookingId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStation")
                        .WithMany()
                        .HasForeignKey("PStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_District");

                    b.Navigation("Cat_PoliceStation");

                    b.Navigation("Customer");

                    b.Navigation("DistrictWiseBooking");

                    b.Navigation("MonthName");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.BudgetDetails", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.BudgetMain", "BudgetMain")
                        .WithMany("BudgetDetails")
                        .HasForeignKey("BudgetMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("BudgetMain");
                });

            modelBuilder.Entity("GTERP.Models.BudgetMain", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthName");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.Budget_ProductionTarget", b =>
                {
                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.Navigation("PrdUnit");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelChallan", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferDelOrder", "BufferDelOrder")
                        .WithMany("BufferDelChallan")
                        .HasForeignKey("BufferDelOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferDelOrder");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelOrder", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferRepresentative", "BufferRepresentative")
                        .WithMany()
                        .HasForeignKey("BufferRepresentativeId");

                    b.HasOne("GTERP.Models.Buffers.RepresentativeBooking", "RepresentativeBooking")
                        .WithMany("BufferDeliveryOrder")
                        .HasForeignKey("RepresentativeBookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferRepresentative");

                    b.Navigation("RepresentativeBooking");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferGatePassSub", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferDelChallan", "BufferDelChallan")
                        .WithMany("BufferGatePassChallans")
                        .HasForeignKey("BufferDelChallanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Buffers.BufferGatePass", "BufferGatePass")
                        .WithMany("BufferChallans")
                        .HasForeignKey("BufferGatePassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferDelChallan");

                    b.Navigation("BufferGatePass");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BuffertWiseBooking", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferList", "BufferList")
                        .WithMany()
                        .HasForeignKey("BufferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferList");

                    b.Navigation("MonthName");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.DistictBuffer", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferList", "BufferList")
                        .WithMany("DistictBuffer")
                        .HasForeignKey("BufferListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany("DistictBufferList")
                        .HasForeignKey("Cat_DistrictDistId");

                    b.Navigation("BufferList");

                    b.Navigation("Cat_District");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.RepresentativeBooking", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BuffertWiseBooking", "BuffertWiseBooking")
                        .WithMany()
                        .HasForeignKey("BufferBookingId");

                    b.HasOne("GTERP.Models.Buffers.BufferList", "BufferList")
                        .WithMany()
                        .HasForeignKey("BufferListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Buffers.BufferRepresentative", "BufferRepresentative")
                        .WithMany()
                        .HasForeignKey("BufferRepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferList");

                    b.Navigation("BufferRepresentative");

                    b.Navigation("BuffertWiseBooking");

                    b.Navigation("MonthName");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.RepresentativeBuffer", b =>
                {
                    b.HasOne("GTERP.Models.Buffers.BufferList", "BufferList")
                        .WithMany("BufferRepresentativeList")
                        .HasForeignKey("BufferListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Buffers.BufferRepresentative", "BufferRepresentative")
                        .WithMany("RepresentativeBuffer")
                        .HasForeignKey("BufferRepresentativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BufferList");

                    b.Navigation("BufferRepresentative");
                });

            modelBuilder.Entity("GTERP.Models.BuyerInformation", b =>
                {
                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupId");

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Employee", "EmployeeExport")
                        .WithMany()
                        .HasForeignKey("EmployeeIdExport");

                    b.HasOne("GTERP.Models.Employee", "EmployeeImport")
                        .WithMany()
                        .HasForeignKey("EmployeeIdImport");

                    b.Navigation("BuyerGroups");

                    b.Navigation("Country");

                    b.Navigation("EmployeeExport");

                    b.Navigation("EmployeeImport");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany("COM_BBLC_Details")
                        .HasForeignKey("COM_BBLC_MasterBBLCId");

                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany("COM_BBLC_Details")
                        .HasForeignKey("COM_ProformaInvoicePIId");

                    b.Navigation("COM_BBLC_Master");

                    b.Navigation("COM_ProformaInvoice");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Master", b =>
                {
                    b.HasOne("GTERP.Models.SisterConcernCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanySisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.Navigation("COM_GroupLC_Main");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("daylists");

                    b.Navigation("Destination");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTermss");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("SupplierInformation");

                    b.Navigation("TradeTerms");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_CNFBillExportMaster", "COM_CNFBillExportMaster")
                        .WithMany("COM_CNFBillExportDetails")
                        .HasForeignKey("COM_CNFBillExportMasterCNFExpenseID");

                    b.HasOne("GTERP.Models.COM_CNFExpenseType", "COM_CNFExpenseTypes")
                        .WithMany("COM_CNFBillExportDetails")
                        .HasForeignKey("COM_CNFExpenseTypesExpenseHeadID");

                    b.Navigation("COM_CNFBillExportMaster");

                    b.Navigation("COM_CNFExpenseTypes");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "Companies")
                        .WithMany()
                        .HasForeignKey("CompaniesSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMasters")
                        .WithMany()
                        .HasForeignKey("ExportInvoiceMastersInvoiceId");

                    b.Navigation("BuyerInformations");

                    b.Navigation("Companies");

                    b.Navigation("ExportInvoiceMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_CNFBillImportMaster", "COM_CNFBillImportMaster")
                        .WithMany("COM_CNFBillImportDetails")
                        .HasForeignKey("COM_CNFBillImportMasterCNFExpenseID");

                    b.HasOne("GTERP.Models.COM_CNFExpenseType", "COM_CNFExpenseTypes")
                        .WithMany("COM_CNFBillImportDetails")
                        .HasForeignKey("COM_CNFExpenseTypesExpenseHeadID");

                    b.Navigation("COM_CNFBillImportMaster");

                    b.Navigation("COM_CNFExpenseTypes");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Masters")
                        .WithMany()
                        .HasForeignKey("COM_BBLC_MastersBBLCId");

                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoices")
                        .WithMany()
                        .HasForeignKey("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "Companies")
                        .WithMany()
                        .HasForeignKey("CompaniesSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("BuyerInformations");

                    b.Navigation("COM_BBLC_Masters");

                    b.Navigation("COM_CommercialInvoices");

                    b.Navigation("Companies");

                    b.Navigation("SupplierInformations");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice", b =>
                {
                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany("COM_CommercialInvoice")
                        .HasForeignKey("BBLCId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.CommercialLCType", "CommercialLCTypes")
                        .WithMany()
                        .HasForeignKey("CommercialLCTypeId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DocumentStatus", "DocumentStatus")
                        .WithMany()
                        .HasForeignKey("DocumentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany()
                        .HasForeignKey("MachinaryLCId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_BBLC_Master");

                    b.Navigation("COM_MachinaryLC_Master");

                    b.Navigation("CommercialCompany");

                    b.Navigation("CommercialLCTypes");

                    b.Navigation("Currency");

                    b.Navigation("DocumentStatus");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("SupplierInformations");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoices")
                        .WithMany("COM_CommercialInvoice_Subs")
                        .HasForeignKey("COM_CommercialInvoicesCommercialInvoiceId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_CommercialInvoices");

                    b.Navigation("ItemDescs");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_DocumentAcceptance_Master", "COM_DocumentAcceptance_Master")
                        .WithMany("COM_DocumentAcceptance_Details")
                        .HasForeignKey("COM_DocumentAcceptance_MasterBillsOfExchangeId");

                    b.HasOne("GTERP.Models.COM_CommercialInvoice", "COM_CommercialInvoice")
                        .WithMany()
                        .HasForeignKey("CommercialInvoiceId");

                    b.Navigation("COM_CommercialInvoice");

                    b.Navigation("COM_DocumentAcceptance_Master");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Master", b =>
                {
                    b.HasOne("GTERP.Models.ApprovedBy", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("GTERP.Models.COM_BBLC_Master", "COM_BBLC_Master")
                        .WithMany()
                        .HasForeignKey("BBLCId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanysSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("ApprovedBy");

                    b.Navigation("BuyerInformation");

                    b.Navigation("COM_BBLC_Master");

                    b.Navigation("COM_GroupLC_Main");

                    b.Navigation("CommercialCompanys");

                    b.Navigation("Currency");

                    b.Navigation("SupplierInformations");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Main", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SisterConcernCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanySisterConcernCompanyId");

                    b.Navigation("BuyerInformation");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Mains")
                        .WithMany("COM_GroupLC_Sub")
                        .HasForeignKey("COM_GroupLC_MainsGroupLCId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_GroupLC_Subs")
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.Navigation("COM_GroupLC_Mains");

                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany("COM_MachinaryLC_Details")
                        .HasForeignKey("COM_MachinaryLC_MasterMachinaryLCId");

                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany("COM_MachinaryLC_Details")
                        .HasForeignKey("COM_ProformaInvoicePIId");

                    b.Navigation("COM_MachinaryLC_Master");

                    b.Navigation("COM_ProformaInvoice");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Master", b =>
                {
                    b.HasOne("GTERP.Models.SisterConcernCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanySisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("daylists");

                    b.Navigation("Destination");

                    b.Navigation("ItemGroups");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTermss");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("SupplierInformation");

                    b.Navigation("TradeTerms");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_MachineryLCMaster", "COM_MachineryLCMaster")
                        .WithMany("COM_MachineryLCDetailses")
                        .HasForeignKey("MachineryLCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.WorkOrderMaster", "WorkOrderMaster")
                        .WithMany("COM_MachineryLCDetailss")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_MachineryLCMaster");

                    b.Navigation("WorkOrderMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCMaster", b =>
                {
                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("PaymentTerms");

                    b.Navigation("SupplierInformation");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupID");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompaniesSisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Destination", "Destinations")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCNature", "LCNature")
                        .WithMany()
                        .HasForeignKey("LCNatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCStatus", "LCStatus")
                        .WithMany()
                        .HasForeignKey("LCStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LCType", "LCType")
                        .WithMany()
                        .HasForeignKey("LCTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.LienBank", "LienBank")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("LienBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfDischargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfLoadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ShipMode", "ShipModes")
                        .WithMany()
                        .HasForeignKey("ShipModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SupplierInformation", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("BankAccountNos");

                    b.Navigation("BuyerGroups");

                    b.Navigation("BuyerInformations");

                    b.Navigation("CommercialCompanies");

                    b.Navigation("Currency");

                    b.Navigation("DayList");

                    b.Navigation("Destinations");

                    b.Navigation("LCNature");

                    b.Navigation("LCStatus");

                    b.Navigation("LCType");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTerms");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipModes");

                    b.Navigation("ShippingAgent");

                    b.Navigation("TradeTerms");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLCExport", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_MasterLCExport")
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.ExportOrder", "ExportOrders")
                        .WithMany()
                        .HasForeignKey("ExportOrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_MasterLC");

                    b.Navigation("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC_Details", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("COM_MasterLC_Details")
                        .HasForeignKey("MasterLCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNoLienBank", "BankAccountNoLienBanks")
                        .WithMany()
                        .HasForeignKey("BankAccountNoLienBanksLienBankAccountId");

                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.COM_GroupLC_Main", "COM_GroupLC_Mains")
                        .WithMany()
                        .HasForeignKey("COM_GroupLC_MainsGroupLCId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanySisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("GTERP.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBanks")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PINature", "PINatures")
                        .WithMany()
                        .HasForeignKey("PINatureId");

                    b.HasOne("GTERP.Models.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("BankAccountNoLienBanks");

                    b.Navigation("BankAccountNos");

                    b.Navigation("COM_GroupLC_Mains");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("DayList");

                    b.Navigation("Employee");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("OpeningBanks");

                    b.Navigation("PaymentTerms");

                    b.Navigation("PINatures");

                    b.Navigation("SupplierInformation");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice_Sub", b =>
                {
                    b.HasOne("GTERP.Models.COM_ProformaInvoice", "Com_proformaInvoices")
                        .WithMany("COM_ProformaInvoice_Subs")
                        .HasForeignKey("Com_proformaInvoicesPIId");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Com_proformaInvoices");

                    b.Navigation("ItemDescs");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Color", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Style", "Cat_Style")
                        .WithMany()
                        .HasForeignKey("StyleId");

                    b.Navigation("Cat_Style");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Department", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Strength", null)
                        .WithMany("Cat_Department")
                        .HasForeignKey("Cat_StrengthStId");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Designation", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Strength", null)
                        .WithMany("Cat_Designation")
                        .HasForeignKey("Cat_StrengthStId");

                    b.HasOne("GTERP.Models.Cat_Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ElectricChargeSetting", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_GasChargeSetting", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_HRExpSetting", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_Type")
                        .WithMany()
                        .HasForeignKey("EmpTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("Cat_Emp_Type");

                    b.Navigation("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_HRSetting", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_Type")
                        .WithMany()
                        .HasForeignKey("EmpTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location")
                        .WithMany()
                        .HasForeignKey("LId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("Cat_Emp_Type");

                    b.Navigation("Cat_Location");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ITInvestmentItem", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYear")
                        .WithMany()
                        .HasForeignKey("FYID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_FiscalYear");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Cat_ITaxBank", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Bank", "Cat_Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_BankBranch", "Cat_BankBranch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Bank");

                    b.Navigation("Cat_BankBranch");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Integration_Setting_Details", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Integration_Setting_Main", "Cat_Integration_Setting_Mains")
                        .WithMany("Cat_Integration_Setting_Details")
                        .HasForeignKey("IntegrationSettingMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Cat_Integration_Setting_Mains");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Integration_Setting_Main", b =>
                {
                    b.HasOne("GTERP.Models.Acc_VoucherType", "Acc_VoucherType")
                        .WithMany()
                        .HasForeignKey("VoucherTypeId");

                    b.Navigation("Acc_VoucherType");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PFIntegrationSummary", b =>
                {
                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "PF_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("PF_ChartOfAccounts");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PayrollIntegrationSummary", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PoliceStation", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_District");
                });

            modelBuilder.Entity("GTERP.Models.Cat_PostOffice", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStation")
                        .WithMany()
                        .HasForeignKey("PStationId");

                    b.Navigation("Cat_District");

                    b.Navigation("Cat_PoliceStation");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Section", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Strength", null)
                        .WithMany("Cat_Section")
                        .HasForeignKey("Cat_StrengthStId");

                    b.HasOne("GTERP.Models.Cat_Department", "Dept")
                        .WithMany("Cat_Section")
                        .HasForeignKey("DeptId");

                    b.Navigation("Dept");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Size", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Color", "Cat_Color")
                        .WithMany("Cat_Sizes")
                        .HasForeignKey("ColorId");

                    b.Navigation("Cat_Color");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Stamp", b =>
                {
                    b.HasOne("GTERP.Models.Cat_PayMode", "Cat_PayMode")
                        .WithMany()
                        .HasForeignKey("PayModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_PayMode");
                });

            modelBuilder.Entity("GTERP.Models.Cat_SubSection", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Dept")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Sect")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dept");

                    b.Navigation("Sect");
                });

            modelBuilder.Entity("GTERP.Models.City", b =>
                {
                    b.HasOne("GTERP.Models.State", "vStateCity")
                        .WithMany("vProducts")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vStateCity");
                });

            modelBuilder.Entity("GTERP.Models.Company", b =>
                {
                    b.HasOne("GTERP.Models.BusinessType", "vBusinessTypeCompany")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "vCountryCompany")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_VoucherNoCreatedType", "vAcc_VoucherNoCreatedTypes")
                        .WithMany()
                        .HasForeignKey("VoucherNoCreatedTypeId");

                    b.Navigation("vAcc_VoucherNoCreatedTypes");

                    b.Navigation("vBusinessTypeCompany");

                    b.Navigation("vCountryCompany");
                });

            modelBuilder.Entity("GTERP.Models.CompanyDetails", b =>
                {
                    b.HasOne("GTERP.Models.Company", "Companys")
                        .WithMany()
                        .HasForeignKey("CompanyCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companys");
                });

            modelBuilder.Entity("GTERP.Models.Consignee", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Details", b =>
                {
                    b.HasOne("GTERP.Models.CostAllocation_Main", "CostAllocation_Main")
                        .WithMany("CostAllocation_Detailses")
                        .HasForeignKey("CostAlloMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("Details_AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("CostAllocation_Main");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Distribute", b =>
                {
                    b.HasOne("GTERP.Models.CostAllocation_Main", "CostAllocation_Main")
                        .WithMany("CostAllocation_Distributes")
                        .HasForeignKey("CostAlloMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.CostAllocation_Details", "CostAllocation_Details")
                        .WithMany()
                        .HasForeignKey("CostAlloSubId");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("Distribute_AccId");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("CostAllocation_Details");

                    b.Navigation("CostAllocation_Main");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Main", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonth")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_FiscalMonth");

                    b.Navigation("Acc_FiscalYear");
                });

            modelBuilder.Entity("GTERP.Models.CostCalculated", b =>
                {
                    b.HasOne("GTERP.Models.GoodsReceiveMain", "vGoodsReceiveMain")
                        .WithMany()
                        .HasForeignKey("GRRMainId");

                    b.HasOne("GTERP.Models.IssueMain", "vIssueMain")
                        .WithMany()
                        .HasForeignKey("IssueMainId");

                    b.HasOne("GTERP.Models.Product", "Products")
                        .WithMany("CostCalculated")
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.StoreRequisitionMain", "vStoreRequsitionMain")
                        .WithMany()
                        .HasForeignKey("StoreReqId");

                    b.HasOne("GTERP.Models.Warehouse", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Products");

                    b.Navigation("vGoodsReceiveMain");

                    b.Navigation("vIssueMain");

                    b.Navigation("vStoreRequsitionMain");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("GTERP.Models.Customer", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCustomerCountry")
                        .WithMany("vCustomer")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "vCat_District")
                        .WithMany()
                        .HasForeignKey("DistId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "vCat_PoliceStation")
                        .WithMany()
                        .HasForeignKey("PStationId");

                    b.Navigation("vCat_District");

                    b.Navigation("vCat_PoliceStation");

                    b.Navigation("vCustomerCountry");
                });

            modelBuilder.Entity("GTERP.Models.CustomerContact", b =>
                {
                    b.HasOne("GTERP.Models.Customer", "vCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vCustomer");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryChallan", b =>
                {
                    b.HasOne("GTERP.Models.DeliveryOrder", "DeliveryOrder")
                        .WithMany("vDeliveryChallan")
                        .HasForeignKey("DOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.Navigation("DeliveryOrder");

                    b.Navigation("PrdUnit");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryOrder", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Booking", "Booking")
                        .WithMany("vDeliveryOrder")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Representative", "vRepresentative")
                        .WithMany()
                        .HasForeignKey("RepresentativeId");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Booking");

                    b.Navigation("vRepresentative");
                });

            modelBuilder.Entity("GTERP.Models.Depreciation", b =>
                {
                    b.HasOne("GTERP.Models.DepreciationMethod", "DepreciationMethod")
                        .WithMany()
                        .HasForeignKey("DMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Details", "FA_Details")
                        .WithMany()
                        .HasForeignKey("FA_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Master", "FA_Master")
                        .WithMany()
                        .HasForeignKey("FA_MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DepreciationFrequency", "DepreciationFrequency")
                        .WithMany()
                        .HasForeignKey("FoDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepreciationFrequency");

                    b.Navigation("DepreciationMethod");

                    b.Navigation("FA_Details");

                    b.Navigation("FA_Master");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationSchedule", b =>
                {
                    b.HasOne("GTERP.Models.FA_Details", "FA_Details")
                        .WithMany("DepreciationSchedules")
                        .HasForeignKey("FA_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FA_Details");
                });

            modelBuilder.Entity("GTERP.Models.DepreciationScheduleSales", b =>
                {
                    b.HasOne("GTERP.Models.FA_Sell", "FA_Sell")
                        .WithMany()
                        .HasForeignKey("FA_SellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FA_Sell");
                });

            modelBuilder.Entity("GTERP.Models.Destination", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Countrys");
                });

            modelBuilder.Entity("GTERP.Models.DistrictWiseBooking", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_District");

                    b.Navigation("MonthName");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.DownTime", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DownTimeReason", "DownTimeReason")
                        .WithMany()
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DownTimeReason");

                    b.Navigation("MonthName");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.Employee", b =>
                {
                    b.HasOne("GTERP.Models.Employee", "EmployeeHOD")
                        .WithMany()
                        .HasForeignKey("BaseEmployeeId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_SubSection", "Cat_SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectId");

                    b.Navigation("Cat_SubSection");

                    b.Navigation("CommercialCompany");

                    b.Navigation("EmployeeHOD");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceDetails", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC_Details", "COM_MasterLC_Detail")
                        .WithMany("ExportInvoiceDetails")
                        .HasForeignKey("COM_MasterLC_DetailMasterLCDetailsID");

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMasters")
                        .WithMany("ExportInvoiceDetails")
                        .HasForeignKey("ExportInvoiceMastersInvoiceId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("COM_MasterLC_Detail");

                    b.Navigation("ExportInvoiceMasters");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceMaster", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountNosBankAccountId");

                    b.HasOne("GTERP.Models.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany("ExportInvoiceMasters")
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartyFirst")
                        .WithMany()
                        .HasForeignKey("FirstNotifyPartyId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "ComercialCompanyss")
                        .WithMany()
                        .HasForeignKey("ManufactureId");

                    b.HasOne("GTERP.Models.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("GTERP.Models.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartySecound")
                        .WithMany()
                        .HasForeignKey("SecoundNotifyPartyId");

                    b.HasOne("GTERP.Models.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.NotifyParty", "NotifyPartyThird")
                        .WithMany()
                        .HasForeignKey("ThirdNotifyPartyId");

                    b.HasOne("GTERP.Models.TradeTerm", "Tradeterms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.Navigation("BankAccountNos");

                    b.Navigation("BuyerGroups");

                    b.Navigation("BuyerInformation");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("ComercialCompanyss");

                    b.Navigation("CommercialCompany");

                    b.Navigation("Destination");

                    b.Navigation("NotifyPartyFirst");

                    b.Navigation("NotifyPartySecound");

                    b.Navigation("NotifyPartyThird");

                    b.Navigation("OpeningBank");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("SupplierInformation");

                    b.Navigation("Tradeterms");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoicePackingList", b =>
                {
                    b.HasOne("GTERP.Models.ExportInvoiceDetails", "ExportInvoiceDetailss")
                        .WithMany("ExportInvoicePackingLists")
                        .HasForeignKey("ExportInvoiceDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExportInvoiceDetailss");
                });

            modelBuilder.Entity("GTERP.Models.ExportOrder", b =>
                {
                    b.HasOne("GTERP.Models.Destination", "Destination")
                        .WithMany("ExportOrders")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ExportOrderCategory", "ExportOrderCategorys")
                        .WithMany()
                        .HasForeignKey("ExportOrderCategoryId");

                    b.HasOne("GTERP.Models.ExportOrderStatus", "ExportOrderStatus")
                        .WithMany()
                        .HasForeignKey("ExportOrderStatusId");

                    b.HasOne("GTERP.Models.ShipMode", "ShipModes")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("GTERP.Models.StyleInformation", "StyleInformation")
                        .WithMany("ExportOrders")
                        .HasForeignKey("StyleInformationStyleId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany("ExportOrders")
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("Destination");

                    b.Navigation("ExportOrderCategorys");

                    b.Navigation("ExportOrderStatus");

                    b.Navigation("ShipModes");

                    b.Navigation("StyleInformation");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationDetails", b =>
                {
                    b.HasOne("GTERP.Models.ExportRealizationMaster", "ExportRealizationMaster")
                        .WithMany("ExportRealizationDetails")
                        .HasForeignKey("ExportRealizationMasterRealizationId");

                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.Navigation("ExportInvoiceMaster");

                    b.Navigation("ExportRealizationMaster");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationMaster", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerInformationBuyerId");

                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany()
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("BuyerInformation");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("SupplierInformation");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Details", b =>
                {
                    b.HasOne("GTERP.Models.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("ExportInvoiceMasterInvoiceId");

                    b.HasOne("GTERP.Models.ExportRealization_Master", "ExportRealization_Masters")
                        .WithMany("ExportRealization_Details")
                        .HasForeignKey("ExportRealization_MastersRealizationId");

                    b.Navigation("ExportInvoiceMaster");

                    b.Navigation("ExportRealization_Masters");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Master", b =>
                {
                    b.HasOne("GTERP.Models.COM_MasterLC", "COM_MasterLC")
                        .WithMany()
                        .HasForeignKey("COM_MasterLCMasterLCID");

                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("GTERP.Models.FA_Calculation", b =>
                {
                    b.HasOne("GTERP.Models.FA_Details", "FA_Details")
                        .WithMany()
                        .HasForeignKey("FA_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Master", "FA_Master")
                        .WithMany()
                        .HasForeignKey("FA_MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FA_Details");

                    b.Navigation("FA_Master");
                });

            modelBuilder.Entity("GTERP.Models.FA_Details", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Cat_Department")
                        .WithMany()
                        .HasForeignKey("AssignToDept");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("AssignToSection");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "Emp_Info")
                        .WithMany()
                        .HasForeignKey("Emp_InfoEmpId");

                    b.HasOne("GTERP.Models.FA_Dep_Status", "FA_Dep_Status")
                        .WithMany()
                        .HasForeignKey("FA_Dep_StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Master", "FA_Master")
                        .WithMany("FA_Details")
                        .HasForeignKey("FA_MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Department");

                    b.Navigation("Cat_Section");

                    b.Navigation("Emp_Info");

                    b.Navigation("FA_Dep_Status");

                    b.Navigation("FA_Master");
                });

            modelBuilder.Entity("GTERP.Models.FA_Master", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "AccumulatedDepreciationHead")
                        .WithMany()
                        .HasForeignKey("AccId_AccumulatedDepreciation");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "DepreciationHead")
                        .WithMany()
                        .HasForeignKey("AccId_DepreciationExpense");

                    b.HasOne("GTERP.Models.DepreciationMethod", "DepreciationMethod")
                        .WithMany()
                        .HasForeignKey("DMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.DepreciationFrequency", "DepreciationFrequency")
                        .WithMany()
                        .HasForeignKey("FOD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccumulatedDepreciationHead");

                    b.Navigation("DepreciationFrequency");

                    b.Navigation("DepreciationHead");

                    b.Navigation("DepreciationMethod");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GTERP.Models.FA_ProcessRecord", b =>
                {
                    b.HasOne("GTERP.Models.FA_Details", "FA_Details")
                        .WithMany()
                        .HasForeignKey("FA_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FA_Details");
                });

            modelBuilder.Entity("GTERP.Models.FA_Sell", b =>
                {
                    b.HasOne("GTERP.Models.FA_Dep_Status", "FA_Dep_Status")
                        .WithMany()
                        .HasForeignKey("FA_Dep_StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Details", "FA_Details")
                        .WithMany()
                        .HasForeignKey("FA_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.FA_Master", "FA_Master")
                        .WithMany()
                        .HasForeignKey("FA_MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FA_Dep_Status");

                    b.Navigation("FA_Details");

                    b.Navigation("FA_Master");
                });

            modelBuilder.Entity("GTERP.Models.FileCollection", b =>
                {
                    b.HasOne("GTERP.Models.ModuleCourses", "moduleCourses")
                        .WithMany("fileCollections")
                        .HasForeignKey("ModuleCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("moduleCourses");
                });

            modelBuilder.Entity("GTERP.Models.FileDetail", b =>
                {
                    b.HasOne("GTERP.Models.Support", "Support")
                        .WithMany("FileDetails")
                        .HasForeignKey("SupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Support");
                });

            modelBuilder.Entity("GTERP.Models.GatePassMs", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentDeptId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionSectId");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("GTERP.Models.GatePassSub", b =>
                {
                    b.HasOne("GTERP.Models.DeliveryChallan", "DeliveryChallans")
                        .WithMany("GatePassChallans")
                        .HasForeignKey("DeliveryChallanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.GatePass", "GatePass")
                        .WithMany("Challans")
                        .HasForeignKey("GatePassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryChallans");

                    b.Navigation("GatePass");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveMain", b =>
                {
                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.Cat_Department", "vDepartment")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.PurchaseOrderMain", "PurchaseOrderMain")
                        .WithMany()
                        .HasForeignKey("PurOrderMainId");

                    b.HasOne("GTERP.Models.PurchaseRequisitionMain", "PurchaseRequisitionMain")
                        .WithMany()
                        .HasForeignKey("PurReqId");

                    b.HasOne("GTERP.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Currency");

                    b.Navigation("PaymentType");

                    b.Navigation("PrdUnit");

                    b.Navigation("PurchaseOrderMain");

                    b.Navigation("PurchaseRequisitionMain");

                    b.Navigation("Supplier");

                    b.Navigation("vDepartment");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveProvision", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.GoodsReceiveMain", "GoodsReceiveMain")
                        .WithMany("GoodsReceiveProvision")
                        .HasForeignKey("GRRMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsReceiveMain");

                    b.Navigation("vChartOfAccounts");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveSub", b =>
                {
                    b.HasOne("GTERP.Models.GoodsReceiveMain", "GoodsReceiveMain")
                        .WithMany("GoodsReceiveSub")
                        .HasForeignKey("GRRMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseOrderSub", "PurchaseOrderSub")
                        .WithMany()
                        .HasForeignKey("PurOrderSubId");

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("GoodsReceiveMain");

                    b.Navigation("PurchaseOrderSub");

                    b.Navigation("vProduct");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveSubWarehouse", b =>
                {
                    b.HasOne("GTERP.Models.GoodsReceiveSub", "GoodsReceiveSub")
                        .WithMany("GoodsReceiveSubWarehouse")
                        .HasForeignKey("GRRSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("GoodsReceiveSub");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.Gratuity_Ledger", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "vBankAccountNo")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vBankAccountNo");
                });

            modelBuilder.Entity("GTERP.Models.HR_AttFixed", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Cat_Shift_SP", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Shift");
                });

            modelBuilder.Entity("GTERP.Models.HR_CustomReport", b =>
                {
                    b.HasOne("GTERP.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyComId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_Type")
                        .WithMany()
                        .HasForeignKey("EmpTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_ReportType", "HR_ReportType")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Emp_Type");

                    b.Navigation("Company");

                    b.Navigation("HR_ReportType");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Address", b =>
                {
                    b.HasOne("GTERP.Models.Cat_District", "Cat_DistrictCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrDistId");

                    b.HasOne("GTERP.Models.Cat_PostOffice", "Cat_PostOfficeCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPOId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStationCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPSId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Address")
                        .HasForeignKey("GTERP.Models.HR_Emp_Address", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "Cat_DistrictPer")
                        .WithMany()
                        .HasForeignKey("EmpPerDistId");

                    b.HasOne("GTERP.Models.Cat_PostOffice", "Cat_PostOfficePer")
                        .WithMany()
                        .HasForeignKey("EmpPerPOId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "Cat_PoliceStationPer")
                        .WithMany()
                        .HasForeignKey("EmpPerPSId");

                    b.Navigation("Cat_DistrictCurr");

                    b.Navigation("Cat_DistrictPer");

                    b.Navigation("Cat_PoliceStationCurr");

                    b.Navigation("Cat_PoliceStationPer");

                    b.Navigation("Cat_PostOfficeCurr");

                    b.Navigation("Cat_PostOfficePer");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ArrearBill", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BankInfo", b =>
                {
                    b.HasOne("GTERP.Models.Cat_AccountType", "Cat_AccountType")
                        .WithMany()
                        .HasForeignKey("AccTypeId");

                    b.HasOne("GTERP.Models.Cat_Bank", "Cat_Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("GTERP.Models.Cat_BankBranch", "Cat_BankBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_BankInfo")
                        .HasForeignKey("GTERP.Models.HR_Emp_BankInfo", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_PayMode", "Cat_PayMode")
                        .WithMany()
                        .HasForeignKey("PayModeId");

                    b.Navigation("Cat_AccountType");

                    b.Navigation("Cat_Bank");

                    b.Navigation("Cat_BankBranch");

                    b.Navigation("Cat_PayMode");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Behave", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_BusinessAllow", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Devices", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Devices")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Education", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Educations")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Experience", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Experiences")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Family", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Family")
                        .HasForeignKey("GTERP.Models.HR_Emp_Family", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Image", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Image")
                        .HasForeignKey("GTERP.Models.HR_Emp_Image", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Increment", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Increment")
                        .HasForeignKey("GTERP.Models.HR_Emp_Increment", "EmpId");

                    b.HasOne("GTERP.Models.HR_IncType", "HR_IncType")
                        .WithMany()
                        .HasForeignKey("IncTypeId");

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_DepartmentNew")
                        .WithMany()
                        .HasForeignKey("NewDeptId");

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_DesignationNew")
                        .WithMany()
                        .HasForeignKey("NewDesigId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_TypeNew")
                        .WithMany()
                        .HasForeignKey("NewEmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_GenderNew")
                        .WithMany()
                        .HasForeignKey("NewGenderId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_SectionNew")
                        .WithMany()
                        .HasForeignKey("NewSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_UnitNew")
                        .WithMany()
                        .HasForeignKey("NewUnitId");

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_DepartmentOld")
                        .WithMany()
                        .HasForeignKey("OldDeptId");

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_DesignationOld")
                        .WithMany()
                        .HasForeignKey("OldDesigId");

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_TypeOld")
                        .WithMany()
                        .HasForeignKey("OldEmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_GenderOld")
                        .WithMany()
                        .HasForeignKey("OldGenderId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_SectionOld")
                        .WithMany()
                        .HasForeignKey("OldSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_UnitOld")
                        .WithMany()
                        .HasForeignKey("OldUnitId");

                    b.Navigation("Cat_DepartmentNew");

                    b.Navigation("Cat_DepartmentOld");

                    b.Navigation("Cat_DesignationNew");

                    b.Navigation("Cat_DesignationOld");

                    b.Navigation("Cat_Emp_TypeNew");

                    b.Navigation("Cat_Emp_TypeOld");

                    b.Navigation("Cat_GenderNew");

                    b.Navigation("Cat_GenderOld");

                    b.Navigation("Cat_SectionNew");

                    b.Navigation("Cat_SectionOld");

                    b.Navigation("Cat_UnitNew");

                    b.Navigation("Cat_UnitOld");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_IncType");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Info", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BloodGroup", "Cat_BloodGroup")
                        .WithMany()
                        .HasForeignKey("BloodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Department", "Cat_Department")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_Designation")
                        .WithMany()
                        .HasForeignKey("DesigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Emp_Type", "Cat_Emp_Type")
                        .WithMany()
                        .HasForeignKey("EmpTypeId");

                    b.HasOne("GTERP.Models.Cat_Employment_Type", "Cat_Employment_Type")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId");

                    b.HasOne("GTERP.Models.Cat_Floor", "Cat_Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.HasOne("GTERP.Models.Cat_Gender", "Cat_Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("GTERP.Models.Cat_Grade", "Cat_Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("GTERP.Models.Cat_Line", "Cat_Line")
                        .WithMany()
                        .HasForeignKey("LineId");

                    b.HasOne("GTERP.Models.Cat_Religion", "Cat_Religion")
                        .WithMany()
                        .HasForeignKey("RelgionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Skill", "Cat_Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.HasOne("GTERP.Models.Cat_SubSection", "Cat_SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectId");

                    b.HasOne("GTERP.Models.Cat_Unit", "Cat_Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Variable", "Cat_Variable")
                        .WithMany()
                        .HasForeignKey("VendorType");

                    b.Navigation("Cat_BloodGroup");

                    b.Navigation("Cat_Department");

                    b.Navigation("Cat_Designation");

                    b.Navigation("Cat_Emp_Type");

                    b.Navigation("Cat_Employment_Type");

                    b.Navigation("Cat_Floor");

                    b.Navigation("Cat_Gender");

                    b.Navigation("Cat_Grade");

                    b.Navigation("Cat_Line");

                    b.Navigation("Cat_Religion");

                    b.Navigation("Cat_Section");

                    b.Navigation("Cat_Shift");

                    b.Navigation("Cat_Skill");

                    b.Navigation("Cat_SubSection");

                    b.Navigation("Cat_Unit");

                    b.Navigation("Cat_Variable");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ML", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_Designation")
                        .WithMany()
                        .HasForeignKey("DesigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Leave_Avail", "HR_Leave_Avail")
                        .WithMany()
                        .HasForeignKey("LvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Designation");

                    b.Navigation("Cat_Section");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Leave_Avail");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Nominee", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_Nominee")
                        .HasForeignKey("GTERP.Models.HR_Emp_Nominee", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PF_OPBal", b =>
                {
                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "PFChartOfAccountCredit")
                        .WithMany()
                        .HasForeignKey("CreditAccId");

                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "PFChartOfAccountDebit")
                        .WithMany()
                        .HasForeignKey("DebitAccId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "PFOPBalYear")
                        .WithMany()
                        .HasForeignKey("PFOPBalYID");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("PFChartOfAccountCredit");

                    b.Navigation("PFChartOfAccountDebit");

                    b.Navigation("PFOPBalYear");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_PersonalInfo", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Emp_PersonalInfo")
                        .HasForeignKey("GTERP.Models.HR_Emp_PersonalInfo", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "GratuityFinalYear")
                        .WithMany()
                        .HasForeignKey("GratuityFinalYId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "GratuityFundTransferYear")
                        .WithMany()
                        .HasForeignKey("GratuityFundTransferYId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "PFFinalYear")
                        .WithMany()
                        .HasForeignKey("PFFinalYId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "PFFundTransferYear")
                        .WithMany()
                        .HasForeignKey("PFFundTransferYId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "WFFinalYear")
                        .WithMany()
                        .HasForeignKey("WFFinalYId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "WFFundTransferYear")
                        .WithMany()
                        .HasForeignKey("WFFundTransferYId");

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("GratuityFinalYear");

                    b.Navigation("GratuityFundTransferYear");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("PFFinalYear");

                    b.Navigation("PFFundTransferYear");

                    b.Navigation("WFFinalYear");

                    b.Navigation("WFFundTransferYear");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Projects", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany("HR_Emp_Projects")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Recreation", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Released", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Salary", b =>
                {
                    b.HasOne("GTERP.Models.Cat_BuildingType", "Cat_BuildingTypeHC")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_GratuityLocation")
                        .WithMany()
                        .HasForeignKey("GLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationHB")
                        .WithMany()
                        .HasForeignKey("HBLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationHB2")
                        .WithMany()
                        .HasForeignKey("HBLId2");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationHB3")
                        .WithMany()
                        .HasForeignKey("HBLId3");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location1")
                        .WithMany()
                        .HasForeignKey("LId1");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location2")
                        .WithMany()
                        .HasForeignKey("LId2");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_Location3")
                        .WithMany()
                        .HasForeignKey("LId3");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationMC")
                        .WithMany()
                        .HasForeignKey("MCLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationPF")
                        .WithMany()
                        .HasForeignKey("PFLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_PFLoanlocation")
                        .WithMany()
                        .HasForeignKey("PFLLId");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_PFLoanlocation2")
                        .WithMany()
                        .HasForeignKey("PFLLId2");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_PFLoanlocation3")
                        .WithMany()
                        .HasForeignKey("PFLLId3");

                    b.HasOne("GTERP.Models.Cat_Location", "Cat_LocationWelfare")
                        .WithMany()
                        .HasForeignKey("WelfareLId");

                    b.Navigation("Cat_BuildingTypeHC");

                    b.Navigation("Cat_GratuityLocation");

                    b.Navigation("Cat_Location1");

                    b.Navigation("Cat_Location2");

                    b.Navigation("Cat_Location3");

                    b.Navigation("Cat_LocationHB");

                    b.Navigation("Cat_LocationHB2");

                    b.Navigation("Cat_LocationHB3");

                    b.Navigation("Cat_LocationMC");

                    b.Navigation("Cat_LocationPF");

                    b.Navigation("Cat_LocationWelfare");

                    b.Navigation("Cat_PFLoanlocation");

                    b.Navigation("Cat_PFLoanlocation2");

                    b.Navigation("Cat_PFLoanlocation3");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_ShiftInput", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Shift", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Shift");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Suppliment", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Employee_VariablePermission", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Avail", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Leave_Avail")
                        .HasForeignKey("GTERP.Models.HR_Leave_Avail", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_Leave_Type", "Cat_Leave_Type")
                        .WithMany()
                        .HasForeignKey("LTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Leave_Type");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Leave_Balance", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithOne("HR_Leave_Balance")
                        .HasForeignKey("GTERP.Models.HR_Leave_Balance", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_HouseBuilding", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.HR_Loan_HouseBuilding", "HR_Loan_HouseBuilding")
                        .WithMany("HR_Loan_Data_HouseBuildings")
                        .HasForeignKey("LoanHouseId");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Loan_HouseBuilding");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_MotorCycle", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.HR_Loan_MotorCycle", "HR_Loan_MotorCycle")
                        .WithMany("HR_Loan_Data_MotorCycles")
                        .HasForeignKey("LoanMotorId");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Loan_MotorCycle");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_Other", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.HR_Loan_Other", "HR_Loan_Other")
                        .WithMany("HR_Loan_Data_Others")
                        .HasForeignKey("LoanOtherId");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Loan_Other");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_PF", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.HR_Loan_PF", "HR_Loan_PF")
                        .WithMany("HR_Loan_Data_PFs")
                        .HasForeignKey("LoanPFId");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Loan_PF");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Data_Welfare", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.HR_Loan_Welfare", "HR_Loan_Welfare")
                        .WithMany("HR_Loan_Data_Welfares")
                        .HasForeignKey("LoanWelId");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Loan_Welfare");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_HouseBuilding", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_MotorCycle", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Other", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_PF", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Return", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Welfare", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_LvEncashment", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_Notify", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Notification", "HR_Notification")
                        .WithMany()
                        .HasForeignKey("NtfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_Notification");
                });

            modelBuilder.Entity("GTERP.Models.HR_OT_FC", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_PFCheque", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_PFContribution", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_PF_Cheque", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_PF_Withdrawn", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.HR_ProcessLock", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.HR_SalarySettlement", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Department", "Cat_Department")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("GTERP.Models.Cat_Designation", "Cat_Designation")
                        .WithMany()
                        .HasForeignKey("DesigId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.Navigation("Cat_Department");

                    b.Navigation("Cat_Designation");

                    b.Navigation("Cat_Section");
                });

            modelBuilder.Entity("GTERP.Models.HR_SummerWinterAllowance", b =>
                {
                    b.HasOne("GTERP.Models.Cat_SummerWinterAllowanceSetting", "Cat_SWSetting")
                        .WithMany()
                        .HasForeignKey("SWAllowanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_SWSetting");
                });

            modelBuilder.Entity("GTERP.Models.Hr_Emp_AbsentLetter", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Hr_RawData", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Inventory", b =>
                {
                    b.HasOne("GTERP.Models.Product", "Products")
                        .WithMany("InventorySubs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceSub", b =>
                {
                    b.HasOne("GTERP.Models.InvoiceMain", "InvoiceMain")
                        .WithMany("InvoiceSubs")
                        .HasForeignKey("InvoiceMainInvoiceId");

                    b.HasOne("GTERP.Models.SoftwarePackage", "vsoftwarepackage")
                        .WithMany()
                        .HasForeignKey("SoftwarePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceMain");

                    b.Navigation("vsoftwarepackage");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.InvoiceMain", "InvoiceMain")
                        .WithMany("InvoiceTermsSubs")
                        .HasForeignKey("InvoiceMainInvoiceId");

                    b.Navigation("InvoiceMain");
                });

            modelBuilder.Entity("GTERP.Models.IssueMain", b =>
                {
                    b.HasOne("GTERP.Models.BOMMain", "BOMMain")
                        .WithMany()
                        .HasForeignKey("BOMMainId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.Cat_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.Cat_Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.HasOne("GTERP.Models.StoreRequisitionMain", "StoreRequisitionMain")
                        .WithMany()
                        .HasForeignKey("StoreReqId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("BOMMain");

                    b.Navigation("Currency");

                    b.Navigation("Department");

                    b.Navigation("Doctor");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("PrdUnit");

                    b.Navigation("Section");

                    b.Navigation("StoreRequisitionMain");
                });

            modelBuilder.Entity("GTERP.Models.IssueSub", b =>
                {
                    b.HasOne("GTERP.Models.IssueMain", "IssueMain")
                        .WithMany("IssueSub")
                        .HasForeignKey("IssueMainId");

                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.StoreRequisitionSub", "StoreRequisitionSub")
                        .WithMany()
                        .HasForeignKey("StoreReqSubId");

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("IssueMain");

                    b.Navigation("StoreRequisitionSub");

                    b.Navigation("vProduct");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.IssueSubWarehouse", b =>
                {
                    b.HasOne("GTERP.Models.IssueSub", "IssueSub")
                        .WithMany("IssueSubWarehouse")
                        .HasForeignKey("IssueSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("IssueSub");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.ItemDesc", b =>
                {
                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.Navigation("ItemGroups");
                });

            modelBuilder.Entity("GTERP.Models.LienBank", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GTERP.Models.Medical_Details", b =>
                {
                    b.HasOne("GTERP.Models.Medical_Master", "Medical_Master")
                        .WithMany("Medical_Detailses")
                        .HasForeignKey("MedicalMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medical_Master");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GTERP.Models.Medical_Master", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Details", b =>
                {
                    b.HasOne("GTERP.Models.MenuPermission_Master", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenus")
                        .WithMany("MenuPermissionDetails")
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPermissionMasters");

                    b.Navigation("ModuleMenus");
                });

            modelBuilder.Entity("GTERP.Models.ModuleCourses", b =>
                {
                    b.HasOne("GTERP.Models.Module", "Modules")
                        .WithMany("ModuleCourses")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenus")
                        .WithMany("ModuleCourses")
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleMenus");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("GTERP.Models.ModuleGroup", b =>
                {
                    b.HasOne("GTERP.Models.Module", "vModule")
                        .WithMany("vModuleGroup")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vModule");
                });

            modelBuilder.Entity("GTERP.Models.ModuleMenu", b =>
                {
                    b.HasOne("GTERP.Models.ImageCriteria", "vImageCriteria")
                        .WithMany()
                        .HasForeignKey("ImageCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleGroup", "vModuleGroup")
                        .WithMany("vModuleMenu")
                        .HasForeignKey("ModuleGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Module", "vModule")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ParentModuleMenu")
                        .WithMany("ModuleMenuChildren")
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentModuleMenu");

                    b.Navigation("vImageCriteria");

                    b.Navigation("vModule");

                    b.Navigation("vModuleGroup");
                });

            modelBuilder.Entity("GTERP.Models.Module_Menu_Action", b =>
                {
                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenu")
                        .WithMany()
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleMenu");
                });

            modelBuilder.Entity("GTERP.Models.MonthlySalesProduction", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthName");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.NoteDescription", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.Navigation("Acc_FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.NotifyParty", b =>
                {
                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerInformationsBuyerId");

                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("GTERP.Models.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.Navigation("BuyerInformations");

                    b.Navigation("Countrys");

                    b.Navigation("PortOfDischarge");
                });

            modelBuilder.Entity("GTERP.Models.OpeningBank", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GTERP.Models.PBC_EmployeeTask", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PBC_Status", "PBC_Status")
                        .WithMany()
                        .HasForeignKey("PBCStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PBC_TaskAssign", "PBC_TaskAssign")
                        .WithMany()
                        .HasForeignKey("TaskAssignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("PBC_Status");

                    b.Navigation("PBC_TaskAssign");
                });

            modelBuilder.Entity("GTERP.Models.PBC_TaskAssign", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.PF_ChartOfAccount", b =>
                {
                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "ParentChartOfAccount")
                        .WithMany()
                        .HasForeignKey("ParentID");

                    b.Navigation("ParentChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.PF_Ledger", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "vBankAccountNo")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vBankAccountNo");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Acc_Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Acc_CurrencyLocal")
                        .WithMany()
                        .HasForeignKey("CountryIdLocal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.PF_FiscalYear", "PF_FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "vPrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.Acc_VoucherType", "Acc_VoucherType")
                        .WithMany()
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_Currency");

                    b.Navigation("Acc_CurrencyLocal");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_VoucherType");

                    b.Navigation("PF_FiscalYear");

                    b.Navigation("vPrdUnit");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSub", b =>
                {
                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "PF_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Infos")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("GTERP.Models.Supplier", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("GTERP.Models.PF_VoucherMain", "PF_VoucherMain")
                        .WithMany("VoucherSubs")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("CountryForeign");

                    b.Navigation("Customers");

                    b.Navigation("HR_Emp_Infos");

                    b.Navigation("PF_ChartOfAccount");

                    b.Navigation("PF_VoucherMain");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSubCheckno", b =>
                {
                    b.HasOne("GTERP.Models.PF_ChartOfAccount", "vPF_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PF_VoucherSub", "PF_VoucherSub")
                        .WithMany("VoucherSubChecnoes")
                        .HasForeignKey("VoucherSubId");

                    b.Navigation("PF_VoucherSub");

                    b.Navigation("vPF_ChartOfAccount");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSubSection", b =>
                {
                    b.HasOne("GTERP.Models.Cat_SubSection", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionSubSectId");

                    b.HasOne("GTERP.Models.PF_VoucherSub", "PF_VoucherSub")
                        .WithMany("VoucherSubSections")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PF_VoucherSub");

                    b.Navigation("SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryAddition", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_SalaryDeduction", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.Payroll_Temp_SalaryDataInputWithFile", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "Hr_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("Hr_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.PortOfDischarge", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Countrys");
                });

            modelBuilder.Entity("GTERP.Models.PortOfLoading", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.Navigation("Countrys");
                });

            modelBuilder.Entity("GTERP.Models.Product", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "ChartOfAccountsConsumption")
                        .WithMany()
                        .HasForeignKey("AccIdConsumption");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "ChartOfAccountsInventory")
                        .WithMany()
                        .HasForeignKey("AccIdInventory");

                    b.HasOne("GTERP.Models.Category", "vPrimaryCategory")
                        .WithMany("vProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Country", "vProductCountry")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ProductMainGroup", "vProductMainGroup")
                        .WithMany("vProducts")
                        .HasForeignKey("ProductMainGroupId");

                    b.HasOne("GTERP.Models.SubCategory", "vSubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");

                    b.HasOne("GTERP.Models.Unit", "vProductUnit")
                        .WithMany("vProductUnit")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChartOfAccountsConsumption");

                    b.Navigation("ChartOfAccountsInventory");

                    b.Navigation("vPrimaryCategory");

                    b.Navigation("vProductCountry");

                    b.Navigation("vProductMainGroup");

                    b.Navigation("vProductUnit");

                    b.Navigation("vSubCategory");
                });

            modelBuilder.Entity("GTERP.Models.ProductPrie", b =>
                {
                    b.HasOne("GTERP.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");
                });

            modelBuilder.Entity("GTERP.Models.ProductSerial", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseSub", "PurchaseSub")
                        .WithMany("ProductSerials")
                        .HasForeignKey("PurchaseSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warrenty", "vWarrenty")
                        .WithMany("vProductWarrenty")
                        .HasForeignKey("WarrentyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseSub");

                    b.Navigation("vWarrenty");
                });

            modelBuilder.Entity("GTERP.Models.Production", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("MonthName");

                    b.Navigation("Product");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.ProductionTargetSetup", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthName");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencyPurchaseMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Supplier", "vSuppliertName")
                        .WithMany("vCountryPurchase")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vCurrencyPurchaseMain");

                    b.Navigation("vSuppliertName");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderMain", b =>
                {
                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.Cat_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.PurchaseRequisitionMain", "PurchaseRequisitionMain")
                        .WithMany()
                        .HasForeignKey("PurReqId");

                    b.HasOne("GTERP.Models.Cat_Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.HasOne("GTERP.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Currency");

                    b.Navigation("Department");

                    b.Navigation("PaymentType");

                    b.Navigation("PrdUnit");

                    b.Navigation("PurchaseRequisitionMain");

                    b.Navigation("Section");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.PurchaseOrderMain", "PurchaseOrderMain")
                        .WithMany("PurchaseOrderSub")
                        .HasForeignKey("PurOrderMainId");

                    b.HasOne("GTERP.Models.PurchaseRequisitionSub", "PurchaseRequisitionSub")
                        .WithMany()
                        .HasForeignKey("PurReqSubId");

                    b.Navigation("PurchaseOrderMain");

                    b.Navigation("PurchaseRequisitionSub");

                    b.Navigation("vProduct");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidMain", b =>
                {
                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("GTERP.Models.PurchaseRequisitionMain", "PurchaseRequisitionMain")
                        .WithMany()
                        .HasForeignKey("PurReqId");

                    b.HasOne("GTERP.Models.Cat_Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.HasOne("GTERP.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Currency");

                    b.Navigation("PaymentType");

                    b.Navigation("PrdUnit");

                    b.Navigation("PurchaseRequisitionMain");

                    b.Navigation("Section");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.PurchaseOrderValidMain", "PurchaseOrderValidMain")
                        .WithMany("PurchaseOrderValidSub")
                        .HasForeignKey("PurOrderValidMainId");

                    b.HasOne("GTERP.Models.PurchaseRequisitionSub", "PurchaseRequisitionSub")
                        .WithMany()
                        .HasForeignKey("PurReqSubId");

                    b.Navigation("PurchaseOrderValidMain");

                    b.Navigation("PurchaseRequisitionSub");

                    b.Navigation("vProduct");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidSubSupplier", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseOrderValidSub", "PurchaseOrderValidSub")
                        .WithMany("PurchaseOrderValidSubSupplier")
                        .HasForeignKey("PurOrderValidSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Supplier", "vSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("PurchaseOrderValidSub");

                    b.Navigation("vSupplier");
                });

            modelBuilder.Entity("GTERP.Models.PurchasePaymentSub", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccId");

                    b.HasOne("GTERP.Models.PaymentType", "vPaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseMain", "PurchaseMain")
                        .WithMany("PurchasePaymentSubs")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseRequisitionMain", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedByEmpId");

                    b.HasOne("GTERP.Models.Cat_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Purpose", "Purpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "RecommenedBy")
                        .WithMany()
                        .HasForeignKey("RecommenedByEmpId");

                    b.HasOne("GTERP.Models.Cat_Section", "Cat_Sections")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("ApprovedBy");

                    b.Navigation("Cat_Sections");

                    b.Navigation("Department");

                    b.Navigation("PrdUnit");

                    b.Navigation("Purpose");

                    b.Navigation("RecommenedBy");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseRequisitionSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseRequisitionMain", "PurchaseRequisitionMain")
                        .WithMany("PurchaseRequisitionSub")
                        .HasForeignKey("PurReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRequisitionMain");

                    b.Navigation("vProduct");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencyPurchaseReturnMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Supplier", "vSuppliertName")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseMain", "vPurchaseMains")
                        .WithMany("PurchaseReturnMains")
                        .HasForeignKey("vPurchaseMainsPurchaseId");

                    b.Navigation("vCurrencyPurchaseReturnMain");

                    b.Navigation("vPurchaseMains");

                    b.Navigation("vSuppliertName");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnPaymentSub", b =>
                {
                    b.HasOne("GTERP.Models.PaymentType", "vPaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseReturnMain", "PurchaseReturnMain")
                        .WithMany("PurchaseReturnPaymentSubs")
                        .HasForeignKey("PurchaseReturnMainPurchaseReturnId");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("vChartofAccountsAccId");

                    b.Navigation("PurchaseReturnMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ProductSerial", "vProductSerial")
                        .WithMany()
                        .HasForeignKey("ProductSerialId");

                    b.HasOne("GTERP.Models.PurchaseReturnMain", "PurchaseReturnMain")
                        .WithMany("PurchaseReturnSubs")
                        .HasForeignKey("PurchaseReturnMainPurchaseReturnId");

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseReturnMain");

                    b.Navigation("vProductName");

                    b.Navigation("vProductSerial");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseReturnMain", "PurchaseReturnMain")
                        .WithMany("PurchaseReturnTermsSubs")
                        .HasForeignKey("PurchaseReturnMainPurchaseReturnId");

                    b.Navigation("PurchaseReturnMain");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany("vPurchaseSub")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PurchaseMain", "PurchaseMain")
                        .WithMany("PurchaseSubs")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseMain");

                    b.Navigation("vProductName");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.PurchaseMain", "PurchaseMain")
                        .WithMany("PurchaseTermsSubs")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseMain");
                });

            modelBuilder.Entity("GTERP.Models.Quiz", b =>
                {
                    b.HasOne("GTERP.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GTERP.Models.RawMaterialStock", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GTERP.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("MonthName");

                    b.Navigation("Product");

                    b.Navigation("Warehouse");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Answer", b =>
                {
                    b.HasOne("GTERP.Models.Recruitment.Exam_Quiz", "Quiz")
                        .WithMany("Answer")
                        .HasForeignKey("quizid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Quiz", b =>
                {
                    b.HasOne("GTERP.Models.Recruitment.Exam_Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Post", b =>
                {
                    b.HasOne("GTERP.Models.Recruitment.HR_Recruitment_Department", "Department")
                        .WithMany("JobPost")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Requisition", b =>
                {
                    b.HasOne("GTERP.Models.Recruitment.HR_Recruitment_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("GTERP.Models.ReorderLevel", b =>
                {
                    b.HasOne("GTERP.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermission_Details", b =>
                {
                    b.HasOne("GTERP.Models.ReportPermission_Master", "ReportPermission_Master")
                        .WithMany("ReportPermission_Details")
                        .HasForeignKey("ReportPermission_MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeReportId");

                    b.Navigation("ReportPermission_Master");

                    b.Navigation("ReportType");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermissions", b =>
                {
                    b.HasOne("GTERP.Models.HR_ReportType", "hr_reporttype")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hr_reporttype");
                });

            modelBuilder.Entity("GTERP.Models.SalesMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencySalesMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Customer", "vCustomertName")
                        .WithMany("vCountry")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vCurrencySalesMain");

                    b.Navigation("vCustomertName");
                });

            modelBuilder.Entity("GTERP.Models.SalesPaymentSub", b =>
                {
                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PaymentType", "vPaymentType")
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesPaymentSubs")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnMain", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vCurrencySalesReturnMain")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Customer", "vCustomertName")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesMain", "vSalesMain")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("vCurrencySalesReturnMain");

                    b.Navigation("vCustomertName");

                    b.Navigation("vSalesMain");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnPaymentSub", b =>
                {
                    b.HasOne("GTERP.Models.PaymentType", "vPaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesReturnMain", "SalesReturnMain")
                        .WithMany("SalesReturnPaymentSubs")
                        .HasForeignKey("SalesReturnMainSalesReturnId");

                    b.HasOne("GTERP.Models.Acc_ChartOfAccount", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("vChartofAccountsAccId");

                    b.Navigation("SalesReturnMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ProductSerial", "vProductSerial")
                        .WithMany()
                        .HasForeignKey("ProductSerialId");

                    b.HasOne("GTERP.Models.SalesReturnMain", "SalesReturnMain")
                        .WithMany("SalesReturnSubs")
                        .HasForeignKey("SalesReturnMainSalesReturnId");

                    b.HasOne("GTERP.Models.SalesType", "vSalesTypes")
                        .WithMany()
                        .HasForeignKey("SalesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesReturnMain");

                    b.Navigation("vProductName");

                    b.Navigation("vProductSerial");

                    b.Navigation("vSalesTypes");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.SalesReturnMain", "SalesReturnMain")
                        .WithMany("SalesReturnTermsSubs")
                        .HasForeignKey("SalesReturnMainSalesReturnId");

                    b.Navigation("SalesReturnMain");
                });

            modelBuilder.Entity("GTERP.Models.SalesSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProductName")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ProductSerial", "vProductSerial")
                        .WithMany("vSalesSubSerial")
                        .HasForeignKey("ProductSerialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesSubs")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SalesType", "vSalesTypes")
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("SalesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Warehouse", "vWarehouse")
                        .WithMany("vWarehouseSalesSubs")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMain");

                    b.Navigation("vProductName");

                    b.Navigation("vProductSerial");

                    b.Navigation("vSalesTypes");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.SalesTargetSetup", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthName");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.SalesTermsSub", b =>
                {
                    b.HasOne("GTERP.Models.SalesMain", "SalesMain")
                        .WithMany("SalesTermsSubs")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMain");
                });

            modelBuilder.Entity("GTERP.Models.ShareHolding", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.Navigation("Acc_FiscalYears");
                });

            modelBuilder.Entity("GTERP.Models.State", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vStateCountry")
                        .WithMany("vStateCountry")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vStateCountry");
                });

            modelBuilder.Entity("GTERP.Models.StoreRequisitionMain", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedByEmpId");

                    b.HasOne("GTERP.Models.Cat_Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("GTERP.Models.PrdUnit", "PrdUnit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Purpose", "Purpose")
                        .WithMany()
                        .HasForeignKey("PurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.HR_Emp_Info", "RecommenedBy")
                        .WithMany()
                        .HasForeignKey("RecommenedByEmpId");

                    b.HasOne("GTERP.Models.Cat_Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.HasOne("GTERP.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("SubWarehouseId");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("ApprovedBy");

                    b.Navigation("Department");

                    b.Navigation("PrdUnit");

                    b.Navigation("Purpose");

                    b.Navigation("RecommenedBy");

                    b.Navigation("Section");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("GTERP.Models.StoreRequisitionSub", b =>
                {
                    b.HasOne("GTERP.Models.Product", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.StoreRequisitionMain", "StoreRequisitionMain")
                        .WithMany("StoreRequisitionSub")
                        .HasForeignKey("StoreReqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StoreRequisitionMain");

                    b.Navigation("vProduct");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformation", b =>
                {
                    b.HasOne("GTERP.Models.BrandInfo", "BrandInfo")
                        .WithMany("StyleInformations")
                        .HasForeignKey("BrandInfoId");

                    b.HasOne("GTERP.Models.BuyerInformation", "BuyerInformation")
                        .WithMany("StyleInformations")
                        .HasForeignKey("BuyerId");

                    b.HasOne("GTERP.Models.SisterConcernCompany", "Company")
                        .WithMany("StyleInformations")
                        .HasForeignKey("CompanySisterConcernCompanyId");

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany("StyleInformations")
                        .HasForeignKey("CurrencyId");

                    b.HasOne("GTERP.Models.ProductCategory", "ProductCategory")
                        .WithMany("StyleInformations")
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("GTERP.Models.ProductGroup", "ProductGroup")
                        .WithMany("StyleInformations")
                        .HasForeignKey("ProductGroupId");

                    b.HasOne("GTERP.Models.StyleStatus", "StyleStatus")
                        .WithMany()
                        .HasForeignKey("StyleStatusId");

                    b.HasOne("GTERP.Models.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("BrandInfo");

                    b.Navigation("BuyerInformation");

                    b.Navigation("Company");

                    b.Navigation("Currency");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductGroup");

                    b.Navigation("StyleStatus");

                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.SubCategory", b =>
                {
                    b.HasOne("GTERP.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionDetails", b =>
                {
                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenus")
                        .WithMany()
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SubMenuPermissionMasters", "SubMenuPermissionMasters")
                        .WithMany("SubMenuPermissionDetails")
                        .HasForeignKey("SubMenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleMenus");

                    b.Navigation("SubMenuPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionReportDetails", b =>
                {
                    b.HasOne("GTERP.Models.HR_ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeReportId");

                    b.HasOne("GTERP.Models.SubMenuPermissionReportMaster", "SubMenuPermissionReportMasters")
                        .WithMany("SubMenuPermissionReportDetails")
                        .HasForeignKey("SubMenuPermissionReportMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportType");

                    b.Navigation("SubMenuPermissionReportMasters");
                });

            modelBuilder.Entity("GTERP.Models.Supplier", b =>
                {
                    b.HasOne("GTERP.Models.Country", "vSupplierCountry")
                        .WithMany("vSupplier")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Cat_District", "vCat_District")
                        .WithMany()
                        .HasForeignKey("DistId");

                    b.HasOne("GTERP.Models.Cat_PoliceStation", "vCat_PoliceStation")
                        .WithMany()
                        .HasForeignKey("PStationId");

                    b.Navigation("vCat_District");

                    b.Navigation("vCat_PoliceStation");

                    b.Navigation("vSupplierCountry");
                });

            modelBuilder.Entity("GTERP.Models.SupplierContact", b =>
                {
                    b.HasOne("GTERP.Models.Supplier", "vSupplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vSupplier");
                });

            modelBuilder.Entity("GTERP.Models.SupplierInformation", b =>
                {
                    b.HasOne("GTERP.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientContactPayment", b =>
                {
                    b.HasOne("GTERP.Models.Tax_ClientInfo", "Tax_ClientInfo")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tax_ClientInfo");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientInfo", b =>
                {
                    b.HasOne("GTERP.Models.Tax_ClientCompany", "ClientComp")
                        .WithMany()
                        .HasForeignKey("ClientCompId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientComp");
                });

            modelBuilder.Entity("GTERP.Models.Tax_ClientTaxInfo", b =>
                {
                    b.HasOne("GTERP.Models.Tax_ClientInfo", "Tax_ClientInfo")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tax_ClientInfo");
                });

            modelBuilder.Entity("GTERP.Models.Tax_DocumentInfo", b =>
                {
                    b.HasOne("GTERP.Models.Tax_ClientInfo", "Tax_ClientInfo")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tax_ClientInfo");
                });

            modelBuilder.Entity("GTERP.Models.Tax_PaymentReceived", b =>
                {
                    b.HasOne("GTERP.Models.Tax_ClientInfo", "Tax_ClientInfo")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tax_ClientInfo");
                });

            modelBuilder.Entity("GTERP.Models.Technical", b =>
                {
                    b.HasOne("GTERP.Models.Cat_Meeting", "Cat_Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Meeting");
                });

            modelBuilder.Entity("GTERP.Models.TermsSerialSub", b =>
                {
                    b.HasOne("GTERP.Models.TermsSub", "vTermsSub")
                        .WithMany("TermsSerialSubs")
                        .HasForeignKey("TermsSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vTermsSub");
                });

            modelBuilder.Entity("GTERP.Models.TermsSub", b =>
                {
                    b.HasOne("GTERP.Models.TermsMain", "TermsMain")
                        .WithMany("TermsSubs")
                        .HasForeignKey("TermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TermsMain");
                });

            modelBuilder.Entity("GTERP.Models.UnitMaster", b =>
                {
                    b.HasOne("GTERP.Models.UnitGroup", "UnitGroup")
                        .WithMany("UnitMaster")
                        .HasForeignKey("UnitGroupId");

                    b.Navigation("UnitGroup");
                });

            modelBuilder.Entity("GTERP.Models.UseUtilities", b =>
                {
                    b.HasOne("GTERP.Models.Acc_FiscalMonth", "MonthName")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("GTERP.Models.Acc_FiscalYear", "YearName")
                        .WithMany()
                        .HasForeignKey("FiscalYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.PrdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("PrdUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Product", "RawMaterial")
                        .WithMany()
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthName");

                    b.Navigation("RawMaterial");

                    b.Navigation("Unit");

                    b.Navigation("YearName");
                });

            modelBuilder.Entity("GTERP.Models.UserLoggingTrack", b =>
                {
                    b.HasOne("GTERP.Models.ModuleCourses", "ModuleCourses")
                        .WithMany("UserLoggingTracks")
                        .HasForeignKey("ModuleCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCourses");
                });

            modelBuilder.Entity("GTERP.Models.UserPermission", b =>
                {
                    b.HasOne("GTERP.Models.HR_Emp_Info", "HR_Emp_Info")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("GTERP.Models.VersionMenuPermission_Details", b =>
                {
                    b.HasOne("GTERP.Models.VersionMenuPermission_Master", "VersionMenuPermissionMasters")
                        .WithMany("VersionMenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.ModuleMenu", "ModuleMenus")
                        .WithMany()
                        .HasForeignKey("ModuleMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleMenus");

                    b.Navigation("VersionMenuPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.Version_Report_Details", b =>
                {
                    b.HasOne("GTERP.Models.HR_ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeReportId");

                    b.HasOne("GTERP.Models.Version_Report_Master", "VersionReportPermissionMasters")
                        .WithMany("Version_Report_Details")
                        .HasForeignKey("VersionReportMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportType");

                    b.Navigation("VersionReportPermissionMasters");
                });

            modelBuilder.Entity("GTERP.Models.WF_Ledger", b =>
                {
                    b.HasOne("GTERP.Models.BankAccountNo", "vBankAccountNo")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("vBankAccountNo");
                });

            modelBuilder.Entity("GTERP.Models.Warehouse", b =>
                {
                    b.HasOne("GTERP.Models.Warehouse", "Warehouses")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("GTERP.Models.WorkOrderMaster", b =>
                {
                    b.HasOne("GTERP.Models.ApprovedBy", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SisterConcernCompany", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId1");

                    b.HasOne("GTERP.Models.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("GTERP.Models.ItemGroup", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("GTERP.Models.ApprovedBy", "RecommenedBy")
                        .WithMany()
                        .HasForeignKey("RecommenedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.SupplierInformation", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GTERP.Models.WorkorderStatus", "WorkorderStatus")
                        .WithMany()
                        .HasForeignKey("WorkOrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("CommercialCompany");

                    b.Navigation("Currency");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("RecommenedBy");

                    b.Navigation("SupplierInformation");

                    b.Navigation("WorkorderStatus");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetMain", b =>
                {
                    b.Navigation("BudgetSubs");
                });

            modelBuilder.Entity("GTERP.Models.Acc_BudgetSub", b =>
                {
                    b.Navigation("BudgetSubSections");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherMain", b =>
                {
                    b.Navigation("Acc_VoucherTranGroups");

                    b.Navigation("VoucherSubs");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherSub", b =>
                {
                    b.Navigation("VoucherSubChecnoes");

                    b.Navigation("VoucherSubSections");
                });

            modelBuilder.Entity("GTERP.Models.Acc_VoucherType", b =>
                {
                    b.Navigation("VoucherMains");

                    b.Navigation("VoucherNoPrefixs");
                });

            modelBuilder.Entity("GTERP.Models.ApprovalRole", b =>
                {
                    b.Navigation("ApprovalPanels");
                });

            modelBuilder.Entity("GTERP.Models.AttachmentMain", b =>
                {
                    b.Navigation("vAttachmentSub");
                });

            modelBuilder.Entity("GTERP.Models.BOMMain", b =>
                {
                    b.Navigation("BOMSubs");
                });

            modelBuilder.Entity("GTERP.Models.Bill_Main", b =>
                {
                    b.Navigation("Bill_Subs");
                });

            modelBuilder.Entity("GTERP.Models.Booking", b =>
                {
                    b.Navigation("vDeliveryOrder");
                });

            modelBuilder.Entity("GTERP.Models.BrandInfo", b =>
                {
                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.BudgetMain", b =>
                {
                    b.Navigation("BudgetDetails");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelChallan", b =>
                {
                    b.Navigation("BufferGatePassChallans");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferDelOrder", b =>
                {
                    b.Navigation("BufferDelChallan");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferGatePass", b =>
                {
                    b.Navigation("BufferChallans");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferList", b =>
                {
                    b.Navigation("BufferRepresentativeList");

                    b.Navigation("DistictBuffer");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.BufferRepresentative", b =>
                {
                    b.Navigation("RepresentativeBuffer");
                });

            modelBuilder.Entity("GTERP.Models.Buffers.RepresentativeBooking", b =>
                {
                    b.Navigation("BufferDeliveryOrder");
                });

            modelBuilder.Entity("GTERP.Models.BuyerInformation", b =>
                {
                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.COM_BBLC_Master", b =>
                {
                    b.Navigation("COM_BBLC_Details");

                    b.Navigation("COM_CommercialInvoice");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillExportMaster", b =>
                {
                    b.Navigation("COM_CNFBillExportDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFBillImportMaster", b =>
                {
                    b.Navigation("COM_CNFBillImportDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_CNFExpenseType", b =>
                {
                    b.Navigation("COM_CNFBillExportDetails");

                    b.Navigation("COM_CNFBillImportDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_CommercialInvoice", b =>
                {
                    b.Navigation("COM_CommercialInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.COM_DocumentAcceptance_Master", b =>
                {
                    b.Navigation("COM_DocumentAcceptance_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_GroupLC_Main", b =>
                {
                    b.Navigation("COM_GroupLC_Sub");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachinaryLC_Master", b =>
                {
                    b.Navigation("COM_MachinaryLC_Details");
                });

            modelBuilder.Entity("GTERP.Models.COM_MachineryLCMaster", b =>
                {
                    b.Navigation("COM_MachineryLCDetailses");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC", b =>
                {
                    b.Navigation("COM_GroupLC_Subs");

                    b.Navigation("COM_MasterLC_Details");

                    b.Navigation("COM_MasterLCExport");

                    b.Navigation("ExportInvoiceMasters");
                });

            modelBuilder.Entity("GTERP.Models.COM_MasterLC_Details", b =>
                {
                    b.Navigation("ExportInvoiceDetails");
                });

            modelBuilder.Entity("GTERP.Models.COM_ProformaInvoice", b =>
                {
                    b.Navigation("COM_BBLC_Details");

                    b.Navigation("COM_MachinaryLC_Details");

                    b.Navigation("COM_ProformaInvoice_Subs");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Color", b =>
                {
                    b.Navigation("Cat_Sizes");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Department", b =>
                {
                    b.Navigation("Cat_Section");

                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Cat_District", b =>
                {
                    b.Navigation("DistictBufferList");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Integration_Setting_Main", b =>
                {
                    b.Navigation("Cat_Integration_Setting_Details");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Section", b =>
                {
                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("GTERP.Models.Cat_Strength", b =>
                {
                    b.Navigation("Cat_Department");

                    b.Navigation("Cat_Designation");

                    b.Navigation("Cat_Section");
                });

            modelBuilder.Entity("GTERP.Models.Category", b =>
                {
                    b.Navigation("vProducts");
                });

            modelBuilder.Entity("GTERP.Models.Company", b =>
                {
                    b.Navigation("AppKeys");
                });

            modelBuilder.Entity("GTERP.Models.CostAllocation_Main", b =>
                {
                    b.Navigation("CostAllocation_Detailses");

                    b.Navigation("CostAllocation_Distributes");
                });

            modelBuilder.Entity("GTERP.Models.Country", b =>
                {
                    b.Navigation("vCustomer");

                    b.Navigation("vStateCountry");

                    b.Navigation("vSupplier");
                });

            modelBuilder.Entity("GTERP.Models.Currency", b =>
                {
                    b.Navigation("COM_MasterLC");

                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.Customer", b =>
                {
                    b.Navigation("vCountry");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryChallan", b =>
                {
                    b.Navigation("GatePassChallans");
                });

            modelBuilder.Entity("GTERP.Models.DeliveryOrder", b =>
                {
                    b.Navigation("vDeliveryChallan");
                });

            modelBuilder.Entity("GTERP.Models.Destination", b =>
                {
                    b.Navigation("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.DistrictWiseBooking", b =>
                {
                    b.Navigation("Booking");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceDetails", b =>
                {
                    b.Navigation("ExportInvoicePackingLists");
                });

            modelBuilder.Entity("GTERP.Models.ExportInvoiceMaster", b =>
                {
                    b.Navigation("ExportInvoiceDetails");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealizationMaster", b =>
                {
                    b.Navigation("ExportRealizationDetails");
                });

            modelBuilder.Entity("GTERP.Models.ExportRealization_Master", b =>
                {
                    b.Navigation("ExportRealization_Details");
                });

            modelBuilder.Entity("GTERP.Models.FA_Details", b =>
                {
                    b.Navigation("DepreciationSchedules");
                });

            modelBuilder.Entity("GTERP.Models.FA_Master", b =>
                {
                    b.Navigation("FA_Details");
                });

            modelBuilder.Entity("GTERP.Models.GatePass", b =>
                {
                    b.Navigation("Challans");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveMain", b =>
                {
                    b.Navigation("GoodsReceiveProvision");

                    b.Navigation("GoodsReceiveSub");
                });

            modelBuilder.Entity("GTERP.Models.GoodsReceiveSub", b =>
                {
                    b.Navigation("GoodsReceiveSubWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.HR_Emp_Info", b =>
                {
                    b.Navigation("HR_Emp_Address");

                    b.Navigation("HR_Emp_BankInfo");

                    b.Navigation("HR_Emp_Devices");

                    b.Navigation("HR_Emp_Educations");

                    b.Navigation("HR_Emp_Experiences");

                    b.Navigation("HR_Emp_Family");

                    b.Navigation("HR_Emp_Image");

                    b.Navigation("HR_Emp_Increment");

                    b.Navigation("HR_Emp_Nominee");

                    b.Navigation("HR_Emp_PersonalInfo");

                    b.Navigation("HR_Emp_Projects");

                    b.Navigation("HR_Leave_Avail");

                    b.Navigation("HR_Leave_Balance");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_HouseBuilding", b =>
                {
                    b.Navigation("HR_Loan_Data_HouseBuildings");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_MotorCycle", b =>
                {
                    b.Navigation("HR_Loan_Data_MotorCycles");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Other", b =>
                {
                    b.Navigation("HR_Loan_Data_Others");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_PF", b =>
                {
                    b.Navigation("HR_Loan_Data_PFs");
                });

            modelBuilder.Entity("GTERP.Models.HR_Loan_Welfare", b =>
                {
                    b.Navigation("HR_Loan_Data_Welfares");
                });

            modelBuilder.Entity("GTERP.Models.InvoiceMain", b =>
                {
                    b.Navigation("InvoiceSubs");

                    b.Navigation("InvoiceTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.IssueMain", b =>
                {
                    b.Navigation("IssueSub");
                });

            modelBuilder.Entity("GTERP.Models.IssueSub", b =>
                {
                    b.Navigation("IssueSubWarehouse");
                });

            modelBuilder.Entity("GTERP.Models.LienBank", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("GTERP.Models.Medical_Master", b =>
                {
                    b.Navigation("Medical_Detailses");
                });

            modelBuilder.Entity("GTERP.Models.MenuPermission_Master", b =>
                {
                    b.Navigation("MenuPermission_Details");
                });

            modelBuilder.Entity("GTERP.Models.Module", b =>
                {
                    b.Navigation("ModuleCourses");

                    b.Navigation("vModuleGroup");
                });

            modelBuilder.Entity("GTERP.Models.ModuleCourses", b =>
                {
                    b.Navigation("fileCollections");

                    b.Navigation("UserLoggingTracks");
                });

            modelBuilder.Entity("GTERP.Models.ModuleGroup", b =>
                {
                    b.Navigation("vModuleMenu");
                });

            modelBuilder.Entity("GTERP.Models.ModuleMenu", b =>
                {
                    b.Navigation("MenuPermissionDetails");

                    b.Navigation("ModuleCourses");

                    b.Navigation("ModuleMenuChildren");
                });

            modelBuilder.Entity("GTERP.Models.OpeningBank", b =>
                {
                    b.Navigation("BankAccountNos");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherMain", b =>
                {
                    b.Navigation("VoucherSubs");
                });

            modelBuilder.Entity("GTERP.Models.PF_VoucherSub", b =>
                {
                    b.Navigation("VoucherSubChecnoes");

                    b.Navigation("VoucherSubSections");
                });

            modelBuilder.Entity("GTERP.Models.PaymentType", b =>
                {
                    b.Navigation("vTypeSalesSubs");
                });

            modelBuilder.Entity("GTERP.Models.PortOfDischarge", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("GTERP.Models.PortOfLoading", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("GTERP.Models.Product", b =>
                {
                    b.Navigation("CostCalculated");

                    b.Navigation("InventorySubs");

                    b.Navigation("vPurchaseSub");
                });

            modelBuilder.Entity("GTERP.Models.ProductCategory", b =>
                {
                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.ProductGroup", b =>
                {
                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.ProductMainGroup", b =>
                {
                    b.Navigation("vProducts");
                });

            modelBuilder.Entity("GTERP.Models.ProductSerial", b =>
                {
                    b.Navigation("vSalesSubSerial");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseMain", b =>
                {
                    b.Navigation("PurchasePaymentSubs");

                    b.Navigation("PurchaseReturnMains");

                    b.Navigation("PurchaseSubs");

                    b.Navigation("PurchaseTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderMain", b =>
                {
                    b.Navigation("PurchaseOrderSub");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidMain", b =>
                {
                    b.Navigation("PurchaseOrderValidSub");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseOrderValidSub", b =>
                {
                    b.Navigation("PurchaseOrderValidSubSupplier");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseRequisitionMain", b =>
                {
                    b.Navigation("PurchaseRequisitionSub");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseReturnMain", b =>
                {
                    b.Navigation("PurchaseReturnPaymentSubs");

                    b.Navigation("PurchaseReturnSubs");

                    b.Navigation("PurchaseReturnTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.PurchaseSub", b =>
                {
                    b.Navigation("ProductSerials");
                });

            modelBuilder.Entity("GTERP.Models.Quiz", b =>
                {
                    b.Navigation("Answer");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.Exam_Quiz", b =>
                {
                    b.Navigation("Answer");
                });

            modelBuilder.Entity("GTERP.Models.Recruitment.HR_Recruitment_Department", b =>
                {
                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("GTERP.Models.ReportPermission_Master", b =>
                {
                    b.Navigation("ReportPermission_Details");
                });

            modelBuilder.Entity("GTERP.Models.ReportType", b =>
                {
                    b.Navigation("ApprovalPanels");
                });

            modelBuilder.Entity("GTERP.Models.SalesMain", b =>
                {
                    b.Navigation("SalesPaymentSubs");

                    b.Navigation("SalesSubs");

                    b.Navigation("SalesTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesReturnMain", b =>
                {
                    b.Navigation("SalesReturnPaymentSubs");

                    b.Navigation("SalesReturnSubs");

                    b.Navigation("SalesReturnTermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.SalesType", b =>
                {
                    b.Navigation("vTypeSalesSubs");
                });

            modelBuilder.Entity("GTERP.Models.SisterConcernCompany", b =>
                {
                    b.Navigation("StyleInformations");
                });

            modelBuilder.Entity("GTERP.Models.State", b =>
                {
                    b.Navigation("vProducts");
                });

            modelBuilder.Entity("GTERP.Models.StoreRequisitionMain", b =>
                {
                    b.Navigation("StoreRequisitionSub");
                });

            modelBuilder.Entity("GTERP.Models.StyleInformation", b =>
                {
                    b.Navigation("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionMasters", b =>
                {
                    b.Navigation("SubMenuPermissionDetails");
                });

            modelBuilder.Entity("GTERP.Models.SubMenuPermissionReportMaster", b =>
                {
                    b.Navigation("SubMenuPermissionReportDetails");
                });

            modelBuilder.Entity("GTERP.Models.Supplier", b =>
                {
                    b.Navigation("vCountryPurchase");
                });

            modelBuilder.Entity("GTERP.Models.Support", b =>
                {
                    b.Navigation("FileDetails");
                });

            modelBuilder.Entity("GTERP.Models.TermsMain", b =>
                {
                    b.Navigation("TermsSubs");
                });

            modelBuilder.Entity("GTERP.Models.TermsSub", b =>
                {
                    b.Navigation("TermsSerialSubs");
                });

            modelBuilder.Entity("GTERP.Models.Unit", b =>
                {
                    b.Navigation("vProductUnit");
                });

            modelBuilder.Entity("GTERP.Models.UnitGroup", b =>
                {
                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("GTERP.Models.UnitMaster", b =>
                {
                    b.Navigation("ExportOrders");
                });

            modelBuilder.Entity("GTERP.Models.VersionMenuPermission_Master", b =>
                {
                    b.Navigation("VersionMenuPermission_Details");
                });

            modelBuilder.Entity("GTERP.Models.Version_Report_Master", b =>
                {
                    b.Navigation("Version_Report_Details");
                });

            modelBuilder.Entity("GTERP.Models.Warehouse", b =>
                {
                    b.Navigation("vWarehouseSalesSubs");
                });

            modelBuilder.Entity("GTERP.Models.Warrenty", b =>
                {
                    b.Navigation("vProductWarrenty");
                });

            modelBuilder.Entity("GTERP.Models.WorkOrderMaster", b =>
                {
                    b.Navigation("COM_MachineryLCDetailss");
                });
#pragma warning restore 612, 618
        }
    }
}
