@model GTERP.Models.Acc_ChartOfAccount_PF
<head>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <style>


                #styletext {
                    color: transparent;
                    background: #666666;
                    -webkit-background-clip: text;
                    -moz-background-clip: text;
                    background-clip: text;
                    text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
                    font-weight: 100;
                    font-size: 40px;
                }



        input[type=checkbox] {
            top:7px;
            height: 25px;
            width: 25px;
            background-color: transparent;
            /*border: 5px solid #000;*/
            border-radius: 5px;
            position: relative;
            display: inline-block;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            -moz-transition: border-color ease 0.2s;
            -o-transition: border-color ease 0.2s;
            -webkit-transition: border-color ease 0.2s;
            transition: border-color ease 0.2s;
            cursor: pointer;
        }
            input[type=checkbox]~.control-label {
                font-size: 18px;
                font-weight: 500;
                font-family: sans-serif;
            }
    </style>
</head>

<body>
    @*@using (Html.BeginForm())*@
    @using (Html.BeginForm("Create", "Acc_ChartOfAccountPFs", new { title = ViewBag.Title }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="container">

            <div class="py-7 text-center">
                <h1 id="styletext">Chart Of Account [PF]</h1>
                <p class="lead"></p>
            </div>
            <div id="modal">
                <div class="col-md-10 offset-md-1 col-12 order-md-1">
                    <div class="needs-validation card p-4" novalidate>
                        <div class="row">
                            <br>
                            @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@
                            @*<div>@Html.ValidationMesssage("KeyName")</div>*@
                            @if (Model != null)
                            {

                                <div class="p-3" style="font-size: 30px;">
                                    <span class="pr-2">
                                        @Html.RadioButtonFor(model => model.AccType, "G") @Html.Label("  Group  ")
                                    </span>
                                    <span class="pr-2">
                                        @Html.RadioButtonFor(model => model.AccType, "L") @Html.Label("  Ledger  ")
                                    </span>
                                </div>

                                @Html.HiddenFor(model => model.AccId)
                                @Html.HiddenFor(model => model.AccSubId)
                                @Html.HiddenFor(model => model.userid)
                                @Html.HiddenFor(model => model.comid)
                                @Html.HiddenFor(model => model.useridUpdate)
                                @Html.HiddenFor(model => model.DateAdded)
                                @Html.HiddenFor(model => model.DateUpdated)
                                @Html.HiddenFor(model => model.PrevParentID)
                                @Html.HiddenFor(model => model.OpDate)
                                @Html.HiddenFor(model => model.PrevAccType)
                                @Html.HiddenFor(model => model.ParentCode)
                                @Html.HiddenFor(model => model.IsSysDefined)
                                @Html.HiddenFor(model => model.AccCode_Old)





                            }
                            else
                            {
                                <div class="p-3" style="font-size: 30px;">
                                    <span class="pr-2">
                                        @Html.RadioButtonFor(model => model.AccType, "G") @Html.Label("  Group  ")

                                    </span>
                                    <span class="pr-2">
                                        @Html.RadioButtonFor(model => model.AccType, "L", new { Checked = "checked" }) @Html.Label("Ledger")

                                    </span>
                                </div>
                            }


                        </div>



                        <div class="row">
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.AccCode, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.AccCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AccCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.AccName, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.AccName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AccName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.DropDownListFor(model => model.ParentID, null, new { @class = "form-control select", @id = "ParentId" })
                                    @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.OpDebit, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.OpDebit, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OpDebit, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.OpCredit, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.OpCredit, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OpCredit, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.DropDownListFor(model => model.CountryID, null, new { @class = "form-control select", @id = "CountryID" })
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.opFYId, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.DropDownListFor(model => model.opFYId, null, new { @class = "form-control select", @id = "opFYId" })
                                    @Html.ValidationMessageFor(model => model.opFYId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.IsBankItem, new { @class = "select" })
                                @Html.LabelFor(model => model.IsBankItem, htmlAttributes: new { @class = "control-label" })

                                @Html.ValidationMessageFor(model => model.IsBankItem, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.IsChkRef, new { @class = "select" })
                                @Html.LabelFor(model => model.IsChkRef, htmlAttributes: new { @class = "control-label" })

                                @Html.ValidationMessageFor(model => model.IsChkRef, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.IsCashItem, new { @class = "select" })
                                @Html.LabelFor(model => model.IsCashItem, htmlAttributes: new { @class = "control-label" })

                                @Html.ValidationMessageFor(model => model.IsCashItem, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.isItemConsumed, new { @class = "select" })

                                @Html.LabelFor(model => model.isItemConsumed, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.isItemConsumed, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.isItemInventory, new { @class = "select" })

                                @Html.LabelFor(model => model.isItemInventory, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.isItemInventory, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.IsItemDepExp, new { @class = "select" })

                                @Html.LabelFor(model => model.IsItemDepExp, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.IsItemDepExp, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-5 col-12">
                                @Html.CheckBoxFor(model => model.IsItemAccmulateddDep, new { @class = " " })

                                @Html.LabelFor(model => model.IsItemAccmulateddDep, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.IsItemAccmulateddDep, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 col-12">
                                @Html.CheckBoxFor(model => model.isInactive, new { @class = "select" })

                                @Html.LabelFor(model => model.isInactive, htmlAttributes: new { @class = "control-label" })
                                @Html.ValidationMessageFor(model => model.isInactive, "", new { @class = "text-danger" })

                            </div>
                        </div>
                        <br>
                        <div>
                            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                        </div>
                    

                        <table>
                            <tr>
                                <td>
                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Create" class="btn btn-primary btn-block" />

                                        @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block" />

                                        @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-lg btn-block" type="button" onclick="COA_delete()">Delete</button>
                                    }

                                </td>
                                <td>
                                    @Html.ActionLink("Back", "Index", null, null, new { @class = "btn btn-info btn-block" })


                                </td>

                            </tr>
                        </table>
                    </div>

                </div>


            </div>

        </div>

    }




</body>

@section Scripts{
    <script language="javascript" type="text/javascript">
        // $('select').select2();
        $("#ParentId").select2();


        function COA_delete() {

               var AccId = $("#AccId").val();
                    //alert(SalesId);
                    $.ajax({

                        url: '@Url.Action("Delete", "Acc_ChartOfAccountPFs")',
                        //url: '@Url.Action("Delete")',
                        data: JSON.stringify({ id: AccId }), //use id here
                        //data: JSON.stringify(salesmain),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {

                            if (result.Success == "1") {
                                window.location.href = '@Url.Action("Index", "Acc_ChartOfAccountPFs")';
                            }
                            else {
                                alert(result.ex);
                            }
                        }
                    });
             }


        function radiobutton() {
            $("input[type='radio']").click(function () {

                var radioValue = $("input[name='acctype']:checked").val();

                //alert(radioValue);

                if (radioValue == "group") {

                    //alert('percentage');
                    //$("#IndDisPer").prop("readonly", false);
                    //$("#IndDisAmt").prop("readonly", true);
                    //$("#IndDisPer").val(0);
                    //$("#IndChkPer").val(true);

                }
                else if (radioValue == "ledger") {

                    //$("#IndDisPer").prop("readonly", true);
                    //$("#IndDisAmt").prop("readonly", false);
                    //$("#IndDisPer").val(0);
                    //$("#IndChkPer").val(false);
                }

            });

        }


    </script>
}