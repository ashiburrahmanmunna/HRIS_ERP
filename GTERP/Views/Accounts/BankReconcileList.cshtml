@model IEnumerable<GTERP.Models.Acc_VoucherSubCheckno>



@using (Html.BeginForm())
{
    <div class="container-fluid">

        <div class="text-center">
            <div class="row my-2">
                <div class="col-md-3 col-12">
                    @Html.ActionLink("Bank Reconcile Data Entry", "CreateBankReconcile", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })
                </div>

                <div class="col-md-9 col-12">
                    <h2 id="styletext">Bank Reconcile Info List</h2>
                </div>
              
            </div>
        </div>



        <div class="row text-center">
            <div class="col-md-5 col-12">
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text">From Date</span>
                    </div>
                    @*<input type="text" class="form-control text-center FromDate" placeholder="Select From Date" autocomplete="off" />*@
                    @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                </div>
            </div>

            <div class="col-md-5 col-12">
                <div class="input-group mb-2">
                    <div class="input-group-prepend">
                        <span class="input-group-text">To Date </span>
                    </div>
                    @*<input type="text" id="ToDate" class="form-control text-center ToDate" placeholder="Select To Date" autocomplete="off" />*@
                    @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                </div>
            </div>
            <div class="col-md-2 col-12">
                <input type="submit" id="btnLoad" value="Load" class="btn btn-success btn-block rounded-0" />
            </div>

        </div>



        <div class="card p-2">
            <div class="table-responsive text-nowrap">
                <table id="tbllist" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                    <thead class="">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Criteria)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ChkNo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.vAcc_ChartOfAccount.AccName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.dtChk)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.dtChkTo)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Amount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Remarks)
                            </th>
                            <th>
                                Action
                            </th>

                        </tr>
                    </thead>

                    <tbody>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Criteria)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ChkNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.vAcc_ChartOfAccount.AccName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.dtChk)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.dtChkTo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>

                                <td>

                                    @if (item.isClear == false)
                                    {

                                        <span data-toggle="tooltip" title="Edit!">
                                            @Html.ActionLink(" ", "EditBankReconcile", new { id = item.VoucherSubCheckId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                        </span>
                                        <span data-toggle="tooltip" title="Delete!">
                                            @Html.ActionLink(" ", "DeleteBankReconcile", new { Id = item.VoucherSubCheckId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                        </span>
                                    }

                                </td>
                            </tr>
                        }

                </table>
            </div>
            <br />
        </div>
    </div>

}
@section Scripts{
    <script type="text/javascript">

        $(document).ready(function () {

            $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [

                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        }

                    ]
                },
                //"searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 20,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                }
                ////"fixedColumns": {
                ////    "leftColumns": 2,

                ////},
                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });
        });

        //$(".search_input").addClass('form-control input-lg col-xs-12');







        CurrentDate();

        $(".FromDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });
        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();


            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }
        }
    </script>
}
