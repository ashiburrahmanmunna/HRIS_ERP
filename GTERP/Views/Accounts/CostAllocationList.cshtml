@model IEnumerable<GTERP.Models.CostAllocation_Main>


<div class="container-fluid">
    <form class="card p-2">
        <div class="row mb-2">
            <div class="col-md-2 col-12">
                @Html.ActionLink("Notes Create", "CreateCostAllocation", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })
            </div>
            <div class="col-md-7 col-12 d-block mx-auto flot-right">
                <h2 id="styletext">Notes List</h2>
            </div>
            <div class="col-md-3 col-12 round text-right pt-2">
          
                <fieldset class="pull-right" style="height: auto;margin-bottom: 0px">
                    <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                    <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                    <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>
                </fieldset>
            
            </div>
            <div class="col-md-2 col-12"></div>
        </div>
        <div class="p-2">
            <div class="row">
                <div class="col-md-3 col-12">
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                Notes
                            </span>
                        </div>
                        <select class="form-control" asp-items="ViewBag.CostAlloMainId" id="CostAlloMainId">
                            <option value="">--All--</option>
                        </select>

                    </div>
                </div>

                <div class="col-md-4 col-12">
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                Fiscal Year
                            </span>
                        </div>
                        <select class="form-control" asp-items="ViewBag.FiscalYearId" id="FiscalYearId">
                        </select>
                    </div>
                </div>
                <div class="col-md-4 col-12">
                    <div class="input-group mb-2">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                Fiscal Month
                            </span>
                        </div>
                        <select class="form-control" asp-items="ViewBag.FiscalMonthId" id="FiscalMonthId">
                        </select>
                    </div>
                </div>

                <div class="col-md-1 col-6">
                    <button class="btn btn-success mb-2 btn-block rounded-0" type="button" onclick="ReportPrint()">Report</button>
                </div>
            </div>
        </div>
        <hr />
        <div class="table-responsive">
            <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
                <thead class="text-nowrap">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Acc_FiscalYear.FYName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Acc_FiscalMonth.MonthName)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Remarks)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Acc_FiscalYear.FYName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Acc_FiscalMonth.MonthName)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.Remarks)
                            </td>

                            <td class="text-nowrap">
                                <span data-toggle="tooltip" title="Edit!">
                                    @Html.ActionLink(" ", "EditCostAllocation", new { id = item.CostAlloMainId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                </span>
                                <span data-toggle="tooltip" title="Delete!">
                                    @Html.ActionLink(" ", "DeleteCostAllocation", new { Id = item.CostAlloMainId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                </span>
                            </td>
                        </tr>
                    }
            </table>
        </div>
    </form>
</div>


@section Scripts{

    <script>
        $(document).ready(function () {
            $('#CostAlloMainId').select2();
            $('#FiscalYearId').select2();
            $('#FiscalMonthId').select2();
            $("select").select2({
                theme: "bootstrap4",
            });

            $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        },
                        {
                            extend: 'print',
                            text: '<i class="mdi mdi-printer"></i>',
                            className: 'btn-info',
                            titleAttr: 'Print Table'
                        }

                    ]
                },
                //"columnDefs": [
                // Hide second, third and fourth columns
                //{ "visible": false, "targets": [3, 4, 7, 9, 10] }
                //],
                "searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 15,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                }
                //fixedColumns: {
                //    leftColumns: 1,
                //    rightColumns: 1
                //}

                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });
        });


        function ReportPrint() {

            var doctype = "pdf";

            var criteria = "DownloadReport";
            var reporttype = $("input[name=RptType]:checked").val();
            var CostAlloMainId = $('#CostAlloMainId').val();
            var FiscalYearId = $('#FiscalYearId').val();


            var FiscalMonthId = $('#FiscalMonthId').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SetSessionAccountReport", "CostAllocation")',
                dataType: 'json',
                async: true,
                data: { rptFormat: reporttype, CostAlloMainId: CostAlloMainId, FiscalYearId: FiscalYearId, FiscalMonthId: FiscalMonthId },
                success: function (response) {

                    window.open(response.Url, '_blank')
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });


        }

                                            //$(".search_input").addClass('form-control input-lg col-xs-12');</script>
}




