@model GTERP.Models.Acc_BankStatementBalance
<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>


<body>
    @using (Html.BeginForm("CreateBankStatementBL", "Accounts", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="container">

            <div class="row">
                <div class="col-md-8 offset-md-2 col-12">
                    <div id="modalbodyrakin" class="card">
                        <div>
                            <div class="card-header">
                                <h4 id="styletext">Bank Statement Balance Entry - @ViewBag.Title</h4>
                            </div>
                            <div class="card-body">
                                <div class="needs-validation" novalidate>
                                    <div class="row">

                                        <br>
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        @if (Model != null)
                                        {

                                        <input type="hidden" id="BankStatementBalanceId" name="BankStatementBalanceId" value="@Model.BankStatementBalanceId" />
                                        <input type="hidden" id="userid" name="userid" value="@Model.UserId" />
                                        <input type="hidden" id="comid" name="comid" value="@Model.ComId" />
                                        <input type="hidden" id="comid" name="comid" value="@Model.DateAdded" />

                                        }
                                        else
                                        {
                                        <input type="hidden" id="comid" name="comid" value="" />
                                        <input type="hidden" id="userid" name="userid" value="" />

                                        }

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.AccId, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.DropDownList("AccId", ViewBag.AccId as List<SelectListItem>
                                                    , new { id = "AccId", @class = "form-control " })

                                                    @*@Html.DropDownListFor(model => model.AccId, new { htmlAttributes = new { @class = "form-control" } })*@
                                                    @Html.ValidationMessageFor(model => model.AccId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div id="divBalanceDate" class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.BalanceDate)
                                                    </span>
                                                </div>
                                                
                                                <input asp-for="BalanceDate" class="form-control tg" type="date" />
                                                @*@Html.EditorFor(model => model.BalanceDate, new { htmlAttributes = new { @class = "form-control" }, type = "date" })*@
                                            </div>
                                        </div>

                                        @*<div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.BalanceDate, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.BalanceDate, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.BalanceDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>*@

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.CashBookStatementAmount, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.CashBookStatementAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CashBookStatementAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.AddAmount, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.AddAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AddAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LessAmount, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LessAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LessAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.BankStatementAmount, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.BankStatementAmount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.BankStatementAmount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                            <div class="card-footer">
                                <div class="row">
                                    <div class="col-md-3"></div>
                                    <div class="col-md-3 col-12">
                                        @if (ViewBag.Title == "Create")
                                        {
                                        <input type="submit" value="Create" class="btn btn-primary btn-block rounded-0" />

                                        @*<button class="btn btn-primary btn-lg btn-block rounded-0" type="button" onclick="Products_save()">Save</button>*@
                                        }
                                        else if (ViewBag.Title == "Edit")
                                        {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                        @*<button class="btn btn-warning btn-lg btn-block rounded-0" type="button" onclick="Products_save()">Update</button>*@
                                        }
                                        else if (ViewBag.Title == "Delete")
                                        {
                                        <button class="btn btn-danger btn-lg btn-block rounded-0" type="button" onclick="Acc_BankStatementBalance_delete()">Delete</button>
                                        }
                                    </div>
                                    <div class="col-md-3 col-12">
                                        @Html.ActionLink("Back", "BankStatementBLList", "Accounts", null, new { @class = "btn btn-info btn-block rounded-0" })
                                    </div>
                                    <div class="col-md-3"></div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
          

        </div>
    }

</body>


@section Scripts{
    <script type="text/javascript">

         function Acc_BankStatementBalance_delete() {

             var BankStatementBalanceId = $("#BankStatementBalanceId").val();
             //alert(BankStatementBalanceId);
                $.ajax({

                    url: '@Url.Action("DeleteBankStatementBL", "Accounts")',
                    //url: '@Url.Action("Delete")',
                    data: JSON.stringify({ id: BankStatementBalanceId }), //use id here
                    //data: JSON.stringify(salesmain),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (result) {

                        if (result.Success == "1") {
                            window.location.href = '@Url.Action("BankStatementBLList", "Accounts")';
                        }
                        else {
                            alert(result.ex);
                        }
                    }
                });
        }

    </script>
}