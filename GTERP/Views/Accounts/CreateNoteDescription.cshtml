@model GTERP.Models.NoteDescription

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateNoteDescription", "Accounts", FormMethod.Post, null))
{
    @Html.AntiForgeryToken()
    <div class="container" style="max-width: 700px;">
        <div class="py-7 text-center">
            <h2 id="styletext">Note Description Information</h2>
            <p class="lead"></p>
        </div>
        @*<hr />*@


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {

            <input type="hidden" id="NoteDescriptionId" name="NoteDescriptionId" value="@Model.NoteDescriptionId" />
            <input type="hidden" id="comid" name="comid" value="@Model.ComId" />
            <input type="hidden" id="userid" name="userid" value="@Model.UserId" />
            <input type="hidden" id="useridUpdate" name="useridUpdate" value="@Model.UpdateByUserId" />
            <input type="hidden" id="DateAdded" name="DateAdded" value="@Model.DateAdded" />
            <input type="hidden" id="DateUpdated" name="DateUpdated" value="@Model.DateUpdated" />



        }
        else
        {
            <input type="hidden" id="comid" name="comid" value="" />
        }



        <div id="modalbodyfahad" class="row">
            <div class="col mb-12 order-md-1">
                <h4 class="mb-3">NoteDescription @ViewBag.Title</h4>
                <div class="needs-validation card p-4" novalidate>
                    <div class="row">

                        <br>

                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.NoteNo)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.NoteNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoteNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.SLNo)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.SLNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SLNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.NoteDetails, new { htmlAttributes = new { @class = "control-label" } })
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.NoteDetails, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoteDetails, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.NoteRemarks, new { htmlAttributes = new { @class = "control-label" } })
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.NoteRemarks, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NoteRemarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.FiscalYearId, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                </div>
                                @Html.DropDownListFor(model => model.FiscalYearId, null, new { @class = "form-control select", @id = "FiscalYearId" })
                                @Html.ValidationMessageFor(model => model.FiscalYearId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="row text-center m-2">
                        <br />
                        <div class="col-md-2"></div>
                        <div class="col-md-4 col-xs-12 d-block mx-auto">

                            @if (ViewBag.Title == "Create")
                            {
                                <input type="submit" value="Save" class="btn btn-primary btn-block rounded-0" />
                            }
                            else if (ViewBag.Title == "Edit")
                            {
                                <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                            }
                            else if (ViewBag.Title == "Delete")
                            {
                                <button class="btn btn-danger btn-block rounded-0" type="button" onclick="ConfirmDialog('Are you sure');">Delete</button>
                            }
                        </div>
                        <div class="col-md-4 col-xs-12 d-block mx-auto">
                            @Html.ActionLink("Back", "NoteDescriptionList", null, null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                        </div>
                        <div class="col-md-2"></div>

                    </div>
                </div>
            </div>

        </div>
    </div>

}


<script type="text/javascript">


        //ConfirmDialog('Are you sure');

        function ConfirmDialog(message) {
            $('<div></div>').appendTo('body')
                .html('<div><h6>' + message + '?</h6></div>')
                .dialog({
                    modal: true,
                    title: 'Delete message',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 'auto',
                    resizable: false,
                    buttons: {
                        Yes: function () {

                            // $(obj).removeAttr('onclick');
                            // $(obj).parents('.Parent').remove();

                            //$('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');

                            $(this).dialog("close");
                            NoteDescription_delete();

                        },
                        No: function () {
                            //$('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                            $(this).dialog("close");
                        }
                    },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
        };



            function NoteDescription_delete() {

                var NoteDescriptionId = $("#NoteDescriptionId").val();
               // alert(NoteDescriptionId);

                            //alert(SalesId);
                            $.ajax({

                                url: '@Url.Action("DeleteNoteDescription", "Accounts")',
                                //url: '@Url.Action("Delete")',
                                data: JSON.stringify({ id: NoteDescriptionId }), //use id here
                                //data: JSON.stringify(salesmain),
                                type: 'POST',
                                contentType: 'application/json;',
                                dataType: 'json',
                               success: function (result) {
                                    if (result.Success == "1") {
                                        customFile('3', result.ex);
                                        window.setTimeout(function () {
                                            // Move to a new location or you can do something else
                                            window.location.href = '@Url.Action("NoteDescriptionList", "Accounts")';
                                        }, 500);
                                    }
                                    else {
                                        toastr.error(result.ex);
                                    }
                                }
                            });
    };


</script>
