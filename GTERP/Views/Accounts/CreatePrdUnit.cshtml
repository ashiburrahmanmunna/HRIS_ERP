@model GTERP.Models.PrdUnit

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreatePrdUnit", "Accounts", FormMethod.Post, null))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-12">
                @*<hr />*@


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (Model != null)
                {

                    <input type="hidden" id="PrdUnitId" name="PrdUnitId" value="@Model.PrdUnitId" />
                    <input type="hidden" id="comid" name="comid" value="@Model.ComId" />
                    <input type="hidden" id="userid" name="userid" value="@Model.UserId" />
                    <input type="hidden" id="useridUpdate" name="useridUpdate" value="@Model.UpdateByUserId" />
                    <input type="hidden" id="DateAdded" name="DateAdded" value="@Model.DateAdded" />
                    <input type="hidden" id="DateUpdated" name="DateUpdated" value="@Model.DateUpdated" />



                }
                else
                {
                    <input type="hidden" id="comid" name="comid" value="" />
                }



                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext">PrdUnit Entry - @ViewBag.Title</h4>
                        </div>
                        <div class="card-body">
                            <div class="needs-validation" novalidate>
                                <div class="row">

                                    <br>

                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.PrdUnitCode)
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.PrdUnitCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PrdUnitCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.PrdUnitShortName)
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.PrdUnitShortName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PrdUnitShortName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.SLNo)
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.SLNo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SLNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.PrdUnitName, new { htmlAttributes = new { @class = "control-label" } })
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.PrdUnitName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PrdUnitName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-8 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.PrdUnitBanglaName, new { htmlAttributes = new { @class = "control-label" } })
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.PrdUnitBanglaName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PrdUnitBanglaName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.isPrdUnit)
                                                </span>
                                            </div>
                                            <div class="input-group-append">
                                                <span class="input-group-text">
                                                    @Html.CheckBoxFor(model => model.isPrdUnit)
                                                    @Html.ValidationMessageFor(model => model.isPrdUnit, "", new { @class = "text-danger" })
                                                </span>
                                            </div>

                                        </div>
                                    </div>
                                </div>



                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-block rounded-0" type="button" onclick="ConfirmDialog('Are you sure');">Delete</button>
                                    }
                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "PrdUnitList", null, null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </div>

    </div>


    <div>

        @* user manual here by shahinur for fahad *@

    </div>

}


<script type="text/javascript">


        //ConfirmDialog('Are you sure');

        function ConfirmDialog(message) {
            $('<div></div>').appendTo('body')
                .html('<div><h6>' + message + '?</h6></div>')
                .dialog({
                    modal: true,
                    title: 'Delete message',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 'auto',
                    resizable: false,
                    buttons: {
                        Yes: function () {

                            // $(obj).removeAttr('onclick');
                            // $(obj).parents('.Parent').remove();

                            //$('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');

                            $(this).dialog("close");
                            PrdUnit_delete();

                        },
                        No: function () {
                            //$('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                            $(this).dialog("close");
                        }
                    },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
        };



            function PrdUnit_delete() {

                var PrdUnitId = $("#PrdUnitId").val();
               // alert(PrdUnitId);

                            //alert(SalesId);
                            $.ajax({

                                url: '@Url.Action("DeletePrdUnit", "Accounts")',
                                //url: '@Url.Action("Delete")',
                                data: JSON.stringify({ id: PrdUnitId }), //use id here
                                //data: JSON.stringify(salesmain),
                                type: 'POST',
                                contentType: 'application/json;',
                                dataType: 'json',
                               success: function (result) {
                                    if (result.Success == "1") {
                                        customFile('3', result.ex);
                                        window.setTimeout(function () {
                                            // Move to a new location or you can do something else
                                            window.location.href = '@Url.Action("PrdUnitList", "Accounts")';
                                        }, 500);
                                    }
                                    else {
                                        toastr.error(result.ex);
                                    }
                                }
                            });
    };


</script>
