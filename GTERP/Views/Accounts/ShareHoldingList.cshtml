@model IEnumerable<GTERP.Models.ShareHolding>

<div class="container-fluid">
    <div class="text-center">
        <div class="row mb-2">
            <div class="col-md-3 col-12">
                @Html.ActionLink("Share Holder Creation", "CreateShareHolding", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })
            </div>
            <div class="col-md-9 col-12">
                <h2 id="styletext">Share Holder List</h2>
            </div>
        </div>

    </div>

    <form class="card p-2">
        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table table-striped table-bordered table-hover text-center" cellspacing="0" width="100%">
                <thead class="">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.FiscalYearId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SLNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.NoteNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ShareHolderName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ShareHolderDesignation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.NoOfShareHoldings)
                        </th>


                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Acc_FiscalYears.FYName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SLNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NoteNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShareHolderName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ShareHolderDesignation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NoOfShareHoldings)
                        </td>
                        <td>
                            <span data-toggle="tooltip" title="Edit!">
                                @Html.ActionLink(" ", "EditShareHolding", new { id = item.ShareHoldingId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                            </span>
                            <span data-toggle="tooltip" title="Delete!">
                                @Html.ActionLink(" ", "DeleteShareHolding", new { Id = item.ShareHoldingId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                            </span>


                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        <br />
    </form>
</div>





<script>

    $(document).ready(function () {

        $('#tbllist').DataTable({
            dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
            //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
            //buttons: [
            //    'copy', 'csv', 'excel', 'pdf'
            //],
             buttons: {
                dom: {
                    button: {
                        className: 'btn rounded-0'
                    }
                },
                buttons: [
                    //'copy', 'csv', 'excel', 'pdf'
                    //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                    {
                        extend: 'colvis',
                        "columns": ':not(:last-child)',
                        text: '<i class="mdi mdi-view-column"></i>',
                        className: 'btn-info',
                        titleAttr: 'Show / hide columns',
                        //collectionLayout: 'fixed two-column'

                    },
                    {
                        extend: 'copy',
                        text: '<i class="mdi mdi-content-copy"></i>',
                        className: 'btn-primary',
                        titleAttr: 'Copy to Clipboard'
                    },
                    {
                        extend: 'excel',
                        text: '<i class="mdi mdi-file-excel"></i>',
                        className: 'btn-success',
                        titleAttr: 'Export to excel'
                    }

                ]
            },     
            "searching": true,
            "paging": false,
            "ordering": true,
            "info": true,
            "iDisplayLength": 20,
            "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
            "scrollX": true,
            "scrollY": "60vh",
            "scrollCollapse": true,
            language: {
                sLengthMenu: "_MENU_"
            }
            ////"fixedColumns": {
            ////    "leftColumns": 2,

            ////},
            //"sScrollXInner": "100%",
            //dom: 'Blfrtip',
            ////,"fixedHeader": true
        });
    });

    //$(".search_input").addClass('form-control input-lg col-xs-12');

</script>