@model GTERP.Models.BOMMain
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery AntiForgery


@{
    //ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //var subData = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
    var RequisitionResult = ViewBag.reqsub;
}
<link href="~/css/customFormStyle.css" rel="stylesheet" />
<div class="container-fluid">
    <div class="card p-2">
        <div class="card-header bg-success text-white">
            Usage Ratio
        </div>
        <br />
        <div class="card-body">
            <input type="hidden" name="userid" value="" />
            <input type="hidden" id="mode" value="@ViewBag.Title" />

            @if (Model != null)
            {
                <input type="hidden" id="BOMMainId" name="BOMMainId" value="@Model.BOMMainId" />
                <input type="hidden" id="UserId" name="UserId" value="@Model.UserId" />
                <input type="hidden" id="ComId" name="ComId" value="@Model.ComId" />
                <input type="hidden" id="DateAdded" name="DateAdded" value="@Model.DateAdded" />
                @*<input type="hidden" id="Status" name="Status" value="@Model.Status" />*@

                //<input type="hidden" id="PurReqSubId" name="PurReqSubId" value="@Model.PurchaseRequisitionSub.FirstOrDefault().PurReqSubId" />
                //<input type="hidden" asp-for="PurReqId" id="PurReqId" />
            }
            else
            {

            }
            <div class="row">
                <div class="col-md-12">
                    <form>
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row">
                            <!--#region first Div-->
                            <div class="card col-md-8">
                                <div class="text-center pt-2">
                                    <h4>Usage Ratio Details Entry</h4>
                                </div>
                                <hr />

                                <div class="row">
                                    <div class=" d-none form-group col-md-6 col-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label asp-for="ProductId" class="control-label"> </label>
                                                </span>
                                            </div>

                                            <select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
                                        </div>
                                    </div>
                                    <div class="  form-group col-md-6 col-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label asp-for="AssembleName" class="control-label">Finished Product</label>
                                                </span>
                                            </div>

                                            <input asp-for="AssembleName" class="form-control" type="text" />
                                            <span asp-validation-for="AssembleName" class="text-danger"></span>
                                        </div>

                                    </div>
                               
                                    <div class="form-group col-md-6 col-12 mb-3 d-none">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label asp-for="PrdUnitId" class="control-label"></label>
                                                </span>
                                            </div>

                                            <select asp-for="PrdUnitId" class="form-control" asp-items="ViewBag.PrdUnitId"></select>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6 col-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label asp-for="Remarks" class="control-label"></label>
                                                </span>
                                            </div>

                                            <textarea asp-for="Remarks" class="form-control"></textarea>
                                            <span asp-validation-for="Remarks" class="text-danger"></span>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <!-- #endregion -->
                            <!--#region second Div-->
                            <div class="card p-3 col-md-4">
                                <div class="text-center">
                                    <h4>Create Usage Ratio Item</h4>
                                </div>
                                <hr />
                                @Html.HiddenFor(m => m.BOMSubs.FirstOrDefault().BOMSubId, new { id = "BOMSubId" })
                                <div class="row">
                                    <div class=" form-group col-md-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label>Product Name</label>
                                                </span>
                                            </div>
                                            <select class="form-control" asp-items="ViewBag.ProductId" id="InvProductId"></select>
                                            @*<div type="button" class="btn btn-primary" data-toggle="modal" id="btnModal" data-target="#exampleModal"><i class="fa fa-plus fa-lg"></i></div>*@

                                            @*@Html.DropDownList("ProductId", ViewBag.ProductId as List<SelectListItem>, new { id = "ProductId", @class = "form-control form-control" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class=" form-group col-md-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label>Warehouse</label>
                                                </span>
                                            </div>
                                            <select class="form-control" asp-items="ViewBag.WarehouseId" id="WarehouseId"></select>
                                           
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class=" form-group col-md-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label>Consumption Qty</label>
                                                </span>
                                            </div>

                                            @Html.TextBox("ConsumptionQty", "", new { id = "ConsumptionQty", @class = "form-control" })
                                            <span id="QtySpan" class="text-danger"></span>
                                        </div>
                                    </div>

                                </div>
                                <div class="row d-none">
                                    <div class=" form-group col-md-12 mb-3">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text">
                                                    <label>Remarks</label>
                                                </span>
                                            </div>

                                            @Html.TextBox("Note", "", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="text-center">
                                    <span id="spn">
                                        <button type="button" id="addBtn" onclick="Add()" class="btn btn-primary">Add</button>
                                        @*<button type="button" id="UpBtn"  class="btn btn-success">Update</button>*@
                                    </span>
                                </div>

                            </div>
                            <!-- #endregion -->

                        </div>

                        <br />
                        <!--#region Tbl div-->
                        <div id="tblDiv">

                            <div class="col-md-12 order-md-1 mb-2">
                                <div class="card p-4">
                                    <br />
                                    <div class="table-responsive text-nowrap">
                                        <table id="tblBOM" class="table-sm tbl display responsive table-striped table-hover text-center" style="width:100%">
                                            <thead>
                                                <tr>
                                                    <th style="display:none">Req Sub Id</th>
                                                    <th style="display:none">Product Id</th>
                                                    <th>Item Name</th>
                                                    <th>Consumption Qty</th>
                                                    <th>Remarks</th>
                                                    <th>Action</th>
                                                    <th>SLNo</th>
                                                    <th style="display:none">Warehouse Id</th>
                                                    <th>Warehouse</th>

                                                </tr>
                                            </thead>

                                            <tbody>
                                                @if (Model != null)
                                                {
                                                    if (Model.BOMSubs != null)
                                                    {
                                                        foreach (var item in Model.BOMSubs)
                                                        {
                                                            <tr class="txtProduct">
                                                                <td style="display:none">
                                                                    @Html.DisplayTextFor(i => item.BOMSubId)
                                                                </td>

                                                                <td style="display:none">
                                                                    @Html.DisplayTextFor(i => item.InvProductId)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.Product.ProductName)
                                                                </td>

                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.Consumption)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.Remarks)
                                                                </td>

                                                                <td>
                                                                    <a class="dlttrash" data-itemId="@item.BOMSubId" data-html="@item.BOMSubId" href="#"><i class="fa fa-trash"></i></a>
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.SLNo)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.WarehouseId)
                                                                </td>
                                                                <td>
                                                                    @Html.DisplayTextFor(i => item.Warehouse.WhName)
                                                                </td>
                                                            </tr>
                                                        }
                                                    }

                                                }
                                            </tbody>
                                            <tfoot>

                                            </tfoot>

                                        </table>
                                    </div>
                                    <br />

                                </div>

                            </div>

                            <div>
                                @if (ViewBag.Title == "Create")
                                {
                                    <div class="text-center">

                                        <span>
                                            <button type="button" class="btn btn-primary" onclick="BOM_Save()">Save</button>
                                        </span>
                                        <span>
                                            @Html.ActionLink("Back", "Index", "BOM", null, new { @class = "btn btn-info", @id = "btnBack" })
                                        </span>

                                    </div>
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <div class="text-center">
                                        @*<span>
                                                <button type="button" onclick="Add()" class="btn btn-success">Add</button>
                                            </span>*@
                                        <span>
                                            <button type="button" class="btn btn-warning" onclick="BOM_Save()">Update</button>
                                        </span>
                                        <span>
                                            @Html.ActionLink("Back", "Index", "BOM", null, new { @class = "btn btn-info", @id = "btnBack" })
                                        </span>

                                    </div>
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <div class="text-center">
                                        @*<span>
                                                <button type="button" onclick="Add()" class="btn btn-success">Add</button>
                                            </span>*@
                                        <span>
                                            <button class="btn btn-danger" type="button" onclick="ConfirmDialogDelete('Are you sure');">Delete</button>
                                            @*<button type="button" class="btn btn-danger" onclick="BOM_Delete()">Delete</button>*@
                                        </span>
                                        <span>
                                            @Html.ActionLink("Back", "Index", "BOM", null, new { @class = "btn btn-info", @id = "btnBack" })
                                        </span>

                                    </div>
                                }
                            </div>
                        </div>
                        <!-- #endregion -->

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@*<div>
        <a asp-action="Index">Back to List</a>
    </div>*@


@section Scripts
    {
    <script>





        function Products_save() {

            if ($("#MProductName").val().length < 6) {
                toastr.info("Product Name at least 6 charecter long");
                return false;
            }

            if ($("#MCategoryId").val()=="") {
                toastr.info("Provie Category");
                return false;
            }

            if ($("#MSubCategoryId").val()=="") {
                toastr.info("Provie Sub Category");
                return false;
            }

            if ($("#MUnitId").val()=="") {
                toastr.info("Provie Unit");
                return false;
            }

            ///alert('save 2');

            var Product = {
                "userid": "", "useridUpdate": "", "DateAdded": "", "DateUpdated": "", "comid": "0",
                "ProductId": "", "ProductName": "", "CategoryId": "","ProductMainGroupId":"", "Description": "", "CostPrice": "", "SalePrice": "", "RetailerPrice": "", "ReorderLevelOne": "", "MinimumOrderQty": "", "CountryId": "", "ProductBarcode": "", "vatPercentage": "",
                "vatAmount": "", "ProductBrand": "", "ProductModel": "", "UnitId": "", "SubCategoryId": "", "ProductImage": "", "FileExtension": "", "ImagePath": "", "ProductCode": "", "AccIdInventory": "", "AccIdConsumption": ""
                //"InventorySubs": []
            };



            Product.userid = "";


            Product.useridUpdate = "";
            Product.DateAdded = "";
            Product.DateUpdated = "";

            Product.ProductId = 0;
            Product.ProductName = $("#MProductName").val();
            Product.CategoryId = $("#MCategoryId").val();
            Product.ProductMainGroupId = "";



            Product.Description = "";
            Product.CostPrice =  0;

            Product.SalePrice =  0;
            Product.RetailerPrice =  0;
            Product.ReorderLevelOne =  0;
            Product.MinimumOrderQty =  0;


            Product.CountryId = "18"; // for BDT
            Product.ProductImage ="";

            Product.FileExtension = "";
            Product.ImagePath = "";



            Product.ProductCode = "New Product";
            Product.AccIdInventory = "";
            Product.AccIdConsumption = "";


            Product.ProductBarcode ="";
            Product.vatPercentage =  0;


            Product.vatAmount = 0;
            Product.ProductBrand = $("#ProductBrand").val();
            Product.ProductModel = $("#ProductModel").val();
            Product.UnitId = $("#UnitId").val();
            Product.SubCategoryId = $("#MSubCategoryId").val();


            $.ajax({
                url: '@Url.Action("CreateProduct", "PurchaseRequisition")',
                type: 'POST',
                dataType:'JSON',
                data: {product: Product},
                success: function (result) {
                    if (result.Success == "1") {
                        $("#ProductId").append(`<option value="${result.data.ProductId}">${result.data.ProductName}</option>`);
                        customFile("1", result.ex);
                    }
                     else {
                        customFile(result.Success, result.ex);
                     }
                },
                error: function (ex) {
                    toastr.error("Something wrong")
                }
            });
        }

        function ConfirmDialogDelete(message) {
            $('<div></div>').appendTo('body')
                .html('<div><h6>' + message + '?</h6></div>')
                .dialog({
                    modal: true,
                    title: 'Delete message',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 'auto',
                    resizable: false,
                    buttons: {
                        Yes: function () {

                            // $(obj).removeAttr('onclick');
                            // $(obj).parents('.Parent').remove();

                            //$('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');

                            $(this).dialog("close");
                            BOM_Delete();

                        },
                        No: function () {
                            //$('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                            $(this).dialog("close");
                        }
                    },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
        };


        function BOM_Delete() {
            var StoreReqId = $('#PurReqId').val();
            //alert(VoucherId);

            antiForgeryToken = $("input[name='GTR_ANTIFORZERY']").val();

             $.ajax({
                 @*url: '@Url.Action("Delete", "Acc_Voucher")',
                 data: JSON.stringify({ id: id }),
                type: 'POST',
                contentType:false,
                dataType: false,*@


                 headers: { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },



                type: 'POST',
                url: '@Url.Action("Delete", "PurchaseRequisition")',
                dataType: 'json',
                async: 'true',
                 data: { id: StoreReqId },


                 //async: 'true',
                @*url: '@Url.Action("Delete", "Acc_Voucher")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: VoucherId }), //use id here
                //data: JSON.stringify(Acc_VoucherMain),
                type: 'POST',
                async: false,

                dataType: 'json',*@
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "PurchaseRequisition")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
        }

        //$('#ReqDate').val(CurrentDate());
        //$('#BoardMeetingDate').val(CurrentDate());
        //$('#RequiredDate').val(CurrentDate());

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
            return val;

        }

        //$("#ReqDate,#BoardMeetingDate,#RequiredDate").datepicker({
        //    onSelect: function (date) {
        //        // Your CSS changes, just in case you still need them
        //        $('a.ui-state-default').removeClass('ui-state-highlight');
        //        $(this).addClass('ui-state-highlight');
        //        var dateFormat = $("#ReqDate").datepicker("option", "dateFormat");
        //        //setter
        //        $("#ReqDate").datepicker("option", "dateFormat", 'dd-MM-yy');
        //    }
        //});

        var tblBOM;
        var antiForgeryToken
        var selectedItem;
        var isdelete = false;

        $(document).ready(function () {
            antiForgeryToken = $("input[name='GTR_ANTIFORZERY']").val();


            $("#ProductId").select2();
            $("#InvProductId").select2();
            $("#WarehouseId").select2();
            $("#PrdUnitId").select2();
            //$("#CategoryId").select2();
            //$("#PurposeId").select2();
            //$("#DepartmentId").select2();
            //$("#PrdUnitId").select2();
            //$("#SectId").select2();



             @*$.ajax({
                url: '@Url.Action("GetProducts", "PurchaseRequisition")',
                 headers: { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },

                type: 'GET',
               // contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    createSelectList(result.item);
                }
             });*@

            var mode = $("#mode").val();
            if (mode == "Edit" || mode == "Delete") {
                $("#tblDiv").show();
                           }
            else {
                $("#tblDiv").hide();
                // $("#UpBtn").hide();
            }

            tblBOM = $('#tblBOM').DataTable({
                "aoColumns": [
                    { "sClass": "BOMSubId", "visible": false },
                    { "sClass": "InvProductId", "visible": false },
                    { "sClass": "productname", "visible": true },
                    { "sClass": "Consumption", "visible": true },
                    { "sClass": "Remarks", "visible": false },
                    { "sClass": "Action", "visible": false },
                    { "sClass": "SLNo", "visible": false },
                    { "sClass": "WarehouseId", "visible": false },
                    { "sClass": "Warehouse", "visible": true },
                ],
                rowCallback: function (row) {
                    $(row).addClass('txtProduct');
                },
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false,
                "paging": false,
                select: true,
                select: 'single'
            }).draw();

            @*$('#ProductId').change(function () {
                var productid = $('#ProductId option:selected').val();
                $.ajax({
                    url: '@Url.Action("GetProductInfo", "PurchaseRequisition")',
                    type: 'POST',
                    dataType: 'json',
                    data: { id: productid },
                    success: function (data, status, xhr) {
                        if (status == 'success') {
                            //console.log(data);

                            $('#PurReqSubId').val(0);

                            $('#ProductBrand').val(data.ProductBrand);
                            $('#ProductModel').val(data.ProductModel);
                            $('#UnitId').val(data.UnitName);
                            $('#LastPurchasePrice').val(data.LastPurchasePrice);

                        };
                    },

                });
            });*@

            //$('#CategoryId').change(function () {

            //    cascadeproduct();
            //});

        });

        function createSelectList(selItem) {

            $('#ProductId').append(new Option("Select Product", "-1"));
            for (var i = 0; i < selItem.length; ++i) {
                optionValue = selItem[i].Value;
                optionText = selItem[i].Text;
                $('#ProductId').append(new Option(optionText, optionValue));

            }

        }

       // cascadeproduct();

        function cascadeproduct(selItem) {

                    var CategoryId = $('#CategoryId option:selected').val();
                    $.ajax({
                    url: '@Url.Action("GetProducts", "PurchaseRequisition")',
                    type: 'POST',
                    dataType: 'json',
                    data: { id: CategoryId },
                        success: function (data, status, xhr) {
                            $("#ProductId option").remove();

                            createSelectList(data.item)
                            if (selectedItem!=null) {
                                $("#ProductId").val(selectedItem).change();
                            }
                            //selectedItem = null;
                        }

                    });

        }

        function SelectEmployee(selItem) {
            for (var i = 0; i < selItem.length; ++i) {
                optionValue = selItem[i].EmpId;
                optionText = selItem[i].EmpCode+' '+ selItem[i].EmpName;
                $('#ProductId').append(new Option(optionText, optionValue));

            }

        }


        function Add() {
            var qty = $('#ConsumptionQty').val();

            var prdid = $('#InvProductId').val();
            if (prdid < 1) {
                toastr.error('Please Select the Item');
                return true;
            }

            if (qty != "") {
                $("#tblDiv").show();
                $("#QtySpan").text('');
                var oTablerequisitionSub = $('#tblBOM').dataTable().fnGetData();
                //var oTablerequisition = $('#tblBOM').DataTable();

                //if (oTablerequisitionSub.length > 0) {
                //    //oTablerequisition.rows().every(function () {
                //    //    var productidtd = this.data()[2];
                //    //    if (prdid == productidtd) {
                //    //        toastr.error('Multiple requisition of same product is not allowed');
                //    //        return;
                //    //    }
                //    //});
                //    // }
                //   for (var i = 0; i < oTablerequisitionSub.length; i++) {
                //        var item = oTablerequisitionSub[i][2];
                //        //alert(item)
                //        if (prdid==item) {
                //            toastr.error('Multiple requisition of same product is not allowed');
                //            return;
                //        }
                //    }
                //}

                if ($.fn.DataTable.isDataTable('#tblBOM')) {
                    var ifExist = false;


                        if (tblBOM.rows('.selected').any()) {
                                for (var i = 0; i < oTablerequisitionSub.length; i++) {
                                    var item = oTablerequisitionSub[i][1];
                                    //alert(item)
                                    if (prdid == item) {
                                        var ind2 = tblBOM.row('.selected').index();
                                        if (i != ind2) {
                                            toastr.error('Multiple BOM of same product is not allowed');
                                            ifExist = true;
                                            return;
                                        }
                                    }
                                }

                                if (ifExist == false) {

                                    tblBOM
                                        .rows({ selected: true })
                                        .every(function (rowIdx, tableLoop, rowLoop) {
                                            //tblBOM.cell(rowIdx, 0).data("");
                                            //tblBOM.cell(rowIdx, 1).data($('#CategoryId').val());
                                            tblBOM.cell(rowIdx, 1).data($('#InvProductId').val());
                                            //tblBOM.cell(rowIdx, 3).data($('#UnitId').val());
                                            tblBOM.cell(rowIdx, 2).data($('#InvProductId option:selected').text());
                                            //tblBOM.cell(rowIdx, 5).data($('#ProductBrand').val());
                                            //tblBOM.cell(rowIdx, 6).data($('#ProductModel').val()); tblBOM.cell(rowIdx, 10).data(false);
                                            tblBOM.cell(rowIdx, 3).data($('#ConsumptionQty').val());
                                            //tblBOM.cell(rowIdx, 8).data($('#LastPurchasePrice').val());
                                            tblBOM.cell(rowIdx, 4).data($('#Note').val());
                                            tblBOM.cell(rowIdx, 5).data('<a data-itemId="0" href="#" class="dlttrash deleteItem" > <i class="fa fa-trash"></i></a > ');
                                            
                                            tblBOM.cell(rowIdx, 7).data($('#WarehouseId').val());
                                            
                                            tblBOM.cell(rowIdx, 8).data($('#WarehouseId option:selected').text());
                                        })

                                        .draw();

                                    tblBOM.$('tr.selected').removeClass('selected');


                                    $("#addBtn").text("Add");
                                    $("#Cancel").remove();

                                }

                    }
                        else {
                            for (var i = 0; i < oTablerequisitionSub.length; i++) {
                                var item = oTablerequisitionSub[i][1];
                                //alert(item)
                                if (prdid == item) {
                                    toastr.error('Multiple product of same BOM is not allowed');
                                    //ifExist = true;
                                    return;
                                }

                            }
                            tblBOM.draw();
                            var i = 0;
                            $('#tblBOM').dataTable().fnAddData([
                                $("#BOMSubId").val(),
                                $('#InvProductId option:selected').val(),
                                $('#InvProductId option:selected').text(),
                                $('#ConsumptionQty').val() || 0,
                                $('#Note').val(),
                                '<a data-itemId="0" href="#" class="dlttrash deleteItem" > <i class="fa fa-trash"></i></a > ',
                                '',
                                $('#WarehouseId option:selected').val(),
                                $('#WarehouseId option:selected').text(),
                            ]);
                            //tblBOM = $('#tblBOM').DataTable();
                            //$("#addBtn").text("Add");
                            //tblBOM.draw();
                        }
                        tblBOM = $('#tblBOM').DataTable();

                    //$('#ProductBrand').val("");
                    //    $('#ProductModel').val("");
                    $('#ConsumptionQty').val("");
                   // $('#LastPurchasePrice').val("");

                        $('#Note').val("");
                }


            }
            else {
                $("#QtySpan").text('Please Fill Up the Qty.');
                toastr.error('Please Fill Up the Qty.');
            }
        };

        function BOM_Save() {


            var assembleName = $('#AssembleName').val();

            if (assembleName.length < 1) {

                //$("#SRNoSpan").text('Fill Requisition No.');
                toastr.error('Fill Assemble Name');
                return false;
            }

            var BOMMain = {
                "BOMMainId": 0, "ProductId": 0, "AssembleName": "", "Remarks": "", "ComId": "", "UserId": "", "AddedbyUserId": "", "DateAdded": "","DateUpdated": "",
                "PrdUnitId": "","BOMSubs": []
            };

            BOMMain.BOMMainId = $('#BOMMainId').val();
            BOMMain.ProductId = $('#ProductId').val();
            BOMMain.PrdUnitId = $('#PrdUnitId').val();
            BOMMain.AssembleName = $('#AssembleName').val();
            BOMMain.Remarks = $('#Remarks').val();
            BOMMain.ComId = $('#ComId').val();
            BOMMain.UserId = $('#UserId').val();
            BOMMain.DateAdded = $('#DateAdded').val();

            var oTablerequisitionSub = $('#tblBOM').dataTable().fnGetData();

            if (oTablerequisitionSub.length == 0) {
                alert('Please Fill Necessary Data.');
                return false;
            };
            for (var i = 0; i < oTablerequisitionSub.length; i++) {

                var BOMSub = {
                    "BOMSubId": "", "BOMMainId": "", "InvProductId": "", "Consumption": 0, "Remarks": "","SLNo": "","WarehouseId": "",
                    "AddedbyUserId": "", "DateAdded": "", "UpdatedbyUserId": "", "DateUpdated": "",
                    "ComId": "", "UserId": ""
                };

                BOMSub.BOMMainId = $("#BOMMainId").val()||0;
                BOMSub.BOMSubId = oTablerequisitionSub[i][0];
                BOMSub.InvProductId = oTablerequisitionSub[i][1];
                
                BOMSub.Consumption = oTablerequisitionSub[i][3];
                BOMSub.Remarks = oTablerequisitionSub[i][4];
                BOMSub.SLNo = oTablerequisitionSub[i][6];
                BOMSub.ComId = $('#ComId').val();
                BOMSub.UserId = $('#UserId').val();
                BOMSub.WarehouseId = oTablerequisitionSub[i][7];                
                BOMMain.BOMSubs.push(BOMSub);
            };

            //console.log(BOMMain);

            $.ajax({
                url: '@Url.Action("Create", "BOM")',
                type: 'POST',
                data: { bOMMain: BOMMain},
                headers: { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },
               // contentType: 'application/json',
                dataType: 'JSON',
                success: function (result) {
                    //console.log(result);
                    //alert('Data Save Successfully');
                    if (result.Success == 1) {
                        toastr.success("Data Save Successfully")
                        window.location.href = '@Url.Action("Index", "BOM")';
                    } else if (result.Success == 2) {
                        toastr.success("Data Update Successfully")
                         window.location.href = '@Url.Action("Index", "BOM")';
                    }
                    if (result.error==1) {
                        alert(result.ex);
                    }
                },
                error: function (err) {
                    console.log(err)
                    alert(err);
                }
            });
        };

        $('#tblBOM tbody').on('click', 'tr', function () {
            if ($.fn.DataTable.isDataTable('#tblBOM')) {

                tblBOM
                    .on('select', function (e, dt, type, indexes) {

                        $("#addBtn").text("Modify");
                        if ($("#spn").children('#Cancel')) {
                            $("#spn").children('#Cancel').remove();
                            $("#spn").append('<button type="button" id="Cancel" class="btn btn-danger cancel">Cancel</button>');
                        }
                        else {
                            $("#spn").append('<button type="button" id="Cancel" class="btn btn-danger cancel">Cancel</button>');
                        }


                        var f = tblBOM.rows('.selected').data();
                        //console.log(f[0][2]);

                        selectedItem = `${f[0][1]}`;

                        //$('#CategoryId').val(`${f[0][1]}`).change();

                        $('#InvProductId').val(`${f[0][1]}`).change();
                        $('#ConsumptionQty').val(`${f[0][3]}`).change();
                        $('#Note').val(`${f[0][4]}`).change();

                        $('#WarehouseId').val(`${f[0][7]}`).change();


                        //$('#Note').val(f[0][8]);
                    })
                    .on('deselect', function (e, dt, type, indexes) {
                        selectedItem = null;
                        $("#addBtn").text("Add");
                        $("#spn").children('#Cancel').remove();
                        $(".cancel").trigger("click");

                    });
            };



            //if ($(this).hasClass('selected')) {
            //    //$("#UpBtn").show();
            //    $("#addBtn").text("Modify");
            //}
            //else {
            //    table.$('tr.selected').removeClass('selected');
            //    $(this).addClass('selected');
            //}
            //if ($(this).hasClass("selected")) {

            //}
        });

        $('#tblBOM tbody').on('click', '.dlttrash', function () {
            var d = $(this).data();
            var i = this.parentNode.parentNode;
            var mode = $("#mode").val();
            if (mode == "Edit") {

                var prsubid = d["html"];
                if (prsubid != null) {
                    var l = $(this).parent().parent().index();
                    tblBOM.cell(l, 11).data(true);
                    $(this).parent().parent().hide();
                }
                else {
                    var table = $('#tblBOM').DataTable();
                    table.row($(this).parents('tr')).remove().draw();
                    if ($("#spn").children('#Cancel')) {
                        $("#spn").children('#Cancel').remove();
                    }
                    $("#addBtn").text("Add");
                    var x = "500.00";
                    var y = $('#tblBOM').height();
                    var z = parseFloat(x) + parseFloat(y);
                    $('html, body').animate({ scrollTop: z }, 500);
                }
            }
            else {
                var table = $('#tblBOM').DataTable();
                table.row($(this).parents('tr')).remove().draw();
                if ($("#spn").children('#Cancel')) {
                    $("#spn").children('#Cancel').remove();
                }
                $("#addBtn").text("Add");
                var x = "500.00";
                var y = $('#tblBOM').height();
                var z = parseFloat(x) + parseFloat(y);
                $('html, body').animate({ scrollTop: z }, 500);
            }

        });

        $(document).on('click','.cancel',function () {
            if ($.fn.DataTable.isDataTable('#tblBOM')) {
                if (tblBOM.rows('.selected').any()) {
                    $('#tblBOM tr.selected').removeClass('selected');
                }
                $("#addBtn").text("Add");
                $(this).remove();
                 //$('#CategoryId').val("0").change();
                        $('#ProductId').val("-1").change();
                        //$('#ProductBrand').val("");
                        //$('#ProductModel').val("");
                        //$('#ConsumptionQty').val("");
                        //$('#Note').val("");
            }


        });

    </script>
}