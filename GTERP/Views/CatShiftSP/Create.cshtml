@model GTERP.Models.HR_Cat_Shift_SP

<style>
    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("Create", "CatShiftSP", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="hidden" asp-for="SP_ShiftId" />
    <div class="container">
        <div class="row">
            <div class="col-md-10 offset-1 col-12">
                @if (Model != null)
                {
                    <input type="hidden" id="ShiftId" name="ShiftId" value="@Model.ShiftId" />
                }
                else
                {
                    <input type="hidden" asp-for="ShiftId" value="0" />
                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext"> Special Shift - @ViewBag.Title</h4>
                        </div>

                        <div class="card-body">
                            <form class="needs-validation" novalidate>
                                <div class="container">
                                    <input type="hidden" asp-for="ComId" />
                                   
                                    <div class="row">
                                        
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Shift Name
                                                    </span>
                                                </div>
                                                <input value="@ViewBag.ShiftName" readonly class="form-control"/>
                                               
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftIn)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftIn, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.ShiftIn, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftOut)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftOut, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.ShiftOut, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftLate)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftLate, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.ShiftLate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.RegHour)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.RegHour, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.RegHour, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftDate)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftDate, new { htmlAttributes = new { @class = "form-control", @type = "text" ,@id="ShiftDate"} })
                                                @Html.ValidationMessageFor(model => model.ShiftDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </form>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />

                                        @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                        @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="Shift_delete()">Delete</button>
                                    }


                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "Index", "CatShiftSP", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>


    </div>

}

@section Scripts{
    <script>
        $("#ShiftDate").datepicker({
            changeMonth: true,
            changeYear: true,
            onSelect: function (date) {
                // Your CSS changes, just in case you still need them
                $('a.ui-state-default').removeClass('ui-state-highlight');
                $(this).addClass('ui-state-highlight');
                var dateFormat = $("#ShiftDate").datepicker("option", "dateFormat");
                //setter
                $("#ShiftDate").datepicker("option", "dateFormat", 'dd-M-yy');
            }
        });
        //$('.timepicker').timepicker({
        //    timeFormat: 'h:mm p',
        //    interval: 60,
        //    minTime: '10',
        //    maxTime: '6:00pm',
        //    defaultTime: '11',
        //    startTime: '08:00',
        //    dynamic: false,
        //    dropdown: true,
        //    scrollbar: true
        //});
        $(".timepicker").timepicker({

            timeFormat: 'HH:mm',
            interval: 15,

            dynamic: true,
            dropdown: true,
            scrollbar: true

        });
    $("#SP_ShiftId").select2();

    function Shift_delete() {

        var SP_ShiftId = $("#SP_ShiftId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteShiftSP", "CatShiftSP")',

                data: JSON.stringify({ id: SP_ShiftId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "3") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("Index", "CatShiftSP")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
