@model IEnumerable<GTERP.Models.BuyerGroup>

<div class="container-fluid">
    <div class="row text-center mb-2">

        <div class="col-md-2 col-12">
            @Html.ActionLink("Buyer Group Creation", "CreateBuyerGroups", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })
            @*<button id="btnRpt" class="btn btn-outline-info btn-block">Generate Report</button>*@
        </div>

        <div class="col-md-2 col-12">
            <button id="btnRpt" class="btn btn-outline-info btn-block rounded-0">Generate Report</button>
        </div>
   
        <div class="col-md-3 col-12">
            <h2 id="styletext">Buyer Group List</h2>
        </div>
        <div class="col-md-5">

        </div>

    </div>


    <div class="card p-2">
        <div class="table-responsive">
            <table id="tbllist" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                <thead class="">
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.BuyerGroupName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BuyerGroupCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BuyerGroupShortName)
                        </th>

                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.BuyerGroupName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BuyerGroupCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BuyerGroupShortName)
                            </td>
                            <td>
                                <span data-toggle="tooltip" title="Edit!">
                                    @Html.ActionLink(" ", "EditBuyerGroups", new { id = item.BuyerGroupId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                </span>
                                <span data-toggle="tooltip" title="Delete!">
                                    @Html.ActionLink(" ", "DeleteBuyerGroups", new { Id = item.BuyerGroupId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                </span>

                                <span data-toggle="tooltip" title="Master LC Report">
                                    @Html.ActionLink(" ", "GenerateReport", new { id = 1 }, new { @class = "fas fa-edit btn btn-success btn-xs", @target = "_blank" })

                                    @*@Html.ActionLink("Get Report", "GenerateReport", "BuyerGroups")*@
                                    @*@Html.ActionLink("Print", "PrintMLCSC", "COM_MasterLC", new { Id = item.MasterLCID, type = "pdf" })*@

                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <br />
    </div>

    @*<label>User</label>
        <input type="text" id="userid" value="" class="form-control" />
        <br>
        <label>User</label>
        <input type="text" id="comid" value="" class="form-control" />
        <br>
        <input type="button" id="btnrpt" value="Report" />*@



</div>



@section Scripts{

    <script>
        $(document).ready(function () {

            var table = $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                columns: [
                { name: 'Group', "sClass": "Group", "visible": true },
                { name: 'Code' , "sClass": "Code", "visible": true},
                { name: 'ShortName' , "sClass": "ShortName", "visible": true },
                { name: 'Action', "sClass": "Action", "visible": true }
                ],
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        //{
                        //    extend: 'copy',
                        //    text: '<i class="mdi mdi-content-copy"></i>',
                        //    className: 'btn-primary',
                        //    titleAttr: 'Copy to Clipboard'
                        //},
                        //{
                        //    extend: 'csv',
                        //    text: '<i class="mdi mdi-note-outline"></i>',
                        //    className: 'btn-secondary',
                        //    titleAttr: 'Export to csv'

                        //},
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        }

                    ]
                },
                "searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 20,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                }
                ////"fixedColumns": {
                ////    "leftColumns": 2,

                ////},
                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });

            //table.column( 0 ).name( 'Group' ); // for setting the column name by index


            //var allData = table.columns().data();
            //console.log(allData);
            //var columns = table.settings().init().columns;
            //table.columns().every(function(index) { 
            //    console.log(columns[index].name);

            //    console.log(table.columns([index]).data());
            //})   


            var Groupdata = table.columns(['.Group']).data();
            var oTablevouchrSubGroup = table.column('Group:name').data();
            
            console.log(oTablevouchrSubGroup);



            //alert(allData);



 
            //// Get salary column data
            //var oTablevouchrSubGroup = table.column('Group:name').data();
            //var oTablevouchrSubCode = table.column('Code:name').data();

            ////console.log(oTablevouchrSub);

            //for (var i = 0; i < oTablevouchrSubGroup.length; i++) {

            //    var x = oTablevouchrSubGroup[i];
            //    var y = oTablevouchrSubCode[i];
            //    console.log(x , y );
            //}


        });

        $("#btnRpt").click(
            function GetClientReport() {
                            //alert('clicked');
                //window.open('~/BuyerGroups/GenerateReport', "_blank");
                window.location.href = "/Commercial/GenerateReport", target = "_blank";
            });
                    //$(".search_input").addClass('form-control input-lg col-xs-12');
         //asp-action="GenerateReport" asp-controller="BuyerGroups"


        @*function ReportPrint(btnvalue) {


        $.ajax({
        type: 'POST',
        url: '@Url.Action("SetSession", "BuyerGroups")',
        dataType: 'json',
            async: true,
            data: { action: btnvalue},
            success: function (response) {
              //  window.location.href = response.Url;

                window.open(response.Url, '_blank')
            },
            error: function (ex) {
                alert('Failed.' + ex);
            }

        });

    }*@


    </script>
}

