@model GTERP.Models.OpeningBank



    <style>

        #styletext {
            color: transparent;
            background: #666666;
            -webkit-background-clip: text;
            -moz-background-clip: text;
            background-clip: text;
            text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
            font-weight: 100;
            font-size: 40px;
        }
    </style>



@using (Html.BeginForm("CreateOpeningBanks", "Commercial", FormMethod.Post, new { enctype = "multipart//form-data" }))
{
    
    <div class="container">
        <div class="row">
        <div class="col-md-8 offset-md-2 col-12">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {
            <input type="hidden" id="OpeningBankId" name="OpeningBankId" value="@Model.OpeningBankId" />
        }
        else
        {
            <input type="hidden" id="comid" name="" value="" />
        }
   
        <div class="row">
            <div class="card">
                <div class="card-header">
                    <h4 class="md-3" id="styletext">Opening Bank Entry - @ViewBag.Title</h4>
                </div>
                <div class="card-body">
                    <div class="cal-mb-12 order-md-1">

                        <div class="row">
                            <br />
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.HiddenFor(model => model.OpeningBankId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.LabelFor(model => model.OpeningBankName, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.OpeningBankName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OpeningBankName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.SwiftCode, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.SwiftCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SwiftCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.BranchAddress, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.BranchAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BranchAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.DropDownListFor(x => x.CountryId, new SelectList((IEnumerable<SelectListItem>
                                                  )ViewBag.CountryId, "Value", "Text"), "", htmlAttributes: new { @class = "form-control", id = "CountryId" })
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.BranchAddress2, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.BranchAddress2, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BranchAddress2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <br />
                       
                    </div>
                </div>
                <div class="card-footer">
                    <div class="row text-center m-2">
                        <br />
                        <div class="col-md-2"></div>
                        <div class="col-md-4">
                            @if (ViewBag.Title == "Create")
                            {
                                <input type="submit" value="Save" class="btn btn-primary btn-block rounded-0" />
                            }@if (ViewBag.Title == "Edit")
                            {
                                <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                            }@if (ViewBag.Title == "Delete")
                            {
                                <input type="button" value="Delete" class="btn btn-danger btn-block rounded-0" onclick="OpeningBank()" />
                            }
                        </div>
                        <div class="col-md-4">
                            @Html.ActionLink("Back", "OpeningBanksList", "Commercial", null, new { @class = "btn btn-info btn-block rounded-0" })
                        </div>
                        <div class="col-md-2"></div>
                    </div>
                </div>
            </div>
           
        </div>
    </div>
    </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
    function OpeningBank() {
        var OpeningBankId = $("#OpeningBankId").val();
        $.ajax({
            url: '@Url.Action("DeleteOpeningBanks", "Commercial")',
            data: JSON.stringify({ id: OpeningBankId }),
            type: 'POST',
            contentType: 'application/json;',
            dataType: 'json',
           success: function (result) {
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("OpeningBanksList", "Commercial")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
        });
    }
    </script>

}


