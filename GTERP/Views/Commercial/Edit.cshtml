@model GTERP.Models.COM_ProformaInvoice

@{
    //ViewBag.Title = "Create";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>*@

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 30px;
    }
</style>


@using (Html.BeginForm("Edit", "COM_ProformaInvoice", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="container" style="max-width: 850px;">
    <div class="py-7 text-center">
        @*<img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">*@
        <h2 id="styletext">Proforma Invoice Information</h2>
        <p class="lead"></p>
    </div>
    @*<hr />*@
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (Model != null)
    {

        <input type="hidden" id="PIId" name="PIId" value="@Model.PIId" />
        <input type="hidden" id="Dateadded" name="Dateadded" value="@Model.DateAdded" />
        <input type="hidden" id="Addedby" name="Addedby" value="@Model.Addedby" />
        <input type="hidden" id="comid" name="comid" value="@Model.comid" />
        <input type="hidden" id="userid" name="userid" value="@Model.userid" />





    }
    else
    {
        <input type="hidden" id="comid" name="comid" value="" />
    }


    <div id="modalbodyfahad" class="row card p-4">
        <div class="col mb-12 order-md-1">
            <h4 class="mb-3">Proforma Invoice @ViewBag.Title</h4>
            <form class="needs-validation card p-4" novalidate>
                <div class="row">

                    <br>


                    <div class="col mb-6 mb-3">
                        @Html.LabelFor(model => model.PINatureId, "PI Nature")
                        @Html.DropDownList("PINatureId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PINatureId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col">
                        @Html.LabelFor(model => model.PINo)
                        @Html.EditorFor(model => model.PINo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PINo, "", new { @class = "text-danger" })

                    </div>
                    <div class="col">
                        @Html.LabelFor(model => model.PIDate, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.PIDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PIDate, "", new { @class = "text-danger" })

                    </div>
                    <div class="col mb-6 mb-3">
                        @Html.LabelFor(model => model.PIReceivingDate, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.PIReceivingDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PIReceivingDate, "", new { @class = "text-danger" })

                    </div>

                </div>

                <div class="row">



                    <div class="col-4 mb-6 mb-3">
                        @Html.LabelFor(model => model.RevNo, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.RevNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RevNo, "", new { @class = "text-danger" })


                    </div>
                </div>


                <div class="row">

                    <div class="col-9 mb-6 mb-3">

                        @Html.LabelFor(model => model.CommercialCompanyId, "Concern")
                        @Html.DropDownList("CommercialCompanyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommercialCompanyId, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-3 mb-6 mb-3">

                        @Html.LabelFor(model => model.CurrencyId, "Currency")
                        @Html.DropDownList("CurrencyId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CurrencyId, "", new { @class = "text-danger" })

                    </div>


                </div>
                <div class="row">

                    <div class="col-8 mb-6 mb-3">
                        @Html.LabelFor(model => model.SupplierId, "Supplier")
                        @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-4 mb-6 mb-3">
                        @Html.LabelFor(model => model.ImportPONo, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.ImportPONo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImportPONo, "", new { @class = "text-danger" })


                    </div>
                </div>
                <div class="row">

                    <div class="col mb-3">
                        @Html.LabelFor(model => model.FileNo, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.FileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FileNo, "", new { @class = "text-danger" })

                    </div>



                    <div class="col mb-3">
                        @Html.LabelFor(model => model.LCAF, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.LCAF, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LCAF, "", new { @class = "text-danger" })

                    </div>

                </div>

                <div class="row">

                    <div class="col-4 mb-12 mb-3">

                        @Html.LabelFor(model => model.BankAccountId, "Concern Bank Account")
                        @*@Html.DropDownList("BankAccountId", "-- Select From List --", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("BankAccountId", ViewBag.BankAccountId as List<SelectListItem>, "-- Select From List --", new { id = "BankAccountId", @class = "form-control form-control-sm" })

                        @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-4 mb-12 mb-3">

                        @Html.LabelFor(model => model.OpeningBankId, "Concern Bank")
                        @*@Html.DropDownList("BankAccountId", "-- Select From List --", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("OpeningBankId", ViewBag.OpeningBankId as List<SelectListItem>, "-- Select From List --", new { id = "OpeningBankId", @class = "form-control form-control-sm", @disabled = "disabled" })

                        @Html.ValidationMessageFor(model => model.OpeningBankId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-4 mb-12 mb-3">

                        @Html.LabelFor(model => model.LienBankAccountId, "Suppiler Bank Account")
                        @*@Html.DropDownList("LienBankAccountId", "-- Select From List --", htmlAttributes: new { @class = "form-control" })*@
                        @Html.DropDownList("LienBankAccountId", ViewBag.BankAccountId as List<SelectListItem>, "-- Select From List --", new { id = "LienBankAccountId", @class = "form-control form-control-sm" })

                        @Html.ValidationMessageFor(model => model.LienBankAccountId, "", new { @class = "text-danger" })

                    </div>


                </div>

                @*<div class="row">

                        <div class="col mb-3">
                            @Html.LabelFor(model => model.ItemGroupName, new { htmlAttributes = new { @class = "control-label" } })
                            @Html.EditorFor(model => model.ItemGroupName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemGroupName, "", new { @class = "text-danger" })

                        </div>



                        <div class="col mb-3">
                            @Html.LabelFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "control-label" } })
                            @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })

                        </div>



                    </div>*@


                <div class="row">

                    <div class="col mb-6 mb-3">

                        @Html.LabelFor(model => model.ItemGroupId, "Item Group Name")
                        @Html.DropDownList("ItemGroupId", null, htmlAttributes: new { @class = "form-control" })
                        @*@Html.DropDownListFor(model => model.ItemGroupId, ViewBag.ItemGroupId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "ItemGroupId", @class = "form-control form-control-sm custom-select" } })*@

                        @Html.ValidationMessageFor(model => model.ItemGroupId, "", new { @class = "text-danger" })

                    </div>

                    @*<div class="col mb-6 mb-3">

                            @Html.LabelFor(model => model.ItemDescId, "Item Descripiton")
                            @Html.DropDownList("ItemDescId", null, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.ItemDescId, "", new { @class = "text-danger" })

                        </div>*@
                    @*@Html.DropDownListFor(model => model.ItemDescId, ViewBag.ItemDescId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "ItemDescId", @class = "form-control form-control-sm custom-select" } })*@






                </div>
                <div class="row">

                    <div class="col-9 mb-12 mb-3">

                        @Html.LabelFor(model => model.ItemDescArray, "Item Description")
                        @Html.DropDownList("ItemDescArray", null, htmlAttributes: new { @class = "form-control", @multiple = "multiple" })
                        @*@Html.DropDownList("AllProduct", null, htmlAttributes: new { @class = "form-control", @multiple = "multiple" })*@
                        @*@Html.DropDownListFor(model => model.ItemGroupId, ViewBag.ItemGroupId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "ItemGroupId", @class = "form-control form-control-sm custom-select" } })*@

                        @Html.ValidationMessageFor(model => model.ItemDescArray, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-3 mb-3">
                        @Html.LabelFor(model => model.Size, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })

                    </div>

                </div>
                <div class="row">
                    <div class="col mb-6 mb-3">

                        @Html.LabelFor(model => model.GroupLCId, "Group LC")
                        @Html.DropDownList("GroupLCId", null, "-- Select From List --", htmlAttributes: new { @class = "form-control" })

                        @*@Html.DropDownListFor(model => model.ItemDescId, ViewBag.ItemDescId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "ItemDescId", @class = "form-control form-control-sm custom-select" } })*@
                        @Html.ValidationMessageFor(model => model.GroupLCId, "", new { @class = "text-danger" })

                    </div>
                </div>




                <div class="row">

                    @*<div class="col mb-3">
                            @Html.LabelFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "control-label" } })
                            @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })

                        </div>*@
                    @*@Html.DropDownListFor(model => model.EmployeeId, ViewBag.EmployeeId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "EmployeeId", @class = "form-control form-control-sm custom-select" } })*@


                    <div class="col mb-3">
                        @Html.LabelFor(model => model.MerchandiserName, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.MerchandiserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MerchandiserName, "", new { @class = "text-danger" })

                    </div>



                    <div class="col mb-3">
                        @Html.LabelFor(model => model.Remarks, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })

                    </div>



                </div>

                <div class="row">

                    <div class="col mb-3">

                        @Html.LabelFor(model => model.UnitMasterId, "Unit")
                        @Html.DropDownList("UnitMasterId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UnitMasterId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col mb-3">
                        @Html.LabelFor(model => model.ImportQty, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.ImportQty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImportQty, "", new { @class = "text-danger" })

                    </div>

                    <div class="col mb-3">
                        @Html.LabelFor(model => model.CartonRollQty, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.CartonRollQty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CartonRollQty, "", new { @class = "text-danger" })

                    </div>


                    <div class="col mb-3">
                        @Html.LabelFor(model => model.ImportRate, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.ImportRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ImportRate, "", new { @class = "text-danger" })

                    </div>
                    <div class="col mb-3">
                        @Html.LabelFor(model => model.TotalValue, new { htmlAttributes = new { @class = "control-label" } })
                        @Html.EditorFor(model => model.TotalValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalValue, "", new { @class = "text-danger" })

                    </div>

                </div>


                <div class="row">

                    <div class="col mb-3">

                        @Html.LabelFor(model => model.PaymentTermsId, "Payment Terms")
                        @Html.DropDownList("PaymentTermsId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PaymentTermsId, "", new { @class = "text-danger" })

                    </div>


                    <div class="col mb-3">

                        @Html.LabelFor(model => model.DayListId, "Day")
                        @Html.DropDownList("DayListId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DayListId, "", new { @class = "text-danger" })

                    </div>

                </div>


                <div class="row text-center m-2">
                    <br />
                    <div class="col-md-2"></div>
                    <div class="col-md-4 col-xs-12 d-block mx-auto">

                        @if (ViewBag.Title == "Create")
                        {
                            <input type="submit" value="Save" class="btn btn-primary btn-block" />

                            @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                        }
                        else if (ViewBag.Title == "Edit")
                        {
                            <input type="submit" value="Update" class="btn btn-warning btn-block" />

                            @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                        }
                        else if (ViewBag.Title == "Delete")
                        {
                            <button class="btn btn-danger btn-block" type="button" onclick="ProformaInvoice_delete()">Delete</button>
                        }


                    </div>
                    <div class="col-md-4 col-xs-12 d-block mx-auto">
                        @Html.ActionLink("Back", "Index", "COM_ProformaInvoice", null, new { @class = "btn btn-info btn-block", @id = "btnBack" })

                    </div>
                    <div class="col-md-2"></div>

                </div>

            </form>
        </div>
    </div>
</div>
}


@section Scripts {

    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script type="text/javascript">


        ConcernBank_Info();

        $("#ItemDescArray").select2();
        $("#GroupLCId").select2();

        $("#CommercialCompanyId").select2();
        $("#ItemGroupId").select2();
        $("#CurrencyId").select2();
        $("#SupplierId").select2();

        $("#LienBankAccountId").select2();
        $("#BankAccountId").select2();

        
        

        $('#ItemDescArray').on('change',function() {
            //alert($(this).val());
            //alert($('#ItemDescArray option:selected').text());

            //console.log($(this).val());


            var selMulti = $.map($("#ItemDescArray option:selected"), function (el, i) {
                return $(el).text();
            });
            //$("#result").text(selMulti.join(", "));
            //alert(selMulti.join(", "));

            //var data = [];
            //var fahad = '';
            //var $el = $("#ItemDescArray");
            //$el.find('option:selected').each(function () {
            //    //data.push({ value: $(this).val(), text: $(this).text() });
            //    data.push({ text: $(this).text() });
            //    fahad = fahad + " ," +$(this).text();


            //});
            //console.log(data);
            //console.log(data.join(", "));
            //alert(data.toString());
            //$("#result").text(selMulti.join(", "));
            //alert(data.join(", "));
            //alert(fahad);



        });

    function ProformaInvoice_delete() {

        var PIId = $("#PIId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("Delete", "COM_ProformaInvoice")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: PIId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "COM_ProformaInvoice")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
        }

        $("#PIDate").datepicker({
            onSelect: function (date) {
                // Your CSS changes, just in case you still need them
                $('a.ui-state-default').removeClass('ui-state-highlight');
                $(this).addClass('ui-state-highlight');
                var dateFormat = $("#PIDate").datepicker("option", "dateFormat");
                //setter
                $("#PIDate").datepicker("option", "dateFormat", 'dd-M-yy');
            }
        });

        $("#PIReceivingDate").datepicker({
            onSelect: function (date) {
                // Your CSS changes, just in case you still need them
                $('a.ui-state-default').removeClass('ui-state-highlight');
                $(this).addClass('ui-state-highlight');
                var dateFormat = $("#PIReceivingDate").datepicker("option", "dateFormat");
                //setter
                $("#PIReceivingDate").datepicker("option", "dateFormat", 'dd-M-yy');
            }
        });

        // $(document).ready(function () {
        //    ProformaInvoice_delete();

        //})


           function ConcernBank_Info() {
            $("#OpeningBankId").empty();

                    var MyAppUrlSettings = {
                    MyUsefulUrl : '@Url.Action("ConcernOpeningBankList", "COM_MasterLC")'
                    }

                    $.ajax({
                    type: 'POST',
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: 'json',
                    async: false,
                        data: { id: $("#BankAccountId").val() },

                        success: function (data) {
                            var s = '';//'<option value="-1">Please Select Product</option>';

                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            }
                            $("#OpeningBankId").html(s);
                        },
                        error: function (ex) {
                           // alert('Failed.' + ex);
                        }
                    });
                    return false;
             };

                 $('#BankAccountId').select2({})
                .on("select2:select", function (e) {
                    if ($('#BankAccountId').val() > 0) {

                        //ConcernBankAccount_Info();
                        //alert($("#BankAccountId").val());
                        ConcernBank_Info();
                    }
                    else {
                        alert('Please Select Bank Account First.')
                    }

                    // have to fire our own change event because value set in JS
                    // TODO capture ahead of time instead of using default
                    //$(this).trigger('change');
                    console.log("select2:select")
            });




        $('#CommercialCompanyId').select2({})
            .on("select2:select", function (e) {
                if ($('#CommercialCompanyId').val() > 0) {

                    //ConcernBankAccount_Info();
                    //alert($("#BankAccountId").val());
                    ConcernBank_Account();
                }
                else {
                    alert('Please Select Concern Information First.')
                }

                // have to fire our own change event because value set in JS
                // TODO capture ahead of time instead of using default
                //$(this).trigger('change');
                console.log("select2:select")
            });



        function ConcernBank_Account() {
            $("#BankAccountId").empty();

                    var MyAppUrlSettings = {
                    MyUsefulUrl : '@Url.Action("ConcernOpeningBankAccountList", "COM_MasterLC")'
                    }

                    $.ajax({
                    type: 'POST',
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: 'json',
                    async: false,
                        data: { id: $("#CommercialCompanyId").val() },

                        success: function (data) {
                            var s = '';//'<option value="-1">Please Select Product</option>';

                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            }
                            $("#BankAccountId").html(s);
                        },
                        error: function (ex) {
                           // alert('Failed.' + ex);
                        }
                    });
                    return false;
        };


        function SupplierBank_Info() {
            //alert('test');
            $("#LienBankAccountId").empty();

                    var MyAppUrlSettings = {
                    MyUsefulUrl : '@Url.Action("SupplierBankList", "COM_MasterLC")'
                    }

                    $.ajax({
                    type: 'POST',
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: 'json',
                    async: false,
                        data: { id: $("#SupplierId").val() },

                        success: function (data) {
                            var s = '<option value=null>-- Select From List--</option>';

                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            }
                            $("#LienBankAccountId").html(s);
                        },
                        error: function (ex) {
                            //alert('Failed.' + ex);
                        }
                    });
                    return false;
             };

                 $('#SupplierId').select2({})
                .on("select2:select", function (e) {
                    if ($('#SupplierId').val() > 0) {

                        //ConcernBankAccount_Info();
                        //alert($("#BankAccountId").val());
                        SupplierBank_Info();
                    }
                    else {
                        alert('Please Select Supplier First.')
                    }

                    // have to fire our own change event because value set in JS
                    // TODO capture ahead of time instead of using default
                    //$(this).trigger('change');
                    console.log("select2:select")
            });


    </script>
}
