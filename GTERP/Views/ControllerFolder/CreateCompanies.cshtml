
@model GTERP.Models.Company

<style>
</style>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">


</head>

<body>
    @*@using (Html.BeginForm("Create", "Companies", FormMethod.Post))*@
    @using (Html.BeginForm("CreateCompanies", "ControllerFolder", FormMethod.Post, new { id = "myForm", enctype = "multipart/form-data" }))
    {
        @*@Html.AntiForgeryToken()*@

        <div class="container" style="max-width: 900px;">
            <div class="py-7 text-center">
                <img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">
                <h2>Company Entry</h2>
                <p class="lead"></p>
            </div>
            @*<hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null)
            {

                <input type="hidden" id="ComId" name="ComId" value="@Model.ComId" />
                <input type="hidden" id="ComId" name="CompanySecretCode" value="@Model.CompanySecretCode" />

            }



            <div id="modalbodyfahad" class="row card p-4">
                <div class="col-md-12 order-md-1">
                    <h4 class="mb-3">Company Information</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="needs-validation card p-4" novalidate>
                        @if (ViewBag.comUpdate == "Edit")
                        {
                            <div class="row">

                                <div class="col mb-3">
                                    
                                    <input type="hidden" asp-for="AppKey" value="@Model.AppKey" />
                                    @Html.ValidationMessageFor(model => model.AppKey, "", new { @class = "text-danger" })
                                </div>

                                <div class="col mb-3">
                                    
                                    <input type="hidden" asp-for="CompanySecretCode" value="@Model.CompanySecretCode" />
                                    @Html.ValidationMessageFor(model => model.CompanySecretCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row">

                                <div class="col mb-3">
                                    @*@Html.LabelFor(model => model.AppKey)*@
                                    @Html.HiddenFor(model => model.AppKey, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.AppKey, "", new { @class = "text-danger" })
                                </div>

                                <div class="col mb-3">
                                    @*@Html.LabelFor(model => model.CompanySecretCode)*@
                                    @Html.HiddenFor(model => model.CompanySecretCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CompanySecretCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        }






                        <div class="row">

                            <br>

                            @*@Html.LabelFor(model => model.CompanyCode)*@
                            @Html.HiddenFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })


                            @if (ViewBag.comUpdate == "Edit")
                            {
                                <div>
                                    @*@Html.HiddenFor(model => model.CompanySecretCode)
                                        @Html.HiddenFor(model => model.AppKey)*@
                                    <input type="hidden" asp-for="CompanyCode" value="@Model.CompanyCode" />
                                    @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })

                                </div>
                            }

                           
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.CompanyName)

                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.CompanyShortName)

                                @Html.EditorFor(model => model.CompanyShortName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyShortName, "", new { @class = "text-danger" })

                            </div>
                        </div>



                        <div class="row">

                            <br>
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.PrimaryAddress)
                                @Html.EditorFor(model => model.PrimaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PrimaryAddress, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.SecoundaryAddress)

                                @Html.EditorFor(model => model.SecoundaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SecoundaryAddress, "", new { @class = "text-danger" })

                            </div>
                        </div>



                        <div class="row">

                            <br>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.CompanyNameBangla)
                                @Html.EditorFor(model => model.CompanyNameBangla, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyNameBangla, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.CompanyAddressBangla)
                                @Html.EditorFor(model => model.CompanyAddressBangla, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompanyAddressBangla, "", new { @class = "text-danger" })

                            </div>

                        </div>


                        <div class="row">

                            <br>
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.comPhone)
                                @Html.EditorFor(model => model.comPhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comPhone, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.comPhone2)

                                @Html.EditorFor(model => model.comPhone2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comPhone2, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.comFax)

                                @Html.EditorFor(model => model.comFax, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comFax, "", new { @class = "text-danger" })

                            </div>

                            <div class="col mb-3">


                                RawDays

                                @Html.EditorFor(model => model.DecimalField, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DecimalField, "", new { @class = "text-danger" })

                            </div>
                        </div>


                        <div class="row">

                            <br>
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.ContPerson)
                                @Html.EditorFor(model => model.ContPerson, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContPerson, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.ContDesig)

                                @Html.EditorFor(model => model.ContDesig, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContDesig, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.comEmail)
                                @Html.EditorFor(model => model.comEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comEmail, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.comWeb)

                                @Html.EditorFor(model => model.comWeb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comWeb, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.BusinessTypeId, "Business Type")

                                @*@Html.DropDownListFor(model => model.BusinessTypeId, "BusinessTypeId", null, htmlAttributes: new { @class = "form-control" })*@


                                <select asp-for="BusinessTypeId" asp-items="@ViewBag.BusinessTypeId" class="form-select form-control" id="BusinessTypeId">
                                    <option value="">--Select --</option>
                                </select>


                                @Html.ValidationMessageFor(model => model.BusinessTypeId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.VoucherNoCreatedTypeId, "Voucher No Created Types")

                                @*@Html.DropDownListFor(model => model.BusinessTypeId, "BusinessTypeId", null, htmlAttributes: new { @class = "form-control" })*@


                                <select asp-for="VoucherNoCreatedTypeId" asp-items="@ViewBag.VoucherNoCreatedTypeId" class="form-select form-control" id="VoucherNoCreatedTypeId">
                                    <option value="">--Select --</option>
                                </select>

                                @Html.ValidationMessageFor(model => model.VoucherNoCreatedTypeId, "", new { @class = "text-danger" })

                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.BaseComId, "Base Company")


                                <select asp-for="BaseComId" asp-items="@ViewBag.CountryId" class="form-select form-control" id="BaseComId">
                                    <option value="">--Select --</option>
                                </select>

                                @Html.ValidationMessageFor(model => model.BaseComId, "", new { @class = "text-danger" })

                            </div>
                            <div class="col mb-3">
                                <div class="col mb-3">
                                    @Html.LabelFor(model => model.CountryId, "Country")


                                    <select asp-for="CountryId" asp-items="@ViewBag.CountryId" class="form-select form-control" id="CountryId">
                                        <option value="">--Select --</option>
                                    </select>
                                    @*@Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })*@


                                    @*@Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })*@

                                </div>
                            </div>


                        </div>



                        <div class="row">

                            
                             <div class="col mb-3">
                                @Html.LabelFor(model => model.IsEPZ)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsEPZ)
                                    @Html.ValidationMessageFor(model => model.IsEPZ, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col mb-3">

                                @Html.LabelFor(model => model.IsGroup)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsGroup)
                                    @Html.ValidationMessageFor(model => model.IsGroup, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col mb-3">

                                @Html.LabelFor(model => model.IsShowCurrencySymbol)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsShowCurrencySymbol)
                                    @Html.ValidationMessageFor(model => model.IsShowCurrencySymbol, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.IsInActive)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsInActive)
                                    @Html.ValidationMessageFor(model => model.IsInActive, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isBarcode)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isBarcode)
                                    @Html.ValidationMessageFor(model => model.isBarcode, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isProduct)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isProduct)
                                    @Html.ValidationMessageFor(model => model.isProduct, "", new { @class = "text-danger" })
                                </div>
                            </div>



                        </div>

                        <div class="row">

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.IsDoller)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsDoller)
                                    @Html.ValidationMessageFor(model => model.IsDoller, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isCorporate)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isCorporate)
                                    @Html.ValidationMessageFor(model => model.isCorporate, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isPOSprint)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isPOSprint)
                                    @Html.ValidationMessageFor(model => model.isPOSprint, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.IsService)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsService)
                                    @Html.ValidationMessageFor(model => model.IsService, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isOldDue)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isOldDue)
                                    @Html.ValidationMessageFor(model => model.isOldDue, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isMultipleWh)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isMultipleWh)
                                    @Html.ValidationMessageFor(model => model.isMultipleWh, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                        <div class="row">



                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isShortcutSale)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isShortcutSale)
                                    @Html.ValidationMessageFor(model => model.isShortcutSale, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isRestaurantSale)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isRestaurantSale)
                                    @Html.ValidationMessageFor(model => model.isRestaurantSale, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isTouch)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isTouch)
                                    @Html.ValidationMessageFor(model => model.isTouch, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isShoeSale)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isShoeSale)
                                    @Html.ValidationMessageFor(model => model.isShoeSale, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isIMEISale)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isIMEISale)
                                    @Html.ValidationMessageFor(model => model.isIMEISale, "", new { @class = "text-danger" })
                                </div>
                            </div>



                        </div>

                        <div class="row">
                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isMultiCurrency)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isMultiCurrency)
                                    @Html.ValidationMessageFor(model => model.isMultiCurrency, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isMultiDebitCredit)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isMultiDebitCredit)
                                    @Html.ValidationMessageFor(model => model.isMultiDebitCredit, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isChequeDetails)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isChequeDetails)
                                    @Html.ValidationMessageFor(model => model.isChequeDetails, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col mb-3">
                                @Html.LabelFor(model => model.isVoucherDistributionEntry)

                                <div class="checkbox">
                                    @Html.EditorFor(model => model.isVoucherDistributionEntry)
                                    @Html.ValidationMessageFor(model => model.isVoucherDistributionEntry, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="row d-flex justify-content-between my-3">
                            <div class="col-4" style="padding-left:20px;margin-bottom:5px;">Company Header Image</div>
                            <div class="col-4" style="padding-left:50px;margin-bottom:5px;">Company Logo</div>
                            <div class="col-4" style="padding-left:60px;margin-bottom:5px;">Company Sign</div>
                        </div>
                        <div class="row">
                            <div class="text-center mb-3 col-4">
                                @Html.HiddenFor(model => model.ComImageHeader, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.HeaderImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.HeaderFileExtension, new { htmlAttributes = new { @class = "form-control" } })

                                @if (Model != null)
                                {
                                    <div style="width:200px;height:100px;margin-bottom:100px;">
                                        @if (Model.ComImageHeader != null)
                                        {
                                            <input type="hidden" asp-for="ComImageHeader" name="ComImageHeader" value="@Model.ComImageHeader" />
                                            if (Model.ComImageHeader == null)
                                            {
                                                <img id='image_X' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                     class="avatar rounded-circle profile image img-thumbnail" alt="avatar"
                                                     multiple style="max-height:150px;" />
                                            }
                                            else
                                            {
                                                <img id='image_X' src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ComImageHeader))"
                                                     class="avatar rounded-circle profile image img-thumbnail " alt="avatar" style="max-height:150px;">
                                            }
                                        }
                                        else
                                        {
                                            <input type="hidden" asp-for="ComImageHeader" name="fileImageHeader" value="0" />
                                            <img id='image_X' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                 class="avatar rounded-circle profile image img-thumbnail" alt="avatar" style="max-height:150px;" />
                                        }
                                    </div>
                                    <div class="row mt-5  ml-1">
                                        <input type="file" class="image-upload" name="fileImageHeader" id="myFile" />
                                        <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    </div>
                                }
                                else
                                {
                                    <img id='image_X' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                         class="avatar rounded-circle profile image img-thumbnail" alt="avatar" width="200" height="100">
                                    <input type="hidden" asp-for="ComImageHeader" name="ComImageHeader" value="0" />
                                    <input type="file" class="image-upload mt-3 pl-4" name="fileImageHeader" id="myFile" />
                                    <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    <br />
                                }
                                @Html.ValidationMessageFor(model => model.ComImageHeader, "", new { @class = "text-danger" })
                            </div>


                            <div class="text-center mb-3 col-4" style="display:flex;flex-direction:column;justify-content:space-between">
                                @Html.HiddenFor(model => model.ComLogo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.ComImageHeader, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.LogoFileExtension, new { htmlAttributes = new { @class = "form-control" } })

                                @if (Model != null)
                                {
                                    <div style="width: 200px; height: 100px; margin-bottom: 100px;">
                                        @if (Model.ComLogo != null)
                                        {
                                            <input type="hidden" asp-for="ComLogo" name="ComLogo" value="@Model.ComLogo" />
                                            if (Model.ComLogo == null)
                                            {
                                                <img id='image_X2' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                     class="avatar rounded-circle profile image img-thumbnail" alt="avatar" multiple style="max-height:150px;" />
                                            }
                                            else
                                            {
                                                <img id='image_X2' src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ComLogo))"
                                                     class="avatar rounded-circle profile image img-thumbnail" alt="avatar" style="max-height:150px;">
                                            }
                                        }
                                        else
                                        {
                                            <input type="hidden" asp-for="ComLogo" name="fileLogo" value="0" />
                                            <img id='image_X2' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                 class="avatar rounded-circle profile image img-thumbnail" alt="avatar" multiple style="max-height:150px;" />
                                        }
                                    </div>
                                    <div class="row ml-1">
                                        <input type="file" class="image-upload" name="fileLogo" id="myFile2" />
                                        <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    </div>
                                }
                                else
                                {
                                    <img id='image_X2' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                         class="avatar rounded-circle profile image img-thumbnail" alt="avatar" width="200">
                                    <input type="hidden" asp-for="ComLogo" name="ComLogo" value="0" />
                                    <input type="file" class="image-upload mt-3 pl-4" name="fileLogo" id="myFile2" />
                                    <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    <br />
                                }
                                @Html.ValidationMessageFor(model => model.ComLogo, "", new { @class = "text-danger" })
                            </div>


                            <div class="text-center mb-3 col-4" style="display:flex;flex-direction:column;justify-content:space-between">
                                @Html.HiddenFor(model => model.ComSign, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.SignImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.SignFileExtension, new { htmlAttributes = new { @class = "form-control" } })

                                @if (Model != null)
                                {
                                    <div style="width: 200px; height: 100px; margin-bottom: 100px;">
                                        @if (Model.ComSign != null)
                                        {
                                            <input type="hidden" asp-for="ComSign" name="ComSign" value="@Model.ComSign" />
                                            if (Model.ComSign == null)
                                            {
                                                <img id='image_X3' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                     class="avatar rounded-circle profile image img-thumbnail" alt="avatar" multiple style="max-height:150px;" />
                                            }
                                            else
                                            {
                                                <img id='image_X3' src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ComSign))"
                                                     class="avatar rounded-circle profile image img-thumbnail" alt="avatar" style="max-height:150px;">
                                            }
                                        }
                                        else
                                        {
                                            <input type="hidden" asp-for="ComSign" name="comSign" value="0" />
                                            <img id='image_X3' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                                 class="avatar rounded-circle profile image img-thumbnail" alt="avatar" multiple style="max-height:150px;" />
                                        }
                                    </div>
                                    <div class="row ml-1">
                                        <input type="file" class="image-upload" name="comSign" id="myFile3" />
                                        <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    </div>
                                }
                                else
                                {
                                    <img id='image_X3' src="http://ssl.gstatic.com/accounts/ui/avatar_2x.png"
                                         class="avatar rounded-circle profile image img-thumbnail" alt="avatar" width="200" height="100">
                                    <input type="hidden" asp-for="ComSign" name="ComSign" value="0" />
                                    <input type="file" class="image-upload mt-3 pl-4" name="comSign" id="myFile3" />
                                    <input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />
                                    <br />
                                }
                                @Html.ValidationMessageFor(model => model.ComSign, "", new { @class = "text-danger" })
                            </div>



                            <br />
                            <br />


                            <table class="ml-3">

                                <tr>

                                    <td>
                                        @if (ViewBag.Title == "Create")
                                        {
                                            <input type="submit" value="Create" class="btn btn-primary btn-block" />

                                            @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                        }
                                        else if (ViewBag.Title == "Edit")
                                        {
                                            <input type="submit" value="Update" class="btn btn-warning btn-block" />

                                            @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                        }
                                        else if (ViewBag.Title == "Delete")
                                        {
                                            <button class="btn btn-danger btn-lg btn-block" type="button" onclick="Companies_delete()">Delete</button>
                                        }

                                    </td>
                                    <td>
                                        @Html.ActionLink("Back", "CompaniesList", "ControllerFolder", null, new { @class = "btn btn-info btn-block ml-2" })

                                    </td>

                                </tr>

                            </table>

                        </div>
                    </div>
                </div>


            </div>



            @*<div class="col mb-3">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>*@
        </div>

    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

    @section Scripts {

        <script type="text/javascript">

         function Companies_delete() {

                var ComId = $("#ComId").val();
                alert(ComId);
                $.ajax({

                    url: '@Url.Action("DeleteCompanies", "ControllerFolder")',
                    data: JSON.stringify({ id: ComId }), //use id here
                    //data: JSON.stringify(salesmain),
                    type: 'POST',
                    async: false,
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (result) {

                        if (result.Success == "1") {
                            window.location.href = '@Url.Action("CompaniesList", "ControllerFolder")';
                        }
                        else {
                            alert(result.ex);
                        }
                    }
                });
        }


        $(document).ready(function () {


        //$('#myFile').bind('change', function () {


        //    var a = this.files[0].size;

        //    if (a >= 6000000) {
        //        alert('File size is too large!! \n 50 KB maximum');
        //        $('#myFile').val('');
        //        document.getElementById('image_X').src = ''

        //    }
        //    else {
        //        //alert('its ok');
        //        previewFile();

        //    }
        //});

        //function previewFile() {
        //    var preview = document.querySelector('#image_X'); //selects the query named img
        //    var file = document.querySelector('input[type=file]').files[0]; //sames as here

        //    var reader = new FileReader();


        //    reader.onloadend = function () {
        //        preview.src = reader.result;
        //    }

        //    if (file) {
        //        reader.readAsDataURL(file); //reads the data as a URL
        //    } else {
        //        preview.src = "";
        //    }
        //}

        })
            $('#myFile').bind('change', function () {

                //this.files[0].size gets the size of your file.

                //  alert(this.files[0].size);

                var a = this.files[0].size;

                if (a >= 6000000) {
                    alert('File size is too large!! \n 50 KB maximum');
                    $('#myFile').val('');
                    document.getElementById('image_X').src = ''
                }
                else {

                    previewFile();
                }
            });

            function previewFile() {
                var preview = document.getElementById("image_X"); //selects the query named img
                var file = document.querySelector('input[type=file]').files[0]; //sames as here
                console.log(preview);
                console.log(file);
                var reader = new FileReader();
                reader.onloadend = function () {
                    preview.src = reader.result;
                }

                if (file) {
                    reader.readAsDataURL(file); //reads the data as a URL
                } else {
                    preview.src = "";
                }
            }

            // comlogo
            $('#myFile2').bind('change', function () {

                //this.files[0].size gets the size of your file.

                //  alert(this.files[0].size);

                var b = this.files[0].size;

                if (b >= 6000000) {
                    alert('File size is too large!! \n 50 KB maximum');
                    $('#myFile2').val('');
                    document.getElementById('image_X2').src = ''
                }
                else {

                    previewFile2();
                }
            });

            function previewFile2() {
                var preview = document.getElementById("image_X2"); //selects the query named img
                var file = document.querySelector('input[name=fileLogo]').files[0]; //sames as here
                console.log(preview);
                console.log(file);
                var reader = new FileReader();
                reader.onloadend = function () {
                    preview.src = reader.result;
                }

                if (file) {
                    reader.readAsDataURL(file); //reads the data as a URL
                } else {
                    preview.src = "";
                }
            }

            // comSign
            $('#myFile3').bind('change', function () {

                //this.files[0].size gets the size of your file.

                //  alert(this.files[0].size);

                var c = this.files[0].size;

                if (c >= 6000000) {
                    alert('File size is too large!! \n 50 KB maximum');
                    $('#myFile3').val('');
                    document.getElementById('image_X3').src = ''
                }
                else {

                    previewFile3();
                }
            });

            function previewFile3() {
                var preview = document.getElementById("image_X3"); //selects the query named img
                var file = document.querySelector('input[id=myFile3]').files[0]; //sames as here
                console.log(preview);
                console.log(file);
                var reader = new FileReader();
                reader.onloadend = function () {
                    preview.src = reader.result;
                }

                if (file) {
                    reader.readAsDataURL(file); //reads the data as a URL
                } else {
                    preview.src = "";
                }
            }


        </script>

    }


</body>
