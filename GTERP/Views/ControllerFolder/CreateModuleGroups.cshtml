@model GTERP.Models.ModuleGroup

<style>
</style>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

</head>

@using (Html.BeginForm("CreateModuleGroups", "ControllerFolder", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @*@Html.AntiForgeryToken()*@

    <div class="container">
        <div class="text-center">
            @*<img class="d-block mx-auto mb-4" src="https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg" alt="" width="72" height="72">*@
            <h2>Module Group Entry</h2>
            <p class="lead"></p>
        </div>
        @*<hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (Model != null)
        {

            <input type="hidden" id="ModuleGroupId" name="ModuleGroupId" value="@Model.ModuleGroupId" />
        }
        else
        {
            <input type="hidden" id="comid" name="comid" value="" />
        }


        <div id="modalbodyfahad" class="row">
            <div class="col-md-8 offset-md-2 col-12 order-md-1">
                <div class="card">
                    <div class="card-header">
                        <h5 class="text-center">Module Group Information</h5>
                    </div>
                    <div class="card-body p-2">
                        <form class="needs-validation" novalidate>
                            <div class="row">
                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ModuleGroupName)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ModuleGroupName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ModuleGroupName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ModuleGroupCaption)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ModuleGroupCaption, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ModuleGroupCaption, "", new { @class = "text-danger" })
                                    </div>


                                </div>
                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ModuleId, "Module")
                                            </span>
                                        </div>
                                        @Html.DropDownList("ModuleId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ModuleId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.SLNo)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.SLNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SLNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            <div class="d-block mx-auto">
                                <div class="col-md-4 offset-md-2">
                                    @Html.HiddenFor(model => model.ModuleGroupImage, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.HiddenFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.HiddenFor(model => model.ImageExtension, new { htmlAttributes = new { @class = "form-control" } })


                                    @Html.LabelFor(model => model.ModuleGroupImage)


                                    @if (Model == null)
                                    {
                                    }
                                    else
                                    {


                                        if (Model.ModuleGroupImage == null)
                                        {

                                            <img src="@Url.Content("uploads/"+0 + ".png")" class="img-thumbnail" multiple />
                                        }
                                        else
                                        {
                                            <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ModuleGroupImage))" class="img-thumbnail">
                                        }
                                    }

                                    @Html.ValidationMessageFor(model => model.ModuleGroupImage, "", new { @class = "text-danger" })
                                    <input type="file" class="image-upload" name="file" id="myFile" />
                                    @*<input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />*@
                                    <br />
                                    <img src="" height="200" id='image_X' alt="Image preview...">
                                    <div class="images">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-12">
                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Create" class="btn btn-primary btn-block rounded-0" />

                                        @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                        @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger rounded-0 btn-block" type="button" onclick="ModuleGroup_delete()">Delete</button>
                                    }

                                </div>
                                <div class="col-md-4 col-12">
                                    @Html.ActionLink("Back", "ModuleGroupsList", "ControllerFolder", null, new { @class = "btn btn-info btn-block rounded-0" })
                                </div>
                                <div class="col-md-2"></div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts{
    <script type="text/javascript">

     function ModuleGroup_delete() {

            var ModuleGroupId = $("#ModuleGroupId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteModuleGroups", "ControllerFolder")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: ModuleGroupId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("ModuleGroupsList", "ControllerFolder")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
    }


    $(document).ready(function () {

        $('#myFile').bind('change', function () {

            //this.files[0].size gets the size of your file.

            //  alert(this.files[0].size);

            var a = this.files[0].size;

            if (a >= 6000000) {
                alert('File size is too large!! \n 50 KB maximum');
                $('#myFile').val('');
                document.getElementById('image_X').src = ''

            }
            else {
                //alert('its ok');
                previewFile();

            }
        });

        function previewFile() {
            var preview = document.querySelector('#image_X'); //selects the query named img
            var file = document.querySelector('input[type=file]').files[0]; //sames as here

            var reader = new FileReader();


            reader.onloadend = function () {
                preview.src = reader.result;
            }

            if (file) {
                reader.readAsDataURL(file); //reads the data as a URL
            } else {
                preview.src = "";
            }
        }

        })

    </script>
}

@*</body>*@


