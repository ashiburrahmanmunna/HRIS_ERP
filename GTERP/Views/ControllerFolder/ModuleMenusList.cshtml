@model IEnumerable<GTERP.Models.ModuleMenu>

    <style>
        .tblSalesList th:first-child, .tblSalesList tbody td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
        }

        .tblSalesList tfoot td:first-child {
        position: sticky;
        left: 0px;
        z-index: 1;
        }


        .tblSalesList th:last-child, .tblSalesList tbody td:last-child {
        position: sticky !important;
        right: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
        }

        .tblSalesList tfoot td:last-child {
        position: sticky;
        right: 0px;
        z-index: 1;
        }

    </style>

<form action="" method="post">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-md-3 col-12">
                @Html.ActionLink("Module Menu Creation", "CreateModuleMenus", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })

            </div>
            <div class="col-md-9 col-12">
                <h2 id="styletext">Module Menu List</h2>
            </div>
        </div>




    <div class="card p-2">
        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table tblSalesList table-striped table-bordered table-hover" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleMenuName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleMenuCaption)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.vModule.ModuleName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.vModuleGroup.ModuleGroupName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.vImageCriteria.ImageCriteriaCaption)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleImagePath)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleImageExtension)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleMenuController)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModuleMenuLink)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.isInactive)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.isParent)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.isCertificate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ParentId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SLNo)
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleMenuName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleMenuCaption)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.vModule.ModuleName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.vModuleGroup.ModuleGroupName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.vImageCriteria.ImageCriteriaCaption)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleImagePath)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleImageExtension)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleMenuController)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModuleMenuLink)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.isInactive)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.isParent)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.isCertificate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ParentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SLNo)
                            </td>
                            <td>
                                <span data-toggle="tooltip" title="Add Action">
                                    @Html.ActionLink(" ", "CreateModuleMenuAction", new { Id = item.ModuleMenuId }, new { @class = "fa fa-plus btn btn-primary", @target = "_blank" })
                                </span>
                                <span data-toggle="tooltip" title="Edit">
                                    @Html.ActionLink(" ", "EditModuleMenus", new { id = item.ModuleMenuId }, new { @class = "fas fa-edit btn btn-warning btn-sm", @target = "_blank" })
                                </span>
                                <span data-toggle="tooltip" title="Delete">
                                    @Html.ActionLink(" ", "DeleteModuleMenus", new { Id = item.ModuleMenuId }, new { @class = "far fa-trash-alt btn btn-danger btn-sm" })
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    </div>
</form>


@section Scripts{

    <script>


    $(document).ready(function () {

        $("#UserList").select2();

        CurrentDate();

        $(".FromDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });
        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();


            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }


        }


    });

                $(document).ready(function () {

                    $('#tbllist').DataTable({
                        dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                        //buttons: [
                        //    'copy', 'csv', 'excel', 'pdf'
                        //],
                        buttons: {
                            dom: {
                                button: {
                                    className: 'btn rounded-0'
                                }
                            },
                            buttons: [
                                //'copy', 'csv', 'excel', 'pdf'
                                //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                                {
                                    extend: 'colvis',
                                    "columns": ':not(:last-child)',
                                    text: '<i class="mdi mdi-view-column"></i>',
                                    className: 'btn-info',
                                    titleAttr: 'Show / hide columns',
                                    //collectionLayout: 'fixed two-column'

                                },
                                {
                                    extend: 'excel',
                                    text: '<i class="mdi mdi-file-excel"></i>',
                                    className: 'btn-success mr-1',
                                    titleAttr: 'Export to excel'
                                }

                            ]
                        },
                        "searching": true,
                        "paging": false,
                        "ordering": true,
                        "info": true,
                        "iDisplayLength": 10,
                        "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                        "scrollX": true,
                        "scrollCollapse": true,
                        language: {
                            sLengthMenu: "_MENU_",
                            search: "",
                            searchPlaceholder: "Search..."
                        }
                    });
                });




    $('input[name=RptType]').click(function () {
        var reporttype = $("input[name=RptType]:checked").val();
        //alert(reporttype);

        $.ajax({
        type: 'POST',
        url: '@Url.Action("SetSessionInd", "ExportInvoiceMasters")',
        dataType: 'json',
        async: true,
            data: { reporttype: reporttype},
            success: function (response) {
              //  window.location.href = response.Url;

                //window.open(response.Url, '_blank')
            },
            error: function (ex) {
                alert('Failed.' + ex);
            }

        });

    });

    //function ReportPrint(btnvalue) {
    //    var invoiceid = 0;
    //    invoiceid = $('#InvoiceId').val();

    //    var reporttype = $("input[name=RptType]:checked").val();


    //}
    </script>
}

