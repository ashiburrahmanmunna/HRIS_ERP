@Html.AntiForgeryToken()
@model GTERP.Models.Customer


<style>
</style>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

</head>

<body>

    <h2></h2>
    @using (Html.BeginForm("Create", "Customers", FormMethod.Post, new { enctype = "multipart/form-data" }))

    {
        @Html.AntiForgeryToken()
        //ModelState.AddModelError("error", ex.Message);
<div class="container" style="max-width: 900px;">
    <div class="py-7 text-center">
        <h2>Customer Entry</h2>
        <hr />
        <p class="lead"></p>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (Model != null)
    {

        <input type="hidden" id="SalesId" name="CustomerId" value="@Model.CustomerId" />
        @Html.HiddenFor(model => model.userid)
        @Html.HiddenFor(model => model.comid)
        @Html.HiddenFor(model => model.useridUpdate)
        @Html.HiddenFor(model => model.DateAdded)
        @Html.HiddenFor(model => model.DateUpdated)
        @Html.HiddenFor(model => model.OldCustomerCode)

    }
    else
    {
        <input type="hidden" id="comid" name="comid" value="" />
    }

    <div id="modalbodyfahad" class="row card p-4">
        <div class="col-md-12 order-md-1">
            <h4 class="mb-3">Customer Information</h4>
            <div class="needs-validation card p-4" novalidate>
                <div class="row">

                    <br>

                    <div class="col-md-3 mb-3">
                        @Html.LabelFor(model => model.CustomerCode)

                        @Html.EditorFor(model => model.CustomerCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })



                    </div>

                    <div class="col-md-9 mb-3">
                        @Html.LabelFor(model => model.CustomerName)

                        @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("DuplicateError", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.EmailId)

                        @*<input id="emailAddress" type="email">*@
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @type = "email", @id = "emailAddress" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.CountryId, "Country")

                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.DistId, "District")

                        @Html.DropDownList("DistId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DistId, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.PStationId, "Police Station")

                        @Html.DropDownList("PStationId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PStationId, "", new { @class = "text-danger" })

                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.PrimaryAddress)

                        @Html.EditorFor(model => model.PrimaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PrimaryAddress, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.SecoundaryAddress)

                        @Html.EditorFor(model => model.SecoundaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SecoundaryAddress, "", new { @class = "text-danger" })

                    </div>
                </div>

                @*<div class="row">
                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.District)

                            @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-6 mb-3">
                            @Html.LabelFor(model => model.PoliceStation)

                            @Html.EditorFor(model => model.PoliceStation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PoliceStation, "", new { @class = "text-danger" })

                        </div>
                    </div>*@
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.PostalCode)

                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.City)

                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="row">

                    <div class="col-md-3 mb-3">
                        @Html.LabelFor(model => model.PhoneNo)

                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-3 mb-2">
                        @Html.LabelFor(model => model.OpBalance)

                        @Html.EditorFor(model => model.OpBalance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OpBalance, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-2 mb-3">
                        @Html.LabelFor(model => model.SLNo)

                        @Html.EditorFor(model => model.SLNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SLNo, "", new { @class = "text-danger" })

                    </div>


                    <div class="col-md-2 mb-2">
                        @Html.LabelFor(model => model.IsDealer)

                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsDealer)
                        </div>
                    </div>

                    <div class="col-md-2 mb-3">
                        @Html.LabelFor(model => model.IsInActive)

                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsInActive)
                        </div>
                        @*@Html.ValidationMessageFor(model => model.IsInActive, "", new { @class = "text-danger" })*@

                    </div>



                </div>




                <br />
                <br />


                <table>

                    <tr>

                        <td>
                            @if (ViewBag.Title == "Create")
                            {
                                <input type="submit" value="Create" class="btn btn-primary btn-block" />

                                @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                            }
                            else if (ViewBag.Title == "Edit")
                            {
                                <input type="submit" value="Update" class="btn btn-warning btn-block" />

                                @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                            }
                            else if (ViewBag.Title == "Delete")
                            {
                                <button class="btn btn-danger btn-lg btn-block" type="button" onclick="Products_delete()">Delete</button>
                            }

                        </td>
                        <td>
                            @Html.ActionLink("Back", "Index", "Customers", null, new { @class = "btn btn-info btn-block" })

                        </td>

                    </tr>

                </table>



            </div>
        </div>
    </div>
</div>
    }


    @section Scripts{


        <script type="text/javascript">

            $('#DistId').select2();
            $('#PStationId').select2();
            $('#CountryId').select2();


            $('#DistId').select2({})
                .on("select2:select", function (e) {
                    if ($('#DistId').val() > 0) {

                        //alert('enter');
                        CascadePoliceStation();
                    }
                    else {
                        alert('Please Select District Information First.')
                    }

                    //console.log("select2:select")
                });


            function CascadePoliceStation() {


                $("#PStationId").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getPoliceStation", "Customers")',
                        dataType: 'json',
                        async: false,
                        data: { id: $("#DistId").val() },
                        success: function (data) {
                            var s ='<option value="-1">Please Select Police Station</option>';
                            //$.each(data, function (i, data) {
                            //    $("#Product").append('<option value="'+ data.Value + '">'
                            //        + data.Text + '</option>');
                            //});
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            }
                            $("#PStationId").html(s);
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });
                return false;

            };




             function Products_delete() {

                 var CustomerId = $("#CustomerId").val();
                    //alert(SalesId);
                    $.ajax({

                        url: '@Url.Action("Delete", "Customers")',
                        //url: '@Url.Action("Delete")',
                        data: JSON.stringify({ id: CustomerId }), //use id here
                        //data: JSON.stringify(salesmain),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {

                            if (result.Success == "1") {
                                window.location.href = '@Url.Action("Index", "Customers")';
                            }
                            else {
                                alert(result.ex);
                            }
                        }
                    });
            }

        </script>

    }
</body>