@*@model IEnumerable<GTERP.Models.Customer>*@




<style>

    .tbllist th:first-child, .tbllist tbody td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:first-child {
        position: sticky;
        left: 0px;
        z-index: 1;
    }


    .tbllist th:last-child, .tbllist tbody td:last-child {
        position: sticky !important;
        right: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:last-child {
        position: sticky;
        right: 0px;
        z-index: 1;
    }
</style>


<form action="" method="post">
    <div class="container-fluid">

        <div class="text-center">
            <div class="row">

                <div class="col">
                    @Html.ActionLink("Customer Creation", "Create", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })

                </div>

                <div class="col">
                    <h2 id="styletext">Customer List</h2>
                </div>
                <div class="col-lg-7">

                </div>

            </div>

        </div>

        <div class="card p-2 mt-2">

            @* <div class="row">
               <div class="col-md-12 col-12 d-block mx-auto">*@
            <div class="row">
                <div class="col-md-3 col-12">
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">District</label>
                        <div class="col-sm-9">
                            @Html.DropDownList("DistId", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })

                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-12">
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label">Police Station</label>
                        <div class="col-sm-8">
                            @*@Html.DropDownList("SupplierList", ViewBag.SupplierList as List<SelectListItem>, "--All Supplier Data--", new { id = "SupplierList", @class = "form-control form-control-sm" })*@
                            @Html.DropDownList("PStationId", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })

                        </div>
                    </div>
                </div>



                <div class="col-md-2 col-12">
                    <button class="btn btn-success mb-2 btn-block rounded-0" type="button" onclick="ReportPrint('PrintCustomerList')">Dealer List</button>
                </div>

                <div class="col-md-2 col-12">
                    <button class="btn btn-success mb-2 btn-block rounded-0" type="button" onclick="ReportPrint('PrintCustomerListIndex')">Page Index</button>
                </div>
                <div class="col-md-2 col-12">
                    @*<a href="/Customers/ReportCustomer" class="btn btn-success mb-2 btn-block rounded-0" type="button" target="_blank">Index Report</a>*@
                    @Html.ActionLink("Customer Indexing", "ReportCustomer", null, null, new { @class = "btn btn-success btn-block rounded-0 ", @target = "_blank" })

                </div>



                <div class="col-md-2 col-12">
                    <button class="btn btn-success mb-2 btn-block rounded-0" type="button" onclick="ReportPrint('PrintCustomerListGroup')">Dealer Group By District</button>
                </div>

                <div class="col-md-2 col-12 round text-left">
                    @*<div class="panel-body">*@

                    @*<fieldset>*@
                    <fieldset class="pull-right" style="height: auto;margin-bottom: 0px">
                        <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                        <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                        <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>

                    </fieldset>
                    @*</div>*@


                </div>
            </div>
                @*</div>

        </div>*@
            </div>

        <div class="card p-2">
            <div class="table-responsive text-nowrap">
                <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover tbllist" cellspacing="0" width="100%">
                    <thead class="">
                        <tr>

                            @*<th>
                            @Html.DisplayNameFor(model => model.vCustomerCountry.CountryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CustomerCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CustomerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EmailId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PrimaryAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SecoundaryAddress)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.District)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PoliceStation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PostalCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.City)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsDealer)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsInActive)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OpBalance)
                        </th>
                        <th></th>*@
                        </tr>
                    </thead>
                    <tbody>

                        @*@foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.vCustomerCountry.CountryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CustomerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EmailId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PrimaryAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SecoundaryAddress)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.District)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PoliceStation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PostalCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.City)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsDealer)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsInActive)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OpBalance)
                            </td>
                            <td>
                                <span data-toggle="tooltip" title="Edit!">
                                    @Html.ActionLink(" ", "Edit", new { id = item.CustomerId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                </span>
                                <span data-toggle="tooltip" title="Delete!">
                                    @Html.ActionLink(" ", "Delete", new { Id = item.CustomerId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                </span>


                            </td>
                        </tr>
                    }*@

                </table>
            </div>
            <br />
        </div>
    </div>
</form>




@section Scripts{
    <script>

        $(document).ready(function () {

            //$('#tbllist').DataTable({
            //    dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
            //    //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
            //    //buttons: [
            //    //    'copy', 'csv', 'excel', 'pdf'
            //    //],
            //    buttons: {
            //        dom: {
            //            button: {
            //                className: 'btn rounded-0'
            //            }
            //        },
            //        buttons: [
            //            //'copy', 'csv', 'excel', 'pdf'
            //            //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
            //            {
            //                extend: 'colvis',
            //                "columns": ':not(:last-child)',
            //                text: '<i class="mdi mdi-view-column"></i>',
            //                className: 'btn-info',
            //                titleAttr: 'Show / hide columns',
            //                //collectionLayout: 'fixed two-column'

            //            },
            //            {
            //                extend: 'copy',
            //                text: '<i class="mdi mdi-content-copy"></i>',
            //                className: 'btn-primary',
            //                titleAttr: 'Copy to Clipboard'
            //            },
            //            {
            //                extend: 'csv',
            //                text: '<i class="mdi mdi-note-outline"></i>',
            //                className: 'btn-secondary',
            //                titleAttr: 'Export to csv'

            //            },
            //            {
            //                extend: 'excel',
            //                text: '<i class="mdi mdi-file-excel"></i>',
            //                className: 'btn-success',
            //                titleAttr: 'Export to excel'
            //            },
            //            {
            //                extend: 'pdfHtml5',
            //                orientation: 'landscape',
            //                pageSize: 'LEGAL',
            //                text: '<i class="mdi mdi-file-pdf"></i>',
            //                className: 'btn-danger',
            //                titleAttr: 'Export to PDF',
            //                //exportOptions: {
            //                //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
            //                //}

            //            },
            //            {
            //                extend: 'print',
            //                text: '<i class="mdi mdi-printer"></i>',
            //                className: 'btn-info',
            //                titleAttr: 'Print Table'
            //            }

            //        ]
            //    },
            //    "searching": true,
            //    "paging": false,
            //    "ordering": true,
            //    "info": true,
            //    "iDisplayLength": 20,
            //    "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
            //    "scrollX": true,
            //    "scrollY": "60vh",
            //    "scrollCollapse": true,
            //    language: {
            //        sLengthMenu: "_MENU_"
            //    }
            //    ////"fixedColumns": {
            //    ////    "leftColumns": 2,

            //    ////},
            //    //"sScrollXInner": "100%",
            //    //dom: 'Blfrtip',
            //    ////,"fixedHeader": true
            //});
            $('#DistId').select2();
            $('#PStationId').select2();



            $('#DistId').select2({})
                .on('select2:select', function (e) {
                    if ($('#DistId').val() > 0) {

                        GetPoliceStation();

                    } else {
                        alert('Please Select District Information First');
                    }
                })


          function GetPoliceStation() {
            var distid = $('#DistId option:selected').val();

           // alert(distid);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetPoliceStation","Booking")',
                dataType: 'json',
                data: { distid: distid },
                success: function (data) {
                   // console.log(data)
                    var html = '<option value="-1">Select PS</option>';
                    for (var i = 0; i < data.length; i++) {
                        html += '<option value="' + data[i].Value + '">'+data[i].Text+'</option>';
                    }
                    $('#PStationId').html(html);
                    $('#PStationId').attr('disabled', false);
                },
                error: function (ex) {
                    alert('faild.' + ex);
                }
            });
            return false;

        }


             var peopleList = $('#tbllist').DataTable({
                 "serverSide": true,
                 "orderCellsTop": true,
                 "scrollX": true,
                 "scrollY": "60vh",
                 "scrollCollapse": true,
                 "info": true,
                 "iDisplayLength": 10,
                 "lengthMenu": [[5, 10, 20, 50, 20000], [5, 10, 20, 50, "All"]],

                ajax: {
                    url: '@Url.Action("Get", "Customers")',
                    type: "POST"
                },
                success: function (data) {
                    //console.log(data);
                    //alert(data);
                },

                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                columns: [

                    { "title": "CustomerId", "data": "CustomerId", "searchable": true, "visible": false },
                    { "title": "CustomerCode", "data": "CustomerCode" },
                    { "title": "SLNo", "data": "SLNo" },


                    { "title": "CustomerName", "data": "CustomerName", "searchable": true },
                    { "title": "EmailId", "data": "EmailId", "searchable": true },

                    { "title": "Country", "data": "Country", "searchable": true },
                    { "title": "PrimaryAddress", "data": "PrimaryAddress", "searchable": true },
                    { "title": "SecoundaryAddress", "data": "SecoundaryAddress", "searchable": true },

                    { "title": "PostalCode", "data": "PostalCode", "searchable": true },
                    { "title": "City", "data": "City", "searchable": true },
                    { "title": "PhoneNo", "data": "PhoneNo", "searchable": true },

                    { "title": "OpBalance", "data": "OpBalance", "searchable": true },
                    { "title": "IsInActive", "data": "IsInActive", "searchable": true },
                    { "title": "IsDealer", "data": "IsDealer", "searchable": true },



                    { "title": "DistName", "data": "DistName", "searchable": true },
                    { "title": "DistNameB", "data": "DistNameB", "searchable": true },


                    { "title": "PStationName", "data": "PStationName", "searchable": true },
                    { "title": "PStationNameB", "data": "PStationNameB", "searchable": true },
                    {
                        "title": "Action",
                        "data": "CustomerId",
                        "render": function (data, type, row) {
                            var myUrledit = '@Url.Action("Edit", "Customers")/' + data;
                            var myUrldelete = '@Url.Action("Delete", "Customers")/' + data;

                            return '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"fas fa-edit btn btn-warning btn-xs\" target=\"_blank\"></a></span>' +
                                '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\" class=\"far fa-trash-alt btn btn-danger btn-xs\" target=\"_blank\"></a></span>';
                            //+ '<span data-toggle="tooltip" title="Master LC Report"> <a href=\"' + myUrlprint + '\" class=\"fas fa-file-pdf btn btn-success btn-xs\" target=\"_blank\"></a></span>';
                            //                        return '<a href=\"' + myUrl + '\" class=\"btn btn-default btn-sm\">Edit</a>';

                        }

                    }

                ],

                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        //{
                        //    extend: 'copy',
                        //    text: '<i class="mdi mdi-content-copy"></i>',
                        //    className: 'btn-primary',
                        //    titleAttr: 'Copy to Clipboard'
                        //},
                        //{
                        //    extend: 'csv',
                        //    text: '<i class="mdi mdi-note-outline"></i>',
                        //    className: 'btn-secondary',
                        //    titleAttr: 'Export to csv'

                        //},
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        }

                    ]
                },
                "lengthMenu": [[5, 10, 20, 50, 10000], [5, 10, 20, 50, "All"]],
                "searching": true
            });



        });

          function ReportPrint(btnvalue) {


              var DistId = $('#DistId').val();
              var PStationId = $('#PStationId').val();
              var reporttype = $("input[name=RptType]:checked").val();

            ///alert('Hit');

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SetSessionCustomerReport", "Customers")',
                dataType: 'json',
                async: true,
                data: { rptFormat: reporttype, action: btnvalue, DistId: DistId, PStationId: PStationId },
                success: function (response) {

                    window.open(response.Url, '_blank')
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });


                }

        //$(".search_input").addClass('form-control input-lg col-xs-12');

    </script>

}
