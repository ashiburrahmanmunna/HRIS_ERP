@model IEnumerable<GTERP.Models.ExportInvoiceMaster>

<form action="" method="post">

    <div class="container-fluid">

        <div class="row">
            <div></div>

            <div class="col-md-4  offset-md-1 col-12 d-block mx-auto">
                @Html.ActionLink("Commercial Invoice [Export] Creation", "Create", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })

            </div>

            <div class="col-md-6 col-12 d-block mx-auto flot-right">
                <h2 id="styletext">Commercial Invoice [Export] List</h2>
            </div>
        </div>



    </div>

    @*<h2>Index</h2>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>*@

    <div class="card p-2">
        <div class="row" style="padding: 12px;padding-bottom: 0px;">
            <div class="col-md-3 col-12">


                @Html.DropDownList("UserList", ViewBag.UserList as List<SelectListItem>, "--All User Data--", new { id = "UserList", @class = "form-control form-control-sm" })

            </div>

            <div class="col-md-3 col-12">
                <div class="form-group row">
                    <label for="FDate" class="col-sm-4 col-form-label">From Date : </label>
                    <div class="col-sm-7">

                        @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })

                    </div>

                </div>
            </div>

            <div class="col-md-3 col-12">
                <div class="form-group row">
                    <label for="TDate" class="col-sm-4 col-form-label">To Date : </label>
                    <div class="col-sm-7">
                        @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })

                    </div>

                </div>
            </div>
            <div class="col-md-1 col-12">
                <div class="form-group row">
                    <input id="btnload" type="submit" value="Load" class="btn btn-success btn-block" />
                </div>

            </div>




            <div class="col-md-2 col-12 text-left">
                @*<div class="panel-body">*@

                @*<fieldset>*@
                <fieldset class="pull-right" style="height: auto;margin-bottom: 0px">

                    <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                    <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                    <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>

                </fieldset>
                @*</div>*@


            </div>

        </div>



    </div>
    <div class="card p-2">


        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table table-striped table-bordered table-sm table-hover" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.BuyerInformation.BuyerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BuyerInformation.Country.CountryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.COM_MasterLC.LCRefNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.InvoiceNo)
                        </th>
                        <th>
                            Export PO No [First]
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.InvoiceDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ExpNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ExpDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BLNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.BLDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TotalValue)
                        </th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @if (item.BuyerInformation == null)
                            {

                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.BuyerInformation.BuyerName)

                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BuyerInformation.Country.CountryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.COM_MasterLC.LCRefNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExportInvoiceDetails.FirstOrDefault().COM_MasterLC_Detail.ExportPONo)
                        </td>

                        @*<td>
            @foreach (var pono in item.COM_MasterLC.COM_MasterLC_Details.FirstOrDefault().ExportPONo)
            {

                @Html.DisplayFor(modelItem => pono.ExportPONo.FirstOrDefault())

            }
        </td>*@



                        @*<td>

            @for (int i = 0; i < item.ExportInvoiceDetails.Count(); i++)
            {
                @Html.DisplayFor(modelItem => item.ExportInvoiceDetails.FirstOrDefault().ExportPoNo)
                <br />

            }

            @foreach (var pono in item.ExportInvoiceDetails)
            {



            }


        </td>*@


                        <td>
                            @Html.DisplayFor(modelItem => item.InvoiceDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BLNo)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BLDate)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.TotalValue)
                        </td>
                        <td>
                            <span data-toggle="tooltip" title="Commercial Invoice">
                                @if (item.BuyerInformation == null)
                                {

                                }
                                else
                                {
                                    if (item.BuyerInformation.BuyerName.ToUpper().Contains("H&M"))
                                    {


                                        if (item.BuyerInformation.BuyerName.ToUpper().Contains("H&M") && !(item.Destination.DestinationNameSearch.ToUpper().Contains("WAREHOUSE")))
                                        {
                                            @Html.ActionLink(" ", "PrintCIEHM", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })


                                        }

                                        else
                                        {
                                            @Html.ActionLink(" ", "PrintCIEHM_WAREHOUSE", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                        }

                                    }

                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("ETAM"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEETAM", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                        @*@Html.ActionLink(" ", "PrintCIEETAMPackingList", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })*@


                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("NEXT"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIENEXT", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("PVH") || item.BuyerInformation.BuyerName.ToUpper().Contains("CALVIN") || item.BuyerInformation.BuyerName.ToUpper().Contains("BASECO"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEPVH", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("PRIMARK"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEPRIMARK", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TEDDY"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETEDDY", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }

                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("DRESSMAN") || item.BuyerInformation.BuyerName.ToUpper().Contains("CUBUS") || item.BuyerInformation.BuyerName.ToUpper().Contains("POCO LOCO"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEDRESSMAN", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("MARKS AND"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEMANDS", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("C&A"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIECANDA", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    @*else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY"))
                                    {
                                    @Html.ActionLink(" ", "PrintCIETRINITY", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }*@
                                    else if ((item.CommercialCompany.CompanyName.ToUpper().Contains("TRINITY APPARELS LTD")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_APPARELS", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY") && (item.CommercialCompany.CompanyName.ToUpper().Contains("AVENGER")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_AVENGER", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY") && (item.CommercialCompany.CompanyName.ToUpper().Contains("BELAMY")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_BELAMY", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (((item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY")) || (item.BuyerInformation.BuyerName.ToUpper().Contains("YOUNG BRAND")) || (item.BuyerInformation.BuyerName.ToUpper().Contains("ORIENTAL"))) && (item.CommercialCompany.CompanyName.ToUpper().Contains("DYEING")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_DYEING", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY") && (item.CommercialCompany.CompanyName.ToUpper().Contains("ISLAM PACK")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_ISLAMPACK", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TRINITY") && (item.CommercialCompany.CompanyName.ToUpper().Contains("TRINITY")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETRINITY_BRANDELLA", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if ((item.BuyerInformation.BuyerName.ToUpper().Contains("TESCO")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETESCO", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if ((item.BuyerInformation.BuyerName.ToUpper().Contains("TESCO")) && (item.BuyerInformation.Country.CountryName.ToUpper().Contains("UNITED KINGDOM")))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETESCOUK", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TARGET AUS"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETARGET", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("AB LINDEX"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIELINDEX", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("VERTBAUDET"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEVERTBAUDET", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("JC PENNEY"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEPENNEY", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("RNA RESOURCES"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIERNA", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }

                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("SAINSBURY")) //|| item.BuyerInformation.BuyerName.ToUpper().Contains("LINDEX")
                                    {
                                        @Html.ActionLink(" ", "PrintCIESAINSBURY", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("LPP"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIELPP", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TARGETAUS"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETARGETAUS", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("CARTER"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIECARTER", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("RNA RESOURCES"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIERNARESOURCES", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("ASOS"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEASOS", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("MOTHERCARE"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEMOTHERCARE", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("OKAIDI"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEOKAIDI", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("MIES"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEMIES", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("ASDA"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEASDA", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("EMMAROSE"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEEMMAROSE", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("TEXSPORT"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIETEXSPORT", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("WOLF"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEWOLF", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("BRANDELLA"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEBRANDELLA", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else if (item.BuyerInformation.BuyerName.ToUpper().Contains("WALMART"))
                                    {
                                        @Html.ActionLink(" ", "PrintCIEWALMART", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                    else
                                    {
                                        @Html.ActionLink(" ", "PrintCIE", new { Id = item.InvoiceId, type = "pdf" }, new { @target = "_blank", @class = "fas fa-file-pdf btn btn-success btn-xs" })

                                    }
                                }
                            </span>
                            <span data-toggle="tooltip" title="Edit">
                                @Html.ActionLink(" ", "Edit", new { id = item.InvoiceId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                            </span>
                            <span data-toggle="tooltip" title="Delete">
                                @Html.ActionLink(" ", "Delete", new { Id = item.InvoiceId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                            </span>
                        </td>
                    </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
</form>


<script src="~/Scripts/DataTables/dataTables.bootstrap4.min.js"></script>
<script src="~/Scripts/DataTables/dataTables.fixedColumns.min.js"></script>
<script src="~/Scripts/DataTables/dataTables.fixedHeader.min.js"></script>
<script>


    $(document).ready(function () {

        $("#UserList").select2();

        CurrentDate();

        $(".FromDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });
        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();


            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }


        }


    });

                $(document).ready(function () {

                    $('#tbllist').DataTable({
                        dom: '<"dom_wrapper fh-fixedHeader"lBf>tip',
                        //buttons: [
                        //    'copy', 'csv', 'excel', 'pdf'
                        //],
                        buttons: {
                            dom: {
                                button: {
                                    className: 'btn rounded-0'
                                }
                            },
                            buttons: [
                                //'copy', 'csv', 'excel', 'pdf'
                                //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                                {
                                    extend: 'colvis',
                                    "columns": ':not(:last-child)',
                                    text: '<i class="mdi mdi-view-column"></i>',
                                    className: 'btn-info',
                                    titleAttr: 'Show / hide columns',
                                    //collectionLayout: 'fixed two-column'

                                },
                                {
                                    extend: 'copy',
                                    text: '<i class="mdi mdi-content-copy"></i>',
                                    className: 'btn-primary',
                                    titleAttr: 'Copy to Clipboard'
                                },
                                {
                                    extend: 'csv',
                                    text: '<i class="mdi mdi-note-outline"></i>',
                                    className: 'btn-secondary',
                                    titleAttr: 'Export to csv'

                                },
                                {
                                    extend: 'excel',
                                    text: '<i class="mdi mdi-file-excel"></i>',
                                    className: 'btn-success',
                                    titleAttr: 'Export to excel'
                                },
                                {
                                    extend: 'pdfHtml5',
                                    orientation: 'landscape',
                                    pageSize: 'LEGAL',
                                    text: '<i class="mdi mdi-file-pdf"></i>',
                                    className: 'btn-danger',
                                    titleAttr: 'Export to PDF'
                                    //,exportOptions: {
                                    //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                                    //}

                                },
                                {
                                    extend: 'print',
                                    text: '<i class="mdi mdi-printer"></i>',
                                    className: 'btn-info',
                                    titleAttr: 'Print Table'
                                }

                            ]
                        },
                        "columnDefs": [
                            // Hide second, third and fourth columns
                            { "visible": false, "targets": [] }
                        ],
                        "searching": true,
                        "paging": false,
                        "ordering": true,
                        "info": true,
                        "iDisplayLength": 7,
                        "lengthMenu": [[5,7, 10, 20, 50, -1], [5, 7,10, 20, 50, "All"]],
                        "scrollX": true,
                        "scrollY": "60vh",
                        "scrollCollapse": true,
                        fixedColumns: {
                            leftColumns: 2,
                            rightColumns: 1
                        }
                        
                        //"sScrollXInner": "100%",
                        //dom: 'Blfrtip',
                        ////,"fixedHeader": true
                    });
                    //$('#tbllist').DataTable({
                    //    dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                    //    buttons: [
                    //        'copy', 'csv', 'excel', 'pdf'
                    //    ],
                    //    "searching": true,
                    //    "paging": true,
                    //    "ordering": true,
                    //    "info": true,
                    //    "iDisplayLength": 20,
                    //    "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                    //    "scrollX": true,
                    //    "scrollCollapse": true,
                    //    language: {
                    //        sLengthMenu: "_MENU_"
                    //    }
                    //});
                });




    $('input[name=RptType]').click(function () {
        var reporttype = $("input[name=RptType]:checked").val();
        //alert(reporttype);

        $.ajax({
        type: 'POST',
        url: '@Url.Action("SetSessionInd", "ExportInvoiceMasters")',
        dataType: 'json',
        async: true,
            data: { reporttype: reporttype},
            success: function (response) {
              //  window.location.href = response.Url;

                //window.open(response.Url, '_blank')
            },
            error: function (ex) {
                alert('Failed.' + ex);
            }

        });

    });

    //function ReportPrint(btnvalue) {
    //    var invoiceid = 0;
    //    invoiceid = $('#InvoiceId').val();

    //    var reporttype = $("input[name=RptType]:checked").val();


    //}
</script>

