@model GTERP.Models.ExportInvoiceMaster

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">


    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    @*<link href="~/Content/DataTables/css/jquery.dataTables.css" rel="stylesheet" />*@
    <script src="~/Scripts/DataTables/dataTables.bootstrap4.js"></script>
    <link href="~/Content/DataTables/css/dataTables.bootstrap4.css" rel="stylesheet" />
    @*<script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <script src="~/Scripts/select2.min.js"></script>
    <link href="~/Content/DataTables/css/select.bootstrap4.min.css" rel="stylesheet" />
    <script src="~/Scripts/dataTables.cellEdit.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.select.min.js"></script>
    <link href="~/Content/DataTables/css/select.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/DataTables/dataTables.buttons.min.js"></script>
    <link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

</head>

<style>
    .input-validation-error {
        border: 2px solid #f00;
        background: #fee;
    }

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }


    th {
        font-size: 11px;
    }

    td {
        font-size: 11px;
    }


    div.dataTables_length {
        float: right;
    }
    /*.dt-buttons {

        }*/
    /*div.dataTables_length select {
            font-size:17px;

        }*/
    /*div.dataTables_length> label {
            display: none;
        }*/
    div.dataTables_filter {
        float: left;
        /*font-size: 17px;*/
    }

    div.dt-buttons {
        float: right;
        font-size: 12px !important;
    }
    /*div.dataTables_info {
            float: left;
        }*/

    div.dataTables_paginate {
        float: right;
    }

    div.DTTT {
        float: left;
        margin-right: 50px;
    }

    div.buttons {
        clear: both;
    }

    .fas, .far {
        font-size: 10px !important;
    }


    table.dataTable tbody td, .sorting {
        vertical-align: middle;
        text-align: center;
    }

    .sorting_asc {
        color: green;
        vertical-align: middle;
        text-align: center;
        font-style: oblique;
    }

    .sorting_desc {
        color: #0932d1;
        vertical-align: middle;
        text-align: center;
        font-style: oblique;
    }

    .table-sm th {
        padding: .8em;
        background: rgb(192,196,196);
        background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
        font-family: 'Roboto Condensed', sans-serif;
        font-weight: 500;
        font-size: 15px;
    }

    .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
        background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
    }

    table.dataTable tbody tr.selected, table.dataTable tbody th.selected, table.dataTable tbody td.selected {
        color: green;
    }

    .txtMultbblc.selected {
        background: linear-gradient(0deg, rgba(86, 230, 56, 0.38) 1%, rgba(220, 255, 192, 0.59) 66%, rgba(160, 235, 157, 0.55) 100%);
        font-weight: bolder;
        /*color: #006100;
        background: rgb(18,180,77);
        background: linear-gradient(0deg, rgba(18,180,77,0.2246965680803571) 1%, rgba(255,255,255,0.6224556717218137) 66%, rgba(6,139,2,0.07343606387867652) 100%);
        font-weight: bolder;*/
    }

    .txtMultmasterlcdetails.selected {
        background: linear-gradient(0deg, rgba(86, 230, 56, 0.38) 1%, rgba(220, 255, 192, 0.59) 66%, rgba(160, 235, 157, 0.55) 100%);
        font-weight: bolder;
        /*color: orangered;
        background: rgb(18,180,77);
        background: linear-gradient(0deg, rgba(18,180,77,0.2246965680803571) 1%, rgba(255,255,255,0.6224556717218137) 66%, rgba(6,139,2,0.07343606387867652) 100%);
        font-weight: bolder;*/
    }


    .select-box {
        position: relative;
        display: block;
        width: 100%;
        margin: 0 auto;
        font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
        font-size: 18px;
        color: #60666d;
    }

    #myInputSearch {
        background-image: url('../../Content/css/searchicon.png');
        background-position: 10px 12px;
        background-repeat: no-repeat;
        width: 100%;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        text-align: center;
        font-size: 22px;
        margin-bottom: 12px;
    }


    div#DataTables_Table_0_wrapper {
        width: 100% !important;
    }

</style>

<h2 id="styletext" class="text-center">Export Invoice @ViewBag.Title</h2>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myform" }))
{

    <div class="needs-validation" novalidate>
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*style="min-width: 1300px;"*@
        <div class="container-fluid">
            <div id="modalbodyfahad" class="row">

                <div class="col-md-12 order-md-1 mb-2">

                    @**@
                    <div class="card p-4">
                        <table class="table table-condensed">
                            <tr class="row">

                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Master LC/ Contact No:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.HiddenFor(model => model.InvoiceId)
                                        @Html.DropDownListFor(model => model.MasterLCId, ViewBag.MasterLCID as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "MasterLCID", @class = "form-control form-control-sm custom-select" } })
                                        <span class="input-group-append">
                                            <button id="btnmusterlcid" class="btn btn-danger" type="button" style="font-size: 0.5rem;" onclick="MusterLCId_load()">Load</button>
                                        </span>
                                        @Html.ValidationMessageFor(model => model.MasterLCId)
                                    </span>

                                </td>
                                <td id="divSupplier" class="col-md-2 col-12">
                                    <span class="text-right"><label>Buyer :</label></span>
                                    <span class="input-group">
                                        @Html.DropDownList("BuyerId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })
                                        @*@Html.EditorFor(m => m.COM_MasterLC.BuyerInformations.BuyerName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>

                                </td>

                                <td id="divNotifyPartyOne" class="col-md-2 col-12">
                                    <span class="text-right"><label>1st Notify Party :</label></span>
                                    <span class="input-group">
                                        @*@Html.DropDownList("FirstNotifyPartyId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })*@
                                        @*@Html.DropDownListFor(model => model.FirstNotifyPartyId, ViewBag.FirstNotifyPartyId as List<SelectListItem>, "--Please Select From List--", new { htmlAttributes = new { id = "FirstNotifyPartyId", @class = "form-control form-control-sm custom-select" } })*@
                                        @Html.DropDownListFor(model => model.FirstNotifyPartyId, ViewBag.FirstNotifyPartyId as List<SelectListItem>,"--Please Select--", new { @class = "form-control select", @id = "FirstNotifyPartyId" })
                                    </span>

                                </td>

                                <td id="divNotifyPartyTwo" class="col-md-2 col-12">
                                    <span class="text-right"><label>2nd Notify Party :</label></span>
                                    <span class="input-group">
                                        @*@Html.DropDownList("FirstNotifyPartyId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })*@
                                        @Html.DropDownListFor(model => model.SecoundNotifyPartyId, ViewBag.SecoundNotifyPartyId as List<SelectListItem>, "--Please Select--", new { @class = "form-control select", @id = "SecoundNotifyPartyId" })

                                    </span>

                                </td>
                                <td id="divNotifyPartyThree" class="col-md-2 col-12">
                                    <span class="text-right"><label>3rd Notify Party :</label></span>
                                    <span class="input-group">
                                        @*@Html.DropDownList("FirstNotifyPartyId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })*@
                                        @Html.DropDownListFor(model => model.ThirdNotifyPartyId, ViewBag.ThirdNotifyPartyId as List<SelectListItem>, "--Please Select--", new { @class = "form-control select", @id = "ThirdNotifyPartyId" })
                                    </span>

                                </td>

                                <td id="divSupplier" class="col-md-2 col-12">
                                    <span class="text-right"><label>Exporter :</label></span>

                                    <span class="input-group">
                                        @Html.DropDownList("CommercialCompanyId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                        @*                                        @Html.EditorFor(m => m.COM_MasterLC.CommercialCompanies.CompanyName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>
                                </td>
                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>ShipMode:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.DropDownList("ShipModeId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                        @*@Html.EditorFor(m => m.ShipMode.ShipModeName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>

                                </td>

                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Invoice Ref No:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(m => m.InvoiceNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.InvoiceNo)

                                </td>

                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Date:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(m => m.InvoiceDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                        @Html.ValidationMessageFor(model => model.InvoiceDate)
                                    </span>
                                </td>



                                <td id="divSupplier" class="col-md-2 col-12">
                                    <span class="text-right"><label>Cond. Of Sales :</label></span>
                                    <span class="input-group">
                                        @Html.DropDownList("TradeTermId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })
                                        @*@Html.EditorFor(m => m.COM_MasterLC.BuyerInformations.BuyerName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>

                                </td>

                                <td id="divSupplier" class="col-md-2 col-12">
                                    <span class="text-right"><label>Port of Loading :</label></span>

                                    <span class="input-group">
                                        @Html.DropDownList("PortOfLoadingId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                        @*@Html.EditorFor(m => m.PortOfLoading.PortOfLoadingName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@

                                    </span>
                                </td>
                                <td id="divSupplier" class="col-md-2 col-12">
                                    <span class="text-right"><label>Port of Discharge :</label></span>

                                    <span class="input-group">
                                        @Html.DropDownList("PortOfDischargeId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                    </span>
                                </td>
                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Final Destination:</label>
                                    </span>
                                    <span class="input-group">

                                        @Html.DropDownList("DestinationId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                        @*@Html.EditorFor(model => model.Destination.DestinationName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>


                                </td>

                                @*<td id="divinsurance" class="col-md-2 col-12">
            <span class="text-right">
                <label>Delivery Term :</label>
            </span>
            <span class="input-group"  >
                @Html.EditorFor(model => model.DeliveryTerm, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })
            </span>
        </td>*@

                                <td id="divlcexpirydate" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Forwarder :</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control form-control-sm custom-select" })

                                        @*@Html.EditorFor(model => model.SupplierInformation.SupplierName, new { htmlAttributes = new { @class = "form-control form-control-sm custom-select" } })*@
                                    </span>
                                    @Html.ValidationMessageFor(model => model.SupplierInformation.SupplierName)
                                </td>


                                <td id="divTenor" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label> Exfactory Date:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.ExfactoryDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.ExfactoryDate)

                                </td>

                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Onboard Date :</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.OnboardDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.OnboardDate)
                                </td>

                                <td id="divinsurance" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Exp No :</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.ExpNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.ExpNo)
                                </td>
                                <td id="divstyle" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Exp Date:</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.ExpDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.ExpDate)
                                </td>


                                <td id="divtotallcqty" class="col-md-2 col-12">
                                    <span class="text-right"><label>Total LC Qty:</label></span>
                                    <span class="input-group">
                                        @Html.Editor("TotalLCQty", "", new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.COM_MasterLC.TotalLCQty)
                                </td>

                                <td id="divVessel" class="col-md-2 col-12">
                                    <span class="text-right"><label>Vessel Name :</label></span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.VesselName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.VesselName)
                                </td>
                                <td id="divVoyage" class="col-md-1 col-12">
                                    <span class="text-right"><label>Voyage No :</label></span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.VoyageNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.VoyageNo)
                                </td>


                                <td id="divdestination" class="col-md-1 col-12">
                                    <span class="text-right"><label>BL No :</label></span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.BLNo, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.BLNo)
                                </td>
                                <td id="divbldate" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>BL Date :</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.BLDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.BLDate)
                                </td>
                                <td id="divbalance" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Total Shipped :</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.TotalShipped, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                                    </span>

                                </td>


                                <td id="divgrouplcavg" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Goods Description :</label>
                                    </span>
                                    <span class="input-group" style="min-width: 140px;">
                                        @Html.EditorFor(model => model.GoodsDescription, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.GoodsDescription)
                                </td>
                                <td id="divTotalCartonQty" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Number of Carton</label>
                                    </span>
                                    <span class="input-group" style="min-width: 140px;">
                                        @Html.EditorFor(model => model.TotalCartonQty, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.TotalCartonQty)
                                </td>
                                <td id="divudno" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Balance Ship :</label>
                                    </span>
                                    <span class="input-group" style="min-width: 140px;">
                                        @Html.EditorFor(model => model.BalanceShip, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                </td>





                                <td id="divcartonmeasurement" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Carton Measurement</label>
                                    </span>
                                    <span class="input-group" style="min-width: 140px;">
                                        @Html.EditorFor(model => model.CartonMeasurement, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.CartonMeasurement)
                                </td>
                                <td id="divmainmark" class="col-md-4 col-12">
                                    <span class="text-right">
                                        <label>Main Mark</label>
                                    </span>
                                    <span class="input-group" style="min-width: 140px;">
                                        @Html.EditorFor(model => model.MainMark, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.MainMark)
                                </td>
                                <td id="divNetWeight" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Net Weight</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.NetWeight, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.NetWeight)
                                </td>
                                <td id="divGrossWeight" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Gross Weight</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.GrossWeight, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.GrossWeight)
                                </td>


                                <td id="divCBM" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>CBM</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.CBM, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.CBM)
                                </td>




                                <td id="divPackingType" class="col-md-2 col-12">
                                    <span class="text-right">
                                        <label>Packing Type</label>
                                    </span>
                                    <span class="input-group">
                                        <select id="PackingType" class="form-control form-control-sm custom-select" s>
                                            <option>=N/A=</option>
                                            <option>SOLID</option>
                                            <option>ASSORTED</option>

                                        </select>
                                    </span>

                                </td>



                                <td id="divuddateg" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Total Invoice Qty</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.TotalInvoiceQty, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.TotalInvoiceQty)
                                </td>
                                <td id="divuddateg" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Rate</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.Rate)
                                </td>
                                <td id="divuddateg" class="col-md-1 col-12">
                                    <span class="text-right">
                                        <label>Value</label>
                                    </span>
                                    <span class="input-group">
                                        @Html.EditorFor(model => model.TotalValue, new { htmlAttributes = new { @class = "form-control form-control-sm", @readonly = "readonly" } })
                                    </span>
                                    @Html.ValidationMessageFor(model => model.TotalValue)
                                </td>

                            </tr>


                        </table>
                    </div>
                </div>
                <div class="col-md-12 order-md-1 mb-2">
                    <div class="card p-1">
                        <div class="table-responsive text-nowrap">

                            <table id="tblexportordermain" class="tblexportordermain display nowrap table-bordered table-sm table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Com. Invoice No [Exp.]</th>
                                        <th>Invoice Date</th>
                                        <th>Total Invoice Qty</th>
                                        <th>Total Value</th>
                                        <th>Report</th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in ViewBag.ExportDetails)
                                    {
                                        <tr class="txtMultExportInvoiceMaster">
                                            <td>
                                                @item.InvoiceNo
                                            </td>
                                            <td>
                                                @item.InvoiceDate
                                            </td>
                                            <td>
                                                @item.TotalInvoiceQty
                                            </td>
                                            <td>
                                                @item.TotalValue
                                            </td>

                                            @*@Convert.ToString(string.Format("{0:dd-MMM-yy}", @item.LastShipDate))*@
                                            @*@item.LastShipDate.ToString("dd-MMM-yy")*@

                                            <td>

                                                <span data-toggle="tooltip" title="Print">
                                                    @Html.ActionLink(" ", "PrintBL", new { Id = item.InvNo, type = "pdf" }, new { @target = "_blank", @class = "far fa-file-pdf btn btn-outline-success btn-xs" })

                                                </span>
                                            </td>



                                        </tr>

                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td class="text-right" colspan="2">
                                            <h6>Total Shipped Qty & Value :</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlorderqtymaster">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordervaluemaster">0.00</h6>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 order-md-2 mb-2">
                    <div class="card p-1">
                        <div class="table-responsive text-nowrap">

                            <table id="tblExportInvoice" class="tblExportInvoice display nowrap table-bordered table-sm table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Check</th>
                                        <th>ExportInvoiceDetailsId</th>
                                        <th>MasterLCDetailsID</th>
                                        <th>Style</th>
                                        <th>Export Order No</th>
                                        <th>Shipment Date</th>
                                        <th>Destination</th>
                                        <th>LC Qty</th>
                                        <th>Unit</th>
                                        <th>Unit Price</th>
                                        <th>Total Value</th>
                                        <th>Inv Qty</th>
                                        <th>Rate</th>
                                        <th>Value</th>

                                        <th>Gross Weight</th>
                                        <th>Net Weight</th>
                                        <th>CBM</th>
                                        <th>Carton Qty</th>
                                        <th>Action</th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        foreach (var item in Model.ExportInvoiceDetails)
                                        {
                                            <tr class="txtMultExportInvoice">
                                                <td>
                                                    @*@Html.CheckBox("0")*@
                                                    <input type="checkbox" class="clickchk">
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.ExportInvoiceDetailsId)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.MasterLCDetailsID)
                                                </td>

                                                <td>
                                                    @Html.DisplayTextFor(i => item.StyleNo)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.ExportPoNo)
                                                </td>
                                                <td>
                                                    @Convert.ToString(string.Format("{0:dd-MMM-yy}", @item.ShipmentDate))
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.Destination)
                                                </td>

                                                <td>
                                                    @Html.DisplayTextFor(i => item.COM_MasterLC_Detail.OrderQty)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.COM_MasterLC_Detail.UnitMasterId)
                                                </td>

                                                <td>
                                                    @Html.DisplayTextFor(i => item.COM_MasterLC_Detail.UnitPrice)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.COM_MasterLC_Detail.TotalValue)
                                                </td>


                                                <td>
                                                    @Html.DisplayTextFor(i => item.InvoiceQty)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.InvoiceRate)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.InvoiceValue)
                                                </td>

                                                <td>
                                                    @Html.DisplayTextFor(i => item.GrossWeightLine)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.NetWeightLine)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.CBMLine)
                                                </td>
                                                <td>
                                                    @Html.DisplayTextFor(i => item.CartonQty)
                                                </td>
                                                <td>
                                                    <a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>
                                                </td>

                                            </tr>
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="1">


                                        </td>
                                        <td colspan="3">
                                            <div type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus fa-lg"></i></div>

                                        </td>
                                        <td class="text-right" colspan="7">
                                            <h6>Total Export Invoice Qty & Value :</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlorderqtyexportinvoice">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlorderrateexportinvoice">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordervalueexportinvoice">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordergrossweightexport">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordernetweightexport">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordercbmlineexport">0.00</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlordercartonqtyexport">0.00</h6>
                                        </td>



                                        <td colspan="1"></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>



            </div>
            <br />

            <div class="row text-center m-2">
                <br />
                <div class="col-md-3"></div>
                @if (ViewBag.Title == "Create")
                {
                    <div class="col-md-3 col-xs-12 d-block mx-auto">
                        @if (ViewData.ModelState.IsValid)
                        {
                            <button class="form-control form-control-sm btn btn-success mb-2 btn-block" type="button" onclick="ExportInvoice_save()">Save</button>
                        }
                    </div>
                }
                else if (ViewBag.Title == "Edit")
                {
                    <div class="col-md-3 col-xs-12 d-block mx-auto">
                        <button class="form-control form-control-sm btn btn-warning mb-2 btn-block" type="button" onclick="ExportInvoice_save()">Update</button>
                    </div>
                }
                else if (ViewBag.Title == "Delete")
                {
                    <div class="col-md-3 col-xs-12 d-block mx-auto">
                        <button class="form-control form-control-sm btn btn-danger mb-2 btn-block" type="button" onclick="ExportInvoice_delete()">Delete</button>
                    </div>
                }
                <div class="col-md-3 col-xs-12 d-block mx-auto">
                    @Html.ActionLink("Back", "Index", null, null, new { @class = "form-control form-control-sm btn btn-info btn-block", @id = "btnBack" })
                </div>
                <div class="col-md-3"></div>
            </div>
        </div>
    </div>



    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">SEARCH</h5>
                    <button id="btnclose" type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="SubSectionList" class="row">
                        <div class="col order-md-1 mb-2">
                            <form class="card p-2">

                                <br />
                                <div class="mb-2">


                                    <input type="text" id="myInputSearch" class="form-control" onkeyup="myFunctionSearch()" onmouseover="this.focus();" placeholder="Search for PONO." title="Type in a name">

                                </div>


                                <div class="table-responsive">

                                    <table id="tblmasterlcdetails" class="nowrap table-striped table-hover text-center">
                                        <thead>
                                            <tr>
                                                <th>checkbox</th>
                                                <th>ExportInvoiceDetailsId</th>
                                                <th>MasterLCDetailsID</th>
                                                <th>Style</th>
                                                <th>Export Order No</th>
                                                <th>Shipment Date</th>
                                                <th>Destination</th>
                                                <th>LC Qty</th>
                                                <th>Unit</th>
                                                <th>Unit Price</th>
                                                <th>Total Value</th>
                                                <th>Inv Qty</th>
                                                <th>Rate</th>
                                                <th>Value</th>
                                                <th>Gross Weight</th>
                                                <th>Net Weight</th>
                                                <th>CBM</th>
                                                <th>Carton Qty</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (ViewBag.ExportInvoiceDetailsInformation != null)
                                            {
                                                foreach (var item in ViewBag.ExportInvoiceDetailsInformation)
                                                {
                                                    <tr class="txtMultmasterlcdetails">
                                                        <td>
                                                            @*@Html.CheckBox("0")*@
                                                            0
                                                        </td>
                                                        <td>
                                                            0
                                                        </td>
                                                        <td>
                                                            @item.MasterLCDetailsID
                                                        </td>

                                                        <td>
                                                            @item.StyleName
                                                        </td>
                                                        <td>
                                                            @item.ExportPONo
                                                        </td>
                                                        <td>
                                                            @Convert.ToString(string.Format("{0:dd-MMM-yy}", @item.ShipmentDate))
                                                        </td>
                                                        <td>
                                                            @item.Destination
                                                        </td>

                                                        <td>
                                                            @item.OrderQty
                                                        </td>
                                                        <td>
                                                            @item.UnitMasterId
                                                        </td>

                                                        <td>
                                                            @item.UnitPrice
                                                        </td>
                                                        <td>
                                                            @item.TotalValue
                                                        </td>

                                                        <td>
                                                            @item.OrderQty
                                                        </td>
                                                        <td>
                                                            @item.UnitPrice
                                                        </td>
                                                        <td>
                                                            @item.TotalValue
                                                        </td>

                                                        <td>
                                                            0
                                                        </td>
                                                        <td>
                                                            0
                                                        </td>
                                                        <td>
                                                            0
                                                        </td>
                                                        <td>
                                                            0
                                                        </td>
                                                        <td>
                                                            <a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>
                                                        </td>
                                                    </tr>
                                                }
                                            }

                                        </tbody>

                                        @*<tfoot>
                                                <tr>
                                                    <td colspan="1"></td>
                                                    <td class="text-right" colspan="4">
                                                        <h4> Total Qty & Value :</h4>
                                                    </td>
                                                    <td colspan="1">
                                                        <h4 class="ttlorderqtypidetails">0.00</h4>
                                                    </td>
                                                    <td colspan="1"></td>
                                                    <td colspan="1">
                                                        <h4 class="ttlordervaluepidetails">0.00</h4>
                                                    </td>
                                                    <td colspan="1"></td>
                                                </tr>
                                            </tfoot>*@
                                    </table>
                                </div>
                                <br />

                            </form>

                        </div>
                    </div>  @*Datatable Initializer tblproductserialsearch*@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    @*<button type="button" class="btn btn-primary">Save changes</button>*@
                </div>
            </div>
        </div>
    </div>
}


<script>


    $("#FirstNotifyPartyId").select2();
    $("#SecoundNotifyPartyId").select2();
    $("#ThirdNotifyPartyId").select2();

    $("#TradeTermId").select2();
    $("#PortOfLoadingId").select2();
    $("#MasterLCId").select2();
    $("#divmainmark").hide();


    

    $("#PortOfDischargeId").select2();
    $("#FinalDestinationId").select2();

    

    var tblmasterlcdetailsabc;


    $(document).ready(function () {

        tblmasterlcdetailsabc = $('#tblmasterlcdetails').dataTable({


            "aoColumns": [

                { "sClass": "checkbox", "visible": false },
                { "sClass": "ExportInvoiceDetailsId", "visible": false },
                { "sClass": "MasterLCDetailsID", "visible": false },
                { "sClass": "StyleNo", "visible": true },
                { "sClass": "ExportPoNo", "visible": true },
                { "sClass": "ShipmentDate", "visible": false },
                { "sClass": "Destination", "visible": false },
                { "sClass": "LCQty", "visible": true },
                { "sClass": "UnitMasterId", "visible": true },
                { "sClass": "UnitPrice", "visible": true },
                { "sClass": "TotalValue", "visible": true },

                { "sClass": "InvoiceQty", "visible": false, render: $.fn.dataTable.render.number(',', '.', 0, '') },
                { "sClass": "InvoiceRate", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                { "sClass": "InvoiceValue", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },


                { "sClass": "GrossWeightLine", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                { "sClass": "NetWeightLine", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                { "sClass": "CBMLine", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                { "sClass": "CartonQty", "visible": false, render: $.fn.dataTable.render.number(',', '.', 0, '') },
                { "sClass": "action", "visible": true }

            ],
            //dom: '<"float-left">rt<"row"<"col-sm-4"l><"col-sm-4"><"col-sm-4"p>>',

            rowCallback: function (row) {
                $(row).addClass('txtMultmasterlcdetails');
            },
            select: "multi",
            columnDefs: [{
                targets: [-1],
                render: function () {
                    return "<button type='button'>=></button>"
                }
            }],
            buttons: [{
                extend: "selectRows",

                text: 'Attach To Export Invoice',
                action: function (e, sourceTable, button, config) {

                    var selectedRows = sourceTable.rows(".selected");
                    var mData = selectedRows.data();
                    selectedRows.remove().draw();
                    targetTable = $("#tblExportInvoice").DataTable();
                    $.each(mData, function (idx, item) {
                        targetTable.row.add(JSON.parse(JSON.stringify(item)));
                    })
                    targetTable.draw();
                    multInputsexportinvoice();
                }
            }],
            initComplete: function () {
                $("#tblmasterlcdetails button").on("click", function (evt) {

                    var t1 = $("#tblmasterlcdetails").DataTable();
                    var t2 = $("#tblExportInvoice").DataTable();
                    var tr = $(this).closest("tr");
                    var row = t1.row(tr);
                    var data = JSON.parse(JSON.stringify(row.data()));
                    //alert(data[0]);
                    row.remove().draw();
                    t2.row.add(data).draw();

                    multInputsexportinvoice();
                });
            },
            "bFilter": true,
            //"bSort": true,
            //"bInfo": true,
            //"async": true,
            "paging": true,
            //"retrieve": true,
            "iDisplayLength": 20,
            "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
            //"scrollX": true,
            "oLanguage": { "sZeroRecords": "", "sEmptyTable": "" },
            dom: 'tBfip',
        }); //



    })



        function myFunctionSearch() {

        $('#myInputSearch').keyup(function () {
            //console.log($('#tblmasterlcdetails').DataTable().rows().data());
            //console.log(tblmasterlcdetailsabc.rows().data());

            //alert('test');
            //$('#tblmasterlcdetails').search($(this).val()).draw();

            tblmasterlcdetailsabc = $('#tblmasterlcdetails').DataTable();
            tblmasterlcdetailsabc.search($(this).val()).draw();
        })



    }


    function multInputsexportinvoice() {


        $(".ttlorderqtyexportinvoice").text(0);
        $(".ttlorderrateexportinvoice").text(0);
        $(".ttlordervalueexportinvoice").text(0);


        $(".ttlordergrossweightxportinvoice").text(0);
        $(".ttlordernetweightinvoice").text(0);
        $(".ttlordercbmlineinvoice").text(0);
        $(".ttlordercartonqtyexportinvoice").text(0);



        var totalorderqty = 0;
        var totalordervalue = 0;
        var avgrate = 0;


        var totalgrossweight = 0;
        var totalnetweight = 0;
        var totalcbm = 0;
        var totalcartonqty = 0;



        // for each row:

        $("tr.txtMultExportInvoice").each(function () {
            // get the values from this row:
            //alert($(this).text());

            //{ "sClass": "UnitPrice", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            //{ "sClass": "TotalValue", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            //{ "sClass": "InvoiceQty", "visible": true, render: $.fn.dataTable.render.number(',', '.', 0, '') },
            //{ "sClass": "InvoiceRate", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            //{ "sClass": "InvoiceValue", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') }






            var $val1 = $('.UnitPrice', this).text().replace(/[\$,]/g, '');
            var $val2 = $('.InvoiceQty', this).text().replace(/[\$,]/g, '');
            //var $val3 = $('.InvoiceRate', this).text().replace(/[\$,]/g, '');
            var $val3 = $('.InvoiceValue', this).text().replace(/[\$,]/g, '');
            var $val4 = 0;



            var $val5 = $('.GrossWeightLine', this).text().replace(/[\$,]/g, '');
            var $val6 = $('.NetWeightLine', this).text().replace(/[\$,]/g, '');
            var $val7 = $('.CBMLine', this).text().replace(/[\$,]/g, '');
            var $val8 = $('.CartonQty', this).text().replace(/[\$,]/g, '');


            var $val9 = $('.InvoiceRate', this).text().replace(/[\$,]/g, '');


            if ($val2 > 0) {

                if ($val9 > 0) {
                    $val4 = $val2 * $val9;
                }
                else {
                    $val4 = $val2 * $val1;
                    $('.InvoiceRate', this).text($val1);
                }
            
                $('.InvoiceValue', this).text($val4.toFixed(3));

            }
            else {
                $('.InvoiceValue', this).text(0);
                $('.InvoiceRate', this).text(0);

            }

            //alert($val1);
            //alert($val2);
            totalorderqty += parseFloat($val2);
            totalordervalue += parseFloat($val4.toFixed(3));


            totalgrossweight += parseFloat($val5);
            totalnetweight += parseFloat($val6);
            totalcbm += parseFloat($val7);
            totalcartonqty += parseFloat($val8);

            //avgrate = parseFloat($val1);
            //ttlqty += $val1;

            //});
            //alert(totalorderqty);
            //$(".subtotalamount").text(mult);



        });






        avgrate = (totalordervalue / totalorderqty);



        $(".ttlorderqtyexportinvoice").val(totalorderqty.toLocaleString());
        $(".ttlorderqtyexportinvoice").text(totalorderqty.toLocaleString());

        $(".ttlorderrateexportinvoice").val(avgrate.toFixed(3));
        $(".ttlorderrateexportinvoice").text(avgrate.toFixed(3));


        $(".ttlordervalueexportinvoice").val(totalordervalue.toLocaleString());
        $(".ttlordervalueexportinvoice").text(totalordervalue.toLocaleString());


        $(".ttlordergrossweightexport").val(totalgrossweight.toLocaleString());
        $(".ttlordergrossweightexport").text(totalgrossweight.toLocaleString());

        $(".ttlordernetweightexport").val(totalnetweight.toLocaleString());
        $(".ttlordernetweightexport").text(totalnetweight.toLocaleString());

        $(".ttlordercbmlineexport").val(totalcbm.toLocaleString());
        $(".ttlordercbmlineexport").text(totalcbm.toLocaleString());

        $(".ttlordercartonqtyexport").val(totalcartonqty.toLocaleString());
        $(".ttlordercartonqtyexport").text(totalcartonqty.toLocaleString());





        $("#TotalInvoiceQty").val(totalorderqty);//---fahad
        $("#TotalInvoiceQty").text(totalorderqty);//---fahad

        $("#TotalValue").val(totalordervalue);//---fahad
        $("#TotalValue").text(totalordervalue);//---fahad

        $("#Rate").val(avgrate.toFixed(3));//---fahad
        $("#Rate").text(avgrate.toFixed(3));//---fahad


        $("#GrossWeight").val(totalgrossweight);//---fahad
        $("#GrossWeight").text(totalgrossweight);//---fahad

        $("#NetWeight").val(totalnetweight);//---fahad
        $("#NetWeight").text(totalnetweight);//---fahad

        $("#CBM").val(totalcbm);//---fahad
        $("#CBM").text(totalcbm);//---fahad

        $("#TotalCartonQty").val(totalcartonqty);//---fahad
        $("#TotalCartonQty").text(totalcartonqty);//---fahad



        var totalorderqty = 0;
        var totalordervalue = 0;
        var avgrate = 0;

        $("tr.txtMultExportInvoiceMaster").each(function () {

            var $val1 = $('.Qty', this).text().replace(/[\$,]/g, '');
            var $val2 = $('.Value', this).text().replace(/[\$,]/g, '');

            totalorderqty += parseFloat($val1);
            totalordervalue += parseFloat($val2);

        });

        $(".ttlorderqtymaster").val(totalorderqty.toLocaleString());
        $(".ttlorderqtymaster").text(totalorderqty.toLocaleString());

        $(".ttlordervaluemaster").val(totalordervalue.toLocaleString());
        $(".ttlordervaluemaster").text(totalordervalue.toLocaleString());



        $("#TotalShipped").val(totalorderqty);//---fahad
        $("#TotalShipped").text(totalorderqty);//---fahad


    }

     function ExportInvoice_delete() {
         var InvoiceId = $("#InvoiceId").val();
        //alert(SalesId);
        $.ajax({

            url: '@Url.Action("Delete", "ExportInvoiceMasters")',
            //url: '@Url.Action("Delete")',
            data: JSON.stringify({ id: InvoiceId }), //use id here
            //data: JSON.stringify(salesmain),
            type: 'POST',
            async: true,
            contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {

                if (result.Success == "1") {




                    toastr.error('Data Delete Successfully');
                    //window.location.href = "/Invoice/index";

                     window.setTimeout(function () {

                            // Move to a new location or you can do something else
                                 window.location.href = '@Url.Action("Index", "ExportInvoiceMasters")';

                        }, 500);
                }
                else {
                    //alert(result.ex);
                    if (!result.success) {
                        for (var error in result.errors) {
                            $('#errorMessages').append(error + '<br />');
                        }
                    }
                }
            },
            error: function () {
                toastr.error('Unable to Delete');
            }
        });
    }


    var x = "@ViewBag.MasterLCIDNo";
    if (x > 0) {
        $('#MasterLCId').val("@ViewBag.MasterLCIDNo");
    }
    else {

    }


</script>
<script>



    var tblexportordermain = $('#tblexportordermain').dataTable({

        "aoColumns": [

            { "sClass": "InvNo", "visible": true },
            { "sClass": "InvDate", "visible": true },
            { "sClass": "Qty", "visible": true },
            { "sClass": "Value", "visible": true },
            { "sClass": "Action", "visible": true }
            //,                { "sClass": "OrderValue", "visible": true, render: $.fn.dataTable.render.number(',', '.', 0, '') },

        ],
        "bFilter": false,
        "bSort": false,
        "bInfo": false,
        "paging": true,
        "iDisplayLength": 50,
        "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
        rowCallback: function (row) {
            $(row).addClass('txtMultExportInvoiceMaster');
        }
    })

    $('#BuyerId').attr("disabled", true);
    //$('#PortOfLoadingId').attr("disabled", true);
    $('#CommercialCompanyId').attr("disabled", true);
    //$('#ShipModeId').attr("disabled", true);
    //$('#DestinationId').attr("disabled", true);
    $('#TotalLCQty').attr("disabled", true);


    $('#NetWeight').attr("disabled", true);
    $('#GrossWeight').attr("disabled", true);
    $('#CBM').attr("disabled", true);
    $('#TotalCartonQty').attr("disabled", true);




    //MasterLC_Info();
    ExportOrderSummaryGrid();

    //$('#SupplierId').attr("disabled", true);

    $('#myform').submit(function () {
        $('select').removeAttr('disabled');
        //alert('ok');
    });

    $('#MasterLCId').change(function () {

        if ($('#MasterLCId').val() > 0) {

            //alert('masterlcidchange');
            MasterLC_Info();
            NotifyParty_Info();
            ExportOrderSummaryGrid();
            multInputsexportinvoice();
        }
        else {
            alert('Please Select Master LC Information First.')
        }


    })




    function ExportOrderSummaryGrid() {
        tblexportordermain = $('#tblexportordermain').DataTable();
        tblexportordermain
            .clear()
            .draw();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetExportInvoiceSummaryByMasterLCId", "ExportInvoiceMasters")',
            dataType: 'json',
            async: false,
            data: { id: $('#MasterLCId').val() },
            success: function (data) {
                //console.log(data);
                //alert('test');
                for (var i = 0; i < data.length; i++) {
                    $('#tblexportordermain').dataTable().fnAddData([data[i].InvoiceNo, data[i].InvoiceDate, data[i].TotalInvoiceQty, data[i].TotalValue,
                        ' <span data-toggle="tooltip" title="Commercial Inv. Report[Export]"> <a class="far fa-file-pdf btn btn-outline-success btn-xs" href="/ExportInvoiceMasters/PrintCIE/'+data[i].InvoiceId+'?type=pdf" target="_blank"> </a> </span>'

                    ]);

                   // alert(data[i].MasterLCId); 'class= "OrderValue"' +
                }

            },
            error: function (ex) {
                alert('Failed.' + ex);
            }
        });
    }

      function MasterLC_Info() {

                var MyAppUrlSettings = {
                MyUsefulUrl : '@Url.Action("MasterLCInfoByMasterLCId", "ExportInvoiceMasters")'
                }

                $.ajax({
                type: 'POST',
                url: MyAppUrlSettings.MyUsefulUrl,
                dataType: 'json',
                async: false,
                    data: { id: $("#MasterLCId").val() },

                        success: function (data) {
                            //alert('working');
                            console.log(data);

                            $("#BuyerId").val(data.BuyerId).show();

                            //$("#PortOfLoadingId").val(data.PortOfLoadingId).show();
                            //$("#PortOfDischargeId").val(data.PortOfDischargeId).show();

                            $("#CommercialCompanyId").val(data.CommercialCompanyId).show();
                            //$("#ShipModeId").val(data.ShipModeId).show();


                            //$("#DestinationId").val(data.DestinationId).show();
                            $("#TotalLCQty").val(data.TotalLCQty).show();
                            $("#MasterLCId").val(data.MasterLCId).show();

                    },
                error: function (ex) {
                alert('Failed.' + ex);
                    }
                    });
                return false;

    };



    function NotifyParty_Info() {

        //alert('prdsearch');
        $("#FirstNotifyPartyId").empty();
        $("#SecoundNotifyPartyId").empty();
        $("#ThirdNotifyPartyId").empty();

        //$("#ProductDescription").val("=N/A=");
        //$("#UnitPrice").val(0);
        //alert('notifyparty');



            $.ajax({
                type: 'POST',
                url: '@Url.Action("getNotifyPartyList", "ExportInvoiceMasters")',
                dataType: 'json',
                async: false,
                data: { id: $("#BuyerId").val() },
                success: function (data) {
                    var s = '<option value="-1">--Please Select--</option>';
                    //$.each(data, function (i, data) {
                    //    $("#Product").append('<option value="'+ data.Value + '">'
                    //        + data.Text + '</option>');
                    //});
                    //var items = "";
                    //items += "<option value='' disabled selected>Please select</option>";
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    }
                    $("#FirstNotifyPartyId").html(s);
                    $("#SecoundNotifyPartyId").html(s);
                    $("#ThirdNotifyPartyId").html(s);

                    //var opts = data.length;
                    //for (var i = 0; i < opts; i++) {
                    //    if (ddl.options[i].value == data.StockUnitID) {
                    //        ddl.options[i].selected = true;
                    //        break;
                    //    }
                    //} 


                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };


    function CurrentDate() {
        var date = new Date();
        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
            "Aug", "Sep", "Oct", "Nov", "Dec"];
        var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
        return val;
    }
    if ($('h2').text() == "Export Invoice Edit") {
        if ($("#InvoiceDate").val() == "01-Jan-1900")
        {
            $("#InvoiceDate").val('');
        }
    }
    else {
        $("#InvoiceDate").val(CurrentDate());
        $("#ExfactoryDate").val(CurrentDate());
        $("#OnboardDate").val(CurrentDate());
        $("#ExpDate").val(CurrentDate());
        $("#BLDate").val(CurrentDate());


    }
   // $(".datepicker").datepicker();
    $("#InvoiceDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');
            $(this).addClass('ui-state-highlight');
            var dateFormat = $("#InvoiceDate").datepicker("option", "dateFormat");
            //setter
            $("#InvoiceDate").datepicker("option", "dateFormat", 'dd-M-yy');
        }
    });

    $("#ExfactoryDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');
            $(this).addClass('ui-state-highlight');
            var dateFormat = $("#ExfactoryDate").datepicker("option", "dateFormat");
            //setter
            $("#ExfactoryDate").datepicker("option", "dateFormat", 'dd-M-yy');
        }
    });

    $("#OnboardDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');
            $(this).addClass('ui-state-highlight');
            var dateFormat = $("#OnboardDate").datepicker("option", "dateFormat");
            //setter
            $("#OnboardDate").datepicker("option", "dateFormat", 'dd-M-yy');
        }
    });


    $("#ExpDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');
            $(this).addClass('ui-state-highlight');
            var dateFormat = $("#ExpDate").datepicker("option", "dateFormat");
            //setter
            $("#ExpDate").datepicker("option", "dateFormat", 'dd-M-yy');
        }
    });

    $("#BLDate").datepicker({
        onSelect: function (date) {
            // Your CSS changes, just in case you still need them
            $('a.ui-state-default').removeClass('ui-state-highlight');
            $(this).addClass('ui-state-highlight');
            var dateFormat = $("#BLDate").datepicker("option", "dateFormat");
            //setter
            $("#BLDate").datepicker("option", "dateFormat", 'dd-M-yy');
        }
    });


        var x = "@ViewBag.MasterLCIDNo";
        if (x > 0) {
            $('#MasterLCId').val("@ViewBag.MasterLCIDNo");
        }
        else
        {

        }

        function MusterLCId_load() {
            var MasterLCId = 0;
            MasterLCId = $('#MasterLCId').val();

            var y = "@ViewBag.Title";
            if (y == "Create") {
                window.location.href = "Create?MasterLCId=" + MasterLCId;

            }
            else {
                window.location.href = "?MasterLCId=" + MasterLCId;
            }

        };



    function ExportInvoice_save() {
        // Step 1: Read View Data and Create JSON Object
        if (!$("#myform").valid()) {
            alert('Please Fill Up All Necessary Information Correctly.');
            return false;
        }

        // Creating Detail Json Object , "DeliveryTerm": ""
        var ExportInvoiceDetail = {
            "ExportInvoiceDetailsId": "", "InvoiceId": "", "MasterLCDetailsID": "", "StyleNo": "", "ExportPoNo": "", "LCQty": "", "UnitMasterId": "", "InvoiceQty": "", "InvoiceRate": "", "InvoiceValue": "", "Destination": "", "ShipmentDate": "", "GrossWeightLine": "", "NetWeightLine": "", "CBMLine": "", "CartonQty": ""
        };

        var ExportInvoiceMaster = {
            "InvoiceId": "", "InvoiceNo": "", "InvoiceDate": "", "TotalShipped": "", "BalanceShip": "", "MasterLCId": "", "BuyerId": "", "FirstNotifyPartyId": "", "SecoundNotifyPartyId": "", "ThirdNotifyPartyId": "" , "TradeTermId": "", "PortOfLoadingId": "", "PortOfDischargeId": "",
            "DestinationId": "", "ShipModeId": "", "ExfactoryDate": "", "OnboardDate": "", "ExpNo": "", "ExpDate": "", "VesselName": "", "VoyageNo": "", "BLNo": "", "BLDate": "", "GoodsDescription": "", "CartonMeasurement": "", "MainMark": "", "TotalInvoiceQty": "",
            "Rate": "", "TotalValue": "", "CommercialCompanyId": "", "SupplierId": "",
            "NetWeight": "", "GrossWeight": "", "CBM": "", "TotalCartonQty": "", "PackingType": "" ,
            "ExportInvoiceDetails": []
        };

        // Creating Masters Json Object

        // Set Invoice Main Value
        ExportInvoiceMaster.InvoiceId = $("#InvoiceId").val();
        ExportInvoiceMaster.InvoiceNo = $("#InvoiceNo").val();

        ExportInvoiceMaster.InvoiceDate = $("#InvoiceDate").val();
        //ExportInvoiceMaster.DeliveryTerm = $("#DeliveryTerm").val();
        ExportInvoiceMaster.TotalShipped = $("#TotalShipped").val();
        ExportInvoiceMaster.BalanceShip = $("#BalanceShip").val();
        ExportInvoiceMaster.MasterLCId = $("#MasterLCId").val();

        ExportInvoiceMaster.BuyerId = $("#BuyerId").val();

        ExportInvoiceMaster.FirstNotifyPartyId = $("#FirstNotifyPartyId").val();
        ExportInvoiceMaster.SecoundNotifyPartyId = $("#SecoundNotifyPartyId").val();
        ExportInvoiceMaster.ThirdNotifyPartyId = $("#ThirdNotifyPartyId").val();

        ExportInvoiceMaster.TradeTermId = $("#TradeTermId").val();


        ExportInvoiceMaster.PortOfLoadingId = $("#PortOfLoadingId").val();
        ExportInvoiceMaster.PortOfDischargeId = $("#PortOfDischargeId").val();

        ExportInvoiceMaster.DestinationId = $("#DestinationId").val();
        ExportInvoiceMaster.ShipModeId = $("#ShipModeId").val();
        ExportInvoiceMaster.ExfactoryDate = $("#ExfactoryDate").val();
        ExportInvoiceMaster.OnboardDate = $("#OnboardDate").val();
        ExportInvoiceMaster.ExpNo = $("#ExpNo").val();
        ExportInvoiceMaster.ExpDate = $("#ExpDate").val();


        ExportInvoiceMaster.VesselName = $("#VesselName").val();
        ExportInvoiceMaster.VoyageNo = $("#VoyageNo").val();


        ExportInvoiceMaster.BLNo = $("#BLNo").val();
        ExportInvoiceMaster.BLDate = $("#BLDate").val();
        ExportInvoiceMaster.GoodsDescription = $("#GoodsDescription").val();
        ExportInvoiceMaster.CartonMeasurement = $("#CartonMeasurement").val();
        ExportInvoiceMaster.MainMark = $("#MainMark").val();

        ExportInvoiceMaster.TotalInvoiceQty = $("#TotalInvoiceQty").val();
        ExportInvoiceMaster.Rate = $("#Rate").val();
        ExportInvoiceMaster.TotalValue = $("#TotalValue").val();
        ExportInvoiceMaster.CommercialCompanyId = $("#CommercialCompanyId").val();
        ExportInvoiceMaster.SupplierId = $("#SupplierId").val();

        ExportInvoiceMaster.NetWeight = $("#NetWeight").val();
        ExportInvoiceMaster.GrossWeight = $("#GrossWeight").val();
        ExportInvoiceMaster.CBM = $("#CBM").val();
        ExportInvoiceMaster.TotalCartonQty = $("#TotalCartonQty").val();
        ExportInvoiceMaster.PackingType = $("#PackingType").val();




        ////Invoice subs data
        var oTable = $('#tblExportInvoice').dataTable().fnGetData();
        for (var i = 0; i < oTable.length; i++) {
            //alert(oTable.length);
            //var oTableRow = oTable[i];
            //alert(oTableRow);
            //alert($('h2').text());
            // IF This view is for edit then it will read InvoiceId from Hidden field
            if (oTable[i][11] > 0) {

                if ($('h2').text() == "Export Invoice Edit") {
                    ExportInvoiceDetail.InvoiceId = $('#InvoiceId').val();



                }
                else {

                    ExportInvoiceDetail.InvoiceId = 0;

                }

                //alert('found');

                ExportInvoiceDetail.ExportInvoiceDetailsId = oTable[i][1];

                ExportInvoiceDetail.MasterLCDetailsID = oTable[i][2];
                ExportInvoiceDetail.StyleNo = oTable[i][3];
                ExportInvoiceDetail.ExportPoNo = oTable[i][4];
                ExportInvoiceDetail.Destination = oTable[i][6];
                ExportInvoiceDetail.ShipmentDate = oTable[i][5];
                ExportInvoiceDetail.LCQty = oTable[i][7];
                ExportInvoiceDetail.UnitMasterId = oTable[i][8];

                ///alert(oTable[i][11]);
                ExportInvoiceDetail.InvoiceQty = oTable[i][11];
                ExportInvoiceDetail.InvoiceRate = oTable[i][12];
                ExportInvoiceDetail.InvoiceValue = oTable[i][11] * oTable[i][12];//oTable[i][13]; /// need to give solution by fahad

                ExportInvoiceDetail.GrossWeightLine = oTable[i][14];
                ExportInvoiceDetail.NetWeightLine = oTable[i][15];
                ExportInvoiceDetail.CBMLine = oTable[i][16];
                ExportInvoiceDetail.CartonQty = oTable[i][17];



                ExportInvoiceMaster.ExportInvoiceDetails.push(ExportInvoiceDetail);



                var ExportInvoiceDetail = {
                    "ExportInvoiceDetailsId": "", "InvoiceId": "", "MasterLCDetailsID": "", "StyleNo": "", "ExportPoNo": "", "LCQty": "", "UnitMasterId": "", "InvoiceQty": "", "InvoiceRate": "", "InvoiceValue": "", "Destination": "", "ShipmentDate": "", "GrossWeightLine": "", "NetWeightLine": "", "CBMLine": "", "CartonQty": ""
                };
            }

        }
        // Step 1: Ends Here
        // alert('4');
        console.log(ExportInvoiceMaster);
        //alert('checking');


        // Set 2: Ajax Post
        // Here i have used ajax post for saving/updating information
        $.ajax({
            //url: '/COM_MasterLC/Create',
            url: '@Url.Action("Create", "ExportInvoiceMasters")',

            data: JSON.stringify(ExportInvoiceMaster),
            type: 'POST',
            contentType: 'application/json;',
            async: true,
            dataType: 'json',

            success: function (result) {


                if (result.Success == "1") {
                    toastr.success('Data Save Successfully');
                    //window.location.href = "/Invoice/index";

                     window.setTimeout(function () {

                            // Move to a new location or you can do something else
                                 window.location.href = '@Url.Action("Index", "ExportInvoiceMasters")';

                        }, 500);


                }
                else {
                    alert(result.ex);
                }
            }
        });
    }







    //$('#tblExportInvoice tr').click(function (event) {
    //    if (event.target.type !== 'checkbox') {
    //        $(':checkbox', this).trigger('click');
    //    }
    //});

    var tblExportInvoice = $('#tblExportInvoice').dataTable({

        "aoColumns": [

            { "sClass": "checkbox", "visible": false },
            { "sClass": "ExportInvoiceDetailsId", "visible": false },
            { "sClass": "MasterLCDetailsID", "visible": false },
            { "sClass": "StyleNo", "visible": true },
            { "sClass": "ExportPoNo", "visible": true },
            { "sClass": "ShipmentDate", "visible": true },
            { "sClass": "Destination", "visible": true },
            { "sClass": "LCQty", "visible": true },
            { "sClass": "UnitMasterId", "visible": true },
            { "sClass": "UnitPrice", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            { "sClass": "TotalValue", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },



            { "sClass": "InvoiceQty", "visible": true, render: $.fn.dataTable.render.number(',', '.', 0, '') },
            { "sClass": "InvoiceRate", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            { "sClass": "InvoiceValue", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },


            { "sClass": "GrossWeightLine", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            { "sClass": "NetWeightLine", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            { "sClass": "CBMLine", "visible": true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
            { "sClass": "CartonQty", "visible": true, render: $.fn.dataTable.render.number(',', '.', 0, '') },
            { "sClass": "action", "visible": true }

        ],

        "tableTools": {
            "sRowSelector": "td:not(:first-child)"
        },
        dom: 'tBfip',
        select: "multi",
        columnDefs: [{
            targets: [-1],
            render: function () {
                return "<button type='button'>=></button>"
            }
        }],
        buttons: [{
            extend: "selectRows",

            text: 'Detach From Export Invoice',
            action: function (e, sourceTable, button, config) {

                var selectedRows = sourceTable.rows(".selected");
                var mData = selectedRows.data();
                selectedRows.remove().draw();
                targetTable = $("#tblmasterlcdetails").DataTable();
                $.each(mData, function (idx, item) {
                    targetTable.row.add(JSON.parse(JSON.stringify(item)));
                })
                targetTable.draw();
                multInputsexportinvoice();
            }
        }],
        initComplete: function () {
            $("#tblExportInvoice button").on("click", function (evt) {

                var t1 = $("#tblExportInvoice").DataTable();
                var t2 = $("#tblmasterlcdetails").DataTable();
                var tr = $(this).closest("tr");
                var row = t1.row(tr);
                var data = JSON.parse(JSON.stringify(row.data()));
                //alert(data[0]);
                row.remove().draw();
                t2.row.add(data).draw();

                multInputsexportinvoice();
            });
        },
        //select: {
        //    style: 'os',
        //    selector: 'td:first-child'
        //},
        //'columnDefs': [
        //    {
        //        'targets': 0,
        //        'checkboxes': {
        //            'selectRow': true
        //        }
        //    }
        //],

        //'select': {
        //    'style': 'multi'
        //},

        "bFilter": true,
        //"bSort": true,
        "bInfo": true,
        "async": true,
        "paging": true,
        "retrieve": true,
        "iDisplayLength": 20,
        "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
        "scrollX": true,
        //"scrollCollapse": true,
        rowCallback: function (row) {
            $(row).addClass('txtMultExportInvoice');
        }
        //,select: "multi"
    })


    //function cbChange(obj) {


    //    //obj.checked = true;
    //    ////console.log(obj);


    //    //var table = $('#tbl').DataTable();
    //    ////var tableserial = $('#tblserial').DataTable();
    //    //var data = null;

    //    //console.log(obj);
    //    //alert(obj.rowIndex)
    //    //alert($(this).index());



    //    var cell;
    //    if (obj.checked == true) {

    //        data = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).data();
    //        var dataindex = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).index();
    //        var InvoiceQty = data[7];
    //        cell = tblExportInvoice.cell(dataindex, 11);

    //        cell.data(parseFloat(InvoiceQty));


    //    }
    //    else {

    //        //var cbs = document.getElementsByClassName("clickchk");
    //        //cell = tblExportInvoice.cell(i, 11);

    //        ////console.log(cbs);
    //        //for (var i = 0; i < cbs.length; i++) {

    //        //    if (cbs[i].checked == false && cell.data() > 0) {


    //        //        cell.data(parseFloat(0));

    //        //    };
    //        //}


    //        //data = tblExportInvoice.row($('input[type=checkbox]:').parents('tr')).data();
    //        //var dataindex = tblExportInvoice.row($('input[type=checkbox]:false').parents('tr')).index();
    //        //var cell = tblExportInvoice.cell(dataindex, 11);
    //        //cell.data(parseFloat(0));

    //    }
    //    multInputsexportinvoice();


    //}


    $(document).ready(function () {

        ///problem



        //tblExportInvoice.rows().every(function () {
        //    if (this.data()[0].includes('checked="checked"')) {
        //        this.select();
        //    } else {
        //        this.deselect();
        //    }
        //});




        //$('#tblExportInvoice input[type="checkbox"]').click(function () {

        //    data = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).data();

        //    var checkboxvalue = data[0];


        //    alert(checkboxvalue);
        //    //console.log(data);

        //    //alert(data[3]);
        //    //var termsid = data[0];
        //    var InvoiceQty  = data[7];

        //    alert(InvoiceQty);

        //    var the_row = tblExportInvoice.row($(this).parents('tr'))
        //    // this updates the display value to "foo"
        //    tblExportInvoice.cell({ row: the_row.index(), column: 11 }).data(InvoiceQty).draw()
        //    multInputsexportinvoice();


        //});

        //$('#tblExportInvoice').on('click', 'input[type="checkbox"]', function () {
        //    console.log('best', 'click');
        //})


        tblExportInvoice = $('#tblExportInvoice').DataTable();
        tblExportInvoice.MakeCellsEditable({
            "onUpdate": myCallbackFunction,
            "inputCss": 'my-input-class',
            "columns": [ 11,12 , 14 , 15 , 16, 17],
            "allowNulls": {
                "columns": [11, 12, 14, 15, 16, 17],
                "errorClass": 'error'
            },
            "inputTypes": [
                {
                    "column": 11,
                    "type": "int",
                    "options": null
                }
                //{
                //    "column": 15,
                //    "type": "text",
                //    "options": null
                //},
                //{
                //    "column": 16,
                //    "type": "text",
                //    "options": null
                //},
                //{
                //    "column": 17,
                //    "type": "text",
                //    "options": null
                //}

            ]
        });

        //tblExportInvoice.draw();
        tblExportInvoice.draw(true);
        ///need to check by fahad

        //$('#tblExportInvoice tr').click(function (e) {



        //    var data = null;
        //    var $checkbox = $(this).find('input');
        //    var invoiceqtyf = $(this).find('.InvoiceQty');
        //    var LCQtyf = $(this).find('.LCQty');


        //    var isChecked = $checkbox.prop('checked');

        //    if (isChecked) {

        //        //alert('checked');
        //        //alert(LCQtyf.text().replace(/[\$,]/g, ''));


        //        invoiceqtyf.text(LCQtyf.text().replace(/[\$,]/g, ''));

        //        //data = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).data();

        //        //var dataindex = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).index();
        //        //var InvoiceQty = data[7];
        //        //cell = tblExportInvoice.cell(dataindex, 11);

        //        //cell.data(parseFloat(InvoiceQty));
        //        //$checkbox.removeProp('checked');
        //    }
        //    else {
        //        invoiceqtyf.text('0');
        //        //alert('not checked');

        //        //data = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).data();

        //        //var dataindex = tblExportInvoice.row($('input[type=checkbox]:checked').parents('tr')).index();
        //        //var InvoiceQty = data[7];
        //        //cell = tblExportInvoice.cell(dataindex, 11);

        //        //cell.data(parseFloat(0));

        //        //$checkbox.prop('checked', 'checked');
        //    }
        //});


        function myCallbackFunction(updatedCell, updatedRow, oldValue) {

            console.log("The new value for the cell is: " + updatedCell.data());
            console.log("The old value for that cell was: " + oldValue);
            console.log("The values for each cell in that row are: " + updatedRow.data());
            //console.log("The values One cell in that row are: " + updatedRow.data()[3]);
            //console.log("The values One cell in that row are: " + updatedRow.data()[4]);

            //var quantity = updatedRow.data()[11];
            //var unitprice = updatedRow.data()[12];
            //alert(quantity);
            //alert(unitprice);


            multInputsexportinvoice();


            //$(document).ready(function () {
            //    $(".txtMult").keyup(multInputs);


            //    $(".input").focus(function () {
            //        $(this).parent().addClass("focus");
            //    })

            //});

        }







        //multInputsexportinvoice();

        //GroupLC_load();



        multInputsexportinvoice();

        //if ($('#MasterLCId').val() > 0) {

        //    MasterLC_Info();
        //    NotifyParty_Info();
        //}



        //alert($('h2').text());


        if ($('#InvoiceId').val() > 0) {

            $('#MasterLCId').attr("disabled", true);
            $('#btnmusterlcid').attr("disabled", true);

            if ($('#MasterLCId').val() > 0) {

                MasterLC_Info();
              
            }

        }
        else {

            if ($('#MasterLCId').val() > 0) {

                MasterLC_Info();
                NotifyParty_Info();
            }

        }


    });




</script>
