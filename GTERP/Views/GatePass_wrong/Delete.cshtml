@model GTERP.Models.Product

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Product</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.vPrimaryCategory.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.vPrimaryCategory.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProductName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.vProductCountry.CurrencyShortName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.vProductCountry.CurrencyShortName)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.CostPrice)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.vProductCountry.CurrencySymbol)
            @Html.DisplayFor(model => model.CostPrice)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SalePrice)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.vProductCountry.CurrencySymbol)
            @Html.DisplayFor(model => model.SalePrice)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ProductImage)
        </dt>


        <dd class="form-group">

            @*@Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })*@

            @*<div class="col-md-2">*@
            @*@Html.HiddenFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })*@


            @if (Model.ProductImage == null)
            {

                <img src="@Url.Content("uploads/"+0 + ".png")" class="img-thumbnail" multiple />
            }
            else
            {
                <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ProductImage))" class="img-thumbnail" width="15%">
            }

            @*@Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })*@
            @*</div>*@
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImagePath)
        </dt>
        <dd class="form-group">
            @*<img src="@Url.Content("uploads/"+item.ProductId + ".jpg")" class="img-thumbnail" width="15%" multiple />*@
            <img id="currentPhoto" src="@Url.Content('/'+Model.ImagePath +Model.ProductId + Model.FileExtension)" onerror="this.onerror=null; this.src='/uploads/0.png'" class="img-thumbnail">
            @*<img src='@Url.Action("uploads", "App_Data", new { id = item.ProductId+".jpg" })' />*@
        </dd>


    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
