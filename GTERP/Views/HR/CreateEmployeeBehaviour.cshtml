   @model GTERP.Models.HR_Emp_Behave

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>


@using (Html.BeginForm("CreateEmployeeBehaviour", "HR", FormMethod.Post))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container" style="max-width: 700px;">
        <div class="card">
            <div class="card-header">
                <h4 id="styletext">Employee Behaviour Entry - @ViewBag.Title</h4>
            </div>
            <div class="card-body">
                @if (Model != null)
                {
                <input type="hidden" id="BehaveId" name="BehaveId" value="@Model.BehaveId" />
                }
                else
                {
                <input type="hidden" asp-for="BehaveId" value="0" />
                }
                <div id="modalbodyfahad" class="row">
                    <div class="col-md-12 order-md-1">


                        <form class="needs-validation card p-4" novalidate>
                            <input type="hidden" asp-for="ComId" />
                            <input type="hidden" asp-for="UserId" />
                            <div class="container">
                                <div class="row">
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.EmpId)
                                                </span>
                                            </div>
                                            @Html.DropDownListFor(x => x.EmpId, new SelectList((IEnumerable<SelectListItem>
                                                )ViewBag.EmpId, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "EmpId" })

                                                @* @Html.DropDownList("EmpId", ViewBag.EmpId, "--Please Select--", htmlAttributes: new { @class = "form-control" }) *@
                                                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.dtNotice)
                                                </span>
                                            </div>
                                            @*@Html.EditorFor(model => model.DtReleased, new { htmlAttributes = new { @class = "form-control" } })*@
                                            <input type="text" asp-for="dtNotice" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.dtNotice, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.dtEvent)
                                                </span>
                                            </div>
                                            @*@Html.EditorFor(model => model.DtReleased, new { htmlAttributes = new { @class = "form-control" } })*@
                                            <input type="text" asp-for="dtEvent" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.dtEvent, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    @*///Neww add*@
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.NoticeType)
                                                </span>
                                            </div>
                                            @Html.DropDownListFor(x => x.NoticeType, new SelectList((IEnumerable<SelectListItem>
                                                )ViewBag.NoticeType, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "NoticeType" })

                                                @*@Html.DropDownList("NoticeType", ViewBag.NoticeType, "--Please Select--", htmlAttributes: new { @class = "form-control" }) *@
                                                @Html.ValidationMessageFor(model => model.NoticeType, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    @*rr*@
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.ViolenceDesc)
                                                </span>
                                            </div>
                                            @*@Html.EditorFor(model => model.DtSubmit, new { htmlAttributes = new { @class = "form-control" } })*@
                                            <input type="text" asp-for="ViolenceDesc" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.ViolenceDesc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.Decision)
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.Decision, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Decision, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row text-center my-2">
                    <br />
                    <div class="col-md-2"></div>
                    <div class="col-md-4 col-xs-12 d-block mx-auto">

                        @if (ViewBag.Title == "Create")
                        {
                        <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />
                        }
                        else if (ViewBag.Title == "Edit")
                        {
                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                        }
                        else if (ViewBag.Title == "Delete")
                        {
                        <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="Behavior_delete()">Delete</button>
                        }
                    </div>
                    <div>
                        @Html.ActionLink("Back", "EmployeeBehaviourList", "HR", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                    </div>
                    <div class="col-md-2"></div>

                </div>
            </div>
        </div>

       
    </div>

}

@section Scripts{
    <script>

        $("#EmpId").select2();
        $("#dtNotice,#dtEvent").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#dtNotice,#dtEvent").datepicker("option", "dateFormat");
                    //setter
                    $("#dtNotice,#dtEvent").datepicker("option", "dateFormat", 'dd-M-yy');
                }
            });


        function Behavior_delete() {

            var BehaveId = $("#BehaveId").val();
           // alert(DesigId);
            $.ajax({

                url: '@Url.Action("DeleteEmployeeBehaviour", "HR")',
                data: JSON.stringify({ id: BehaveId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    debugger;
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("EmployeeBehaviourList", "HR")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}






















