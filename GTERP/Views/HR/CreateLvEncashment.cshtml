@model GTERP.Models.HR_LvEncashment

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateLvEncashment", "HR", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container">
        <div class="row">
            <div class="col-md-8 offset-md-2 col-12">
                @if (Model != null)
                {
                <input type="hidden" asp-for="LvEncashmentId" />
                }
                else
                {
                <input type="hidden" asp-for="LvEncashmentId" value="0" />
                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext">Leave Encashment Entry - @ViewBag.Title</h4>
                        </div>
                        <div class="card-body">
                            <form class="needs-validation" novalidate>
                                <input type="hidden" asp-for="ComId" />
                                <input type="hidden" asp-for="UserId" />
                                <div class="container">
                                    <div class="row">
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.EmpId)
                                                    </span>
                                                </div>
                                                <select asp-for="EmpId" asp-items="ViewBag.EmpId" class="form-control">
                                                    <option value="0">==N/A==</option>
                                                </select>
                                                @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LvEncashmentIYear)
                                                    </span>
                                                </div>
                                                <input type="text" asp-for="LvEncashmentIYear" class="form-control">
                                                @*@Html.EditorFor(model => model.LvEncashmentIYear, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.LvEncashmentIYear, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ReferenceNo)
                                                    </span>
                                                </div>
                                                <input asp-for="ReferenceNo" class="form-control">
                                                @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ELBalance)
                                                    </span>
                                                </div>
                                                <input type="text" asp-for="ELBalance" class="form-control" readonly>
                                                @*@Html.EditorFor(model => model.ELBalance, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.ELBalance, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TotalDays)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TotalDays, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.TotalDays, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DtFrom)
                                                    </span>
                                                </div>
                                                <input type="date" asp-for="DtFrom" class="form-control">
                                                @Html.ValidationMessageFor(model => model.DtFrom, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DtTo)
                                                    </span>
                                                </div>
                                                <input type="date" asp-for="DtTo" class="form-control" readonly>
                                                @Html.ValidationMessageFor(model => model.DtTo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DtFromNext)
                                                    </span>
                                                </div>
                                                <input type="date" asp-for="DtFromNext" class="form-control" readonly>
                                                @Html.ValidationMessageFor(model => model.DtFromNext, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DtToNext)
                                                    </span>
                                                </div>
                                                <input type="date" asp-for="DtToNext" class="form-control" readonly>
                                                @Html.ValidationMessageFor(model => model.DtToNext, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-8 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DtInput)
                                                    </span>
                                                </div>
                                                <input type="date" asp-for="DtInput" class="form-control">
                                                @Html.ValidationMessageFor(model => model.DtInput, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-4 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.IsELEnjoy)
                                                    </span>
                                                </div>
                                                <div class="input-group-append">
                                                    <span class="input-group-text">
                                                        @Html.CheckBoxFor(model => model.IsELEnjoy, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.IsELEnjoy, "", new { @class = "text-danger" })
                                                    </span>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                    <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                    <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="LvEncasment_delete()">Delete</button>
                                    }
                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "LvEncashmentList", "HR", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

       
    </div>

}

@section Scripts{
    <script>
       

    $("#EmpId").select2();

        $(document).ready(function () {

            $("form").on("submit", function () {
                var elv = parseInt($("#ELBalance").val());
                var tds = parseInt($("#TotalDays").val());
                if (tds < 1) {
                    toastr.warning("Toatal should be Greater than 0");
                    return false;
                }

                if (tds > elv) {
                    toastr.warning("The has not available balance")
                    return false;
                }
                    
            });

            


            $("#LvEncashmentIYear").change(function () {
                ELBaalnce();
            });

            $("#EmpId").change(function () {

                ELBaalnce();
            });

            function ELBaalnce() {
                 var empid = $("#EmpId").val();
                if (empid == "0") {
                    return false;
                }
                var year = $("#LvEncashmentIYear").val();

                if (year == "") {
                    $("#LvEncashmentIYear").focus();
                    return false;
                }


                $("#ELBalance").val(0);
                $.ajax({
                    url: '@Url.Action("GetLeaveBalance", "HR")',
                    data: { empid: empid,year :year }, //use id here
                    type: 'GET',
                    dataType: 'json',
                    success: function (result) {
                        if (result!=null) {
                            $("#ELBalance").val(result.EL);
                        }

                    },
                    error: function (err) {
                        toastr.error(err);
                    }
                });
            }

            $("#TotalDays").change(function () {

                dtCalculation();
            });

            function dtCalculation() {
                if ($("#DtFrom").val() == "") {
                    $("#DtFrom").focus();
                    return false;
                }

                if ($("#TotalDays").val() == "" || parseInt($("#TotalDays").val()) < 1) {
                    $("#TotalDays").focus();
                    return false;
                }
                var dtFrom = new Date($("#DtFrom").val());
               
                var ttlDays = parseInt($("#TotalDays").val());

                dtFrom.setDate(dtFrom.getDate() + ttlDays - 1);
                $("#DtTo").val(CurrentDate(dtFrom));
               
                dtFrom.setDate(dtFrom.getDate() + 1); //new date
                $("#DtFromNext").val(CurrentDate(dtFrom));
               
                dtFrom.setDate(dtFrom.getDate() + ttlDays - 1);
                $("#DtToNext").val(CurrentDate(dtFrom));

            }

            $("#DtFrom").change(function () {
                dtCalculation();
            })

            //$("#DtFrom").datepicker({
            //    changeMonth: true,
            //    changeYear: true,
            //    onSelect: function (date) {
            //        // Your CSS changes, just in case you still need them
            //        $('a.ui-state-default').removeClass('ui-state-highlight');
            //        $(this).addClass('ui-state-highlight');
            //        var dateFormat = $("#DtFrom").datepicker("option", "dateFormat");
            //        //setter
            //        $("#DtFrom").datepicker("option", "dateFormat", 'dd-M-yy');
            //        dtCalculation(); //for other date calculation
            //    }
            //});

            //$(".date")
            //    .datepicker({
            //        onSelect: function (dateText) {
            //            console.log("Selected date: " + dateText + "; input's current value: " + this.value);
            //        }
            //    })
            //    .on("change", function () {
            //        console.log("Got change event from field");
            //    });

            $('#LvEncashmentIYear').datepicker({
                changeMonth: false,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'yy',
                onClose: function (dateText, inst) {
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).datepicker('setDate', new Date(year, 0, 1));
                }

            });

        });

        function CurrentDate(da) {
            //var date = new Date(da);
            //var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
            //    "Aug", "Sep", "Oct", "Nov", "Dec"];
            //var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
            ////var val = `${date.getDate()}-Jul${date.getFullYear()}`;
            ////alert(date.getFullYear());
            //return val;

            var now = new Date(da);

            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);

            //var today = (day) + "-Jul-" + now.getFullYear() ;
            var today = now.getFullYear() + "-" + (month) + "-" + (day);

            return today;
        }

    function LvEncasment_delete() {

        var LvEncashmentId = $("#LvEncashmentId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteLvEncashment", "HR")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: LvEncashmentId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "1") {
                    customFile('1', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("LvEncashmentList", "HR")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


