@model IEnumerable<GTERP.Models.HR_Emp_Released>
@{
    ViewBag.Title = "Employee Released Info";
}
<div class="container-fluid">

    <div class="text-center">
        <div class="row mb-2">
            <div class="col-md-3 col-12">
                @Html.ActionLink("Employee Released Information", "CreateEmpReleased", null, null, new { @class = "btn btn-outline-info btn-block rounded-0", @id = "btnBack" })
            </div>
            <div class="col-md-9 col-12">
                <h2 id="styletext">Released List</h2>
            </div>
        </div>
    </div>

 @*Upload Excel File Start*@
   <div class="my-2">
    <form method="post" enctype="multipart/form-data" asp-action="EmpReleasedUploadFile">
        <div class="input-group input-group w-50" style="margin:0 auto;">
            <span class="input-group-btn input-group-prepend">
                <span class="btn btn-info rounded-0" onclick="$(this).parent().find('input[type=file]').click();">Browse</span>
                <input name="file" onchange="$(this).parent().parent().find('.form-control').html($(this).val().split(/[\\|/]/).pop());" style="display: none;" type="file" id="FileUpload1">
            </span>
            <span class="form-control border border-info" style="background: #f2f2f2e6;"></span>
            <button class="rounded-0 btn btn-info btn-sm" type="submit" id="btnUpload">Upload</button>
            <div style="padding-left:5px;">
                <a href="~/HR/DownloadSampleFormatReleased?file=SampleFormatReleased.xls" title="Download Sample Format"
                   class="btn btn-success rounded-0" target="_blank"><i class="mdi mdi-file-excel"></i> Sample Format</a>
            </div>
        </div>
    </form>
    </div>
@*Upload Excel File End*@
    <form class="card p-2">
        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
                <thead class="">
                    <tr>

                        <th>
                            @Html.DisplayNameFor(model => model.HR_Emp_Info.EmpCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HR_Emp_Info.EmpName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HR_Emp_Info.Cat_Designation.DesigName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DtReleased)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Remarks)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RelType)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.DtPresentLast)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DtSubmit)
                        </th>


                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        if (item.IsApprove == false)
                        {
                            <tr style="background-color:rgb(249 207 181)">

                                <td>
                                    [-@Html.DisplayFor(modelItem => item.HR_Emp_Info.EmpCode)]
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HR_Emp_Info.EmpName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HR_Emp_Info.Cat_Designation.DesigName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DtReleased)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RelType)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.DtPresentLast)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DtSubmit)
                                </td>

                                <td>

                                    <span data-toggle="tooltip" title="Edit!">
                                        @Html.ActionLink(" ", "EditEmpReleased", new { id = item.RelId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                    </span>
                                    <span data-toggle="tooltip" title="Delete!">
                                        @Html.ActionLink(" ", "DeleteEmpReleased", new { Id = item.RelId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                    </span>


                                </td>

                            </tr>
                        }
                        else
                        {
                            <tr>

                                <td>
                                    [-@Html.DisplayFor(modelItem => item.HR_Emp_Info.EmpCode)]
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HR_Emp_Info.EmpName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.HR_Emp_Info.Cat_Designation.DesigName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DtReleased)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RelType)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.DtPresentLast)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DtSubmit)
                                </td>

                                <td>

                                    <span data-toggle="tooltip" title="Edit!">
                                        @Html.ActionLink(" ", "EditEmpReleased", new { id = item.RelId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                    </span>
                                    <span data-toggle="tooltip" title="Delete!">
                                        @Html.ActionLink(" ", "DeleteEmpReleased", new { Id = item.RelId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                                    </span>


                                </td>

                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>




@section Scripts{
    <script>

        $(document).ready(function () {

            $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        //{
                        //    extend: 'copy',
                        //    text: '<i class="mdi mdi-content-copy"></i>',
                        //    className: 'btn-primary',
                        //    titleAttr: 'Copy to Clipboard'
                        //},
                        //{
                        //    extend: 'csv',
                        //    text: '<i class="mdi mdi-note-outline"></i>',
                        //    className: 'btn-secondary',
                        //    titleAttr: 'Export to csv'

                        //},
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        },
                        {
                            extend: 'print',
                            text: '<i class="mdi mdi-printer"></i>',
                            className: 'btn-info',
                            titleAttr: 'Print Table'
                        }

                    ]
                },
                "searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 25,
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                //responsive: true,
                // fixedColumns: {
                //    leftColumns: 2,
                //    rightColumns: 1
                //},
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                }
                ////"fixedColumns": {
                ////    "leftColumns": 2,

                ////},
                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });
        });

                                //$(".search_input").addClass('form-control input-lg col-xs-12');

    </script>
}

