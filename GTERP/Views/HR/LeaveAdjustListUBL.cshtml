@model GTERP.Models.HR_Leave_AdjustUbL
<link href="~/Content/ProjectLibFile/css/customCssFile/customFormStyle.css" rel="stylesheet" />
<style>
    .mCustomScrollbar {
        height: 300px;
        overflow: hidden;
    }
</style>

@*@using (Html.BeginForm("Index", "HolidaySetup", FormMethod.Post))
    {*@
<div class="card">
    <div class="form-header btn-info">
        <i class="fas fa-plus-square"></i> Rest Duty
        <div id="loading" style="display: inline;">
            <div id="loadingGif" style="display: inline;">
            </div>
        </div>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-md-8 col-12 card">
                @* <div id="monthLoadDiv">
                    <fieldset id="fieldsetDate" class="pt-2 border-bottom">
                        <div class="input-group mb-2">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    Date
                                </span>
                            </div>
                            <input type="text" id="DtMonth" class="form-control formInput" />
                            <div class="input-group-append">
                                <button id="loadButton" type="button" class="btn btn-primary" style="margin-top: 0;">
                                    <span class="d-none spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Load List
                                </button>
                            </div>
                        </div>
                    </fieldset>
                </div> *@
                <div class="table-responsive my-2">
                    <table id="holidaySetupTable" class="table table-sm table-striped trow table-hover text-nowrap" width="100%">
                        <thead>
                            <tr>
                                <th>Leave Id</th>
                                <th>Duty Date</th>
                                <th>Replace Date</th>
                                <th>Remarks</th>

                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </div>
            @*</fieldset>
            </div>
            </div>*@
            <div id="formDiv" class="col-md-4 col-12">
                <fieldset id="fieldsetForm" class="card p-3">
                    <div id="formTable">
                        @* @Html.HiddenFor(m => m.Id) *@
                        @Html.HiddenFor(x=>x.ComId)
                        <div class="form-group mb-2">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    
                                </div>
                                <input type="hidden" asp-for="Id" class="form-control formInput" id="LvId" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        Employee
                                    </span>
                                </div>
                                <select asp-for="EmpCode" asp-items="ViewBag.EmpCode" class="form-control">
                                    <option value="" selected>--Please Select--</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.EmpCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mb-2">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        Replace Date
                                    </span>
                                </div>
                                <input type="text" asp-for="ReplaceDate" class="form-control formInput" id="ReplaceDate" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        Duty Date
                                    </span>
                                </div>
                                <input type="text" asp-for="DutyDate" class="form-control formInput" id="DutyDate" />
                            </div>
                        </div>
                        <div class="form-group mb-2">
                            
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        @Html.LabelFor(m => m.Remark)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>

                    <div id="buttonDiv">
                        <p class="text-center">
                            <button id="saveButton" type="button" class="btn btn-success rounded-0">
                                <i class="fa fa-floppy-o"></i> Process
                            </button>
                            <button id="resetButton" type="button" class="btn btn-warning rounded-0">
                                <i class="fa fa-refresh"></i> Cancel
                            </button>
                            @* <button id="editButton" type="button" class="btn btn-primary rounded-0">
                                <i class="fa fa-trash-o"></i> Edit
                            </button> *@
                            <button id="deleteButton" type="button" class="btn btn-danger rounded-0">
                                <i class="fa fa-trash-o"></i> Delete
                            </button>
                        </p>

                    </div>
                </fieldset>

            </div>
        </div>

    </div>
</div>

@*}*@

@section Scripts{

    <script>


        var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

        function dateFormat(date) {
            let aDate = new Date(date);
            return `${aDate.getDate()}-${month[aDate.getMonth()]}-${aDate.getFullYear()}`;
        }

        var table;

        $(document).ready(function () {

            $("#ReplaceDate").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#ReplaceDate").datepicker("option", "dateFormat");
                    //setter
                    $("#ReplaceDate").datepicker("option", "dateFormat", 'dd-M-yy');
                }
            });

            $("#DutyDate").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#DutyDate").datepicker("option", "dateFormat");
                    //setter
                    $("#DutyDate").datepicker("option", "dateFormat", "dd-M-yy");
                }
            });
            $("#DtMonth").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#DtMonth").datepicker("option", "dateFormat");
                    //setter
                    $("#DtMonth").datepicker("option", "dateFormat", "dd-M-yy");
                }
            });

            $("#deleteButton").prop("disabled", true);
            $("#editButton").prop("disabled", true);
            $("#DutyDate").prop("disabled", false);
            $("#ReplaceDate").prop("disabled", false);


            $("#EmpId").change(function () {
                var selectedEmp = empInfos.find(serachEmp);
                if (selectedEmp != null) {
                    var dFormat = new Date(selectedEmp.DutyDate);
                    $("#DutyDate").val(`${dFormat.getDate()}-${month[dFormat.getMonth()]}-${dFormat.getFullYear()}`);
                    $("#EmpName").val(selectedEmp.EmpName);
                }
            });
            // $("#loading").css("display", "none");




            table = $('#holidaySetupTable').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
                columns: [
                    { 'sClass': 'LvId', 'visible': false },

                    { "sClass": "ReplaceDate", 'visible': true },
                    { 'sClass': 'DutyDate', 'visible': true },
                    { "sClass": "Remark", 'visible': true }
                    
                ],
                //'columnDefs': [
                //    {
                //        'targets': 3,
                //        'visible': false,
                //        'className': 'chkAllPostFY'
                //    }
                //],
                select: true,
                select: 'single',
                'paging': false,
                'info': true,
                language: {
                    search: '',
                    searchPlaceholder: "Search..."
                },
                //"scrollX": true,
                //"scrollY": "60vh",
                "scrollCollapse": true,
            });

            // Custom sorting plug-in for date sorting
            jQuery.extend(jQuery.fn.dataTableExt.oSort, {
                'custom-date-pre': function (a) {
                    const parts = a.split('-');
                    const monthIndex = month.indexOf(parts[1]); // Get the index of the month abbreviation
                    return parts[2] + (monthIndex + 1).toString().padStart(2, '0') + parts[0];
                },

                'custom-date-asc': function (a, b) {
                    return a.localeCompare(b); // Default ascending sorting
                },

                'custom-date-desc': function (a, b) {
                    return b.localeCompare(a); // Default descending sorting
                }
            });


            //$("#holidaySetupTable").DataTable({
            //    destroy: true
            //})
        });

        // search employee
        function serachEmp(empInfos) {
            var empId = $("#EmpId option:selected").val();
            if (empId == "")
                return;
            return empInfos.EmpId == empId;
        }

        //save button click function
        $("#saveButton").click(function (e) {
            e.preventDefault();
            let HR_Leave_Avail = {
                Id: $("#LvId").val() || 0,
                EmpCode: $("#EmpCode").val(),
                
                ReplaceDate: $("#ReplaceDate").val(),
                DutyDate: $("#DutyDate").val(),
                Remark: $("#Remark").val()
            };

            if (HR_Leave_Avail.ReplaceDate !== "" && HR_Leave_Avail.DutyDate !== "") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreateLeaveAdjustUBL", "HR")',
                    dataType: 'json',
                    data: { model: HR_Leave_Avail },
                    success: function (result) {
                        if (result.Success == "1")
                            customFile('1', result.ex);
                        else
                            toastr.error(result.ex);
                    },
                    error: function (ex) {
                        customFile('1', "Data inserted successfully...");
                    }

                });
                //console.log("Reloading the page...");
                window.location.reload();
               // ClearTextBoxes();
            } else {

                if (HR_Leave_Avail.DutyDate === "") {
                    $("#dtPunchDate").css("border-color", "red");
                }


                $(".messageBody").html("Please Provide all the required fields");
                $(".divforfull").css("display", "block");
                $(".myMessage").css("display", "block");
                setTimeout(function () {
                    $(".myMessage").fadeOut(500);
                    $(".divforfull").fadeOut(500);

                }, 2000);
            }


        });

        //clear textboxes and reset buttons
        function ClearTextBoxes() {
            $("#ReplaceDate").val("");
            // $("#empCode").val("");
            $("#DutyDate").val("");
            $("#Remark").val("");



            $("input").css("border-color", "");
        }

        //reset button click function
        $("#resetButton").click(function (e) {

            ClearTextBoxes();
            var date = new Date();
            $(".datepicker").val("");
            $("#deleteButton").prop("disabled", true);
            $("#editButton").prop("disabled", true);
            $("#DutyDate").prop("disabled", false);
            $("#ReplaceDate").prop("disabled", false);
            $("#saveButton").prop("disabled", false);

        });

        $("#EmpCode").change(function () {
            var selectedEmpCode = $(this).val();
            table.rows().remove().draw();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("LoadLeaveAdjustByEmpCode", "HR")',
                dataType: 'json',
                data: { empcode: selectedEmpCode },
                success: function (result) {
                    console.log(result);
                    initializeGrid(result);
                    StopSpinner("#loadButton");
                },
                error: function (ex) {
                    console.error("Error loading leave adjustment data:", ex);
                    StopSpinner("#loadButton");
                    alert("Sorry, an error occured . . . .");
                }
            });
        });


        //load salary addition information of a month
        $("#loadButton").click(function () {
            var text = $("#DtMonth").val();
            table.rows().remove().draw();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("LoadLeaveAdjustPartial", "HR")',
                dataType: 'json',
                data: { date: text },
                success: function (result) {
                    initializeGrid(result);
                    StopSpinner("#loadButton");
                },
                error: function (ex) {
                    StopSpinner("#loadButton");
                    alert("Sorry, an error occured . . . .");
                }
            });
        });
        function initializeGrid(data) {
            var arrays = [];

            for (var i = 0; i < data.length; i++) {
                var formattedDate = dateFormat(data[i].ReplaceDate);
                var formattedDate1 = dateFormat(data[i].DutyDate);
                console.log(formattedDate1);
                console.log(formattedDate);
                arrays.push([
                    data[i].Id,
                    formattedDate1,
                    formattedDate,
                   
                    //data[i].LvType,
                    data[i].Remark
                ]);
            }
            table.rows.add(arrays).draw(false);

        };
        //table row double click function
        $(document).on("click", "#holidaySetupTable tr", function () {

            let rowData = table.row(".selected").data();
            function formatedDate(inputDate) {
                const months = {
                    'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06',
                    'Jul': '07', 'Aug': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'
                };
                const [day, monthAbbr, year] = inputDate.split('-');
                const month = months[monthAbbr];
                return `${month}/${day}/${year}`;
            }
            function formatedDate1(inputDate) {
                const months = {
                    'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04', 'May': '05', 'Jun': '06',
                    'Jul': '07', 'Aug': '08', 'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'
                };
                const [day, monthAbbr, year] = inputDate.split('-');
                const month = months[monthAbbr];
                return `${month}/${day}/${year}`;
            }

            function formatDate2(dateString) {
                const date = new Date(dateString);
                const day = date.getDate().toString().padStart(2, '0');
                const monthNames = [
                    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'
                ];
                const month = monthNames[date.getMonth()];
                const year = date.getFullYear();
                return `${day}-${month}-${year}`;
            }
            function formatedDate3(inputDate) {
                const dateParts = inputDate.split('-');
                const day = dateParts[0].padStart(2, '0');
                const month = dateParts[1];
                const year = dateParts[2];
                return `${day}-${month}-${year}`;
            }


            $("#DutyDate").val(formatedDate(rowData[1]));
            $("#LvId").val(rowData[0]);
            //$("#DutyDate").val(dateFormat(rowData[1]));
            // $("#ReplaceDate").val(formatedDate3(rowData[2]));
            $("#ReplaceDate").val(formatedDate(rowData[2]));
            //$("#ReplaceDate").val(rowData[2]);
            $("#Remark").val(rowData[3]);
            console.log("Id from server:", rowData[0]);


            // $.ajax({
            //     type: 'POST',
            //     url: '@Url.Action("getDtjoin", "HR")',
            //     dataType: 'json',
            //     data: { DutyDate: $("#DutyDate").val(), remark: $("#Remark").val() },
            //     success: function (result) {
            //         console.log(result);
            //         // $("#ReplaceDate").val(formatDate2(result));
            //     },
            //     error: function (ex) {
            //         customFile('1', "Data inserted successfully...");
            //     }

            // });
            $("#DutyDate").prop("disabled", false);
            $("#ReplaceDate").prop("disabled", false);
            $("#deleteButton").prop("disabled", false);
            $("#editButton").prop("disabled", false);
            $("#saveButton").prop("disabled", false);


        });
        $("#deleteButton").click(function () {
            let HR_Leave_Avail = {
                Id: $("#LvId").val() || 0,
                EmpCode: $("#EmpCode").val(),

                ReplaceDate: $("#ReplaceDate").val(),
                DutyDate: $("#DutyDate").val(),
                Remark: $("#Remark").val()
            };

            if ($("#LvId").val() == "") {
                alert("Select Some entry");
            }
            else {
                var r = confirm("Are you sure to delete leave adjust?");
                if (!r) {
                    event.preventDefault();
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteLeaveAdjustUBL", "HR")',
                        dataType: 'json',
                        // data: { Id: $("#Id").val() },
                        data: { model: HR_Leave_Avail },
                        success: function (result) {
                            if (result.Success == "1") {
                                customFile('1', result.ex);
                               
                            } else {
                                customFile(result.Success, result.ex);
                            }
                        },
                        error: function (ex) {
                            toastr.error("Sorry, an error occured . . . .");
                        }

                    });
                    // var today = new Date().toISOString().split('T')[0];

                    // var url = '@Url.Action("LoadLeaveAdjustPartial", "HR")' + '?date=' + today;

                    // $("#holidaySetupTable").load(url, function () { });

                    // $("#holidaySetupTable tbody").html("");
                    
                }
            }
            console.log("Reloading the page...");
            window.location.reload();
            // ClearTextBoxes();
        });
        $("#editButton").click(function () {

            if ($("#DutyDate").val() == "") {
                alert("Select Some entry");
            }
            else {
                var r = confirm("Are you sure to modify leave adjust?");
                if (!r) {
                    event.preventDefault();
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("EditLeaveAdjustUBL", "HR")',
                        dataType: 'json',
                        data: { DutyDate: $("#DutyDate").val(), ReplaceDate: $("#ReplaceDate").val(), remark: $("#Remark").val() },
                        success: function (result) {
                            if (result.Success == "1")
                                customFile('1', result.ex);
                            else
                                customFile(result.Success, result.ex);
                        },
                        error: function (ex) {
                            toastr.error("Sorry, an error occured . . . .");
                        }

                    });
                    var today = new Date().toISOString().split('T')[0];

                    var url = '@Url.Action("LoadLeaveAdjustPartial", "HR")' + '?date=' + today;

                    $("#holidaySetupTable").load(url, function () { });

                    $("#holidaySetupTable tbody").html("");

                }
            }
            ClearTextBoxes();
        });

        //delete salary addition ajax function end
        $(document).on("click", ".table tbody tr", function () {
            $(this).addClass("clicked").siblings().removeClass("clicked");
        });

    </script>

}
