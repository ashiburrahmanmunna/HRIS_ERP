@model GTERP.Models.HR_Emp_Recreation

@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@{
    List<GTERP.ViewModels.RecreationViewModel> recreations = ViewBag.Recreation;
}
<link href="~/Content/ProjectLibFile/css/customCssFile/customFormStyle.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="card">
        <h4 class="form-header btn-info">
            <i class="far fa-file-alt"></i>  Re-Creation
        </h4>

        <div class="card-body p-2">
            <div id="modalbodyfahad" class="row p-4">
                <div class="col-md-12 col-12">
                    <div class="needs-validation" novalidate>
                        <dv class="row">
                            <div class="col-md-3 col-12">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> @Html.LabelFor(model => model.DtPayment)</span>
                                    </div>
                                    <input type="text" asp-for="DtPayment" name="DtBirth" class="form-control" autocomplete="off" />
                                    @Html.ValidationMessageFor(model => model.DtPayment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3 col-12">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> @Html.LabelFor(model => model.ReferenceNo)</span>
                                    </div>
                                    <input type="text" asp-for="ReferenceNo" class="form-control" autocomplete="off" />
                                    @Html.ValidationMessageFor(model => model.ReferenceNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3 col-12">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> @Html.LabelFor(model => model.DtReference)</span>
                                    </div>
                                    <input type="text" asp-for="DtReference" name="DtBirth" class="form-control" autocomplete="off" />
                                    @Html.ValidationMessageFor(model => model.DtReference, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-2 col-12">
                                <div class="input-group mb-3">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"> @Html.LabelFor(model => model.IsRecreation)</span>
                                    </div>
                                    <div class="input-group-append">
                                        <span class="input-group-text">
                                            @Html.CheckBoxFor(model => model.IsRecreation, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IsRecreation, "", new { @class = "text-danger" })
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1 col-12 mb-3">
                                <input type="button" value="Save" class="btn btn-success btn-block rounded-0" id="btnSave" />
                            </div>

                    </div>

                    <hr />
                    <input type="button" class="btn btn-warning float-right rounded-0" value="Select All" id="btnSelect" />
                    <table id="tblEmp" class="table table-hover table-striped text-nowrap" width="100%">
                        <thead>
                            <tr>
                                <th>EmpId</th>
                                <th>Emp Name</th>
                                <th>Emp Code</th>
                                <th>Emp Type</th>
                                <th>Department</th>
                                <th>Section</th>
                                <th>Designation</th>
                                <th>BS</th>
                                <th>Payment Date</th>
                                <th>Reference Date</th>
                                <th>Reference No.</th>
                                <th>Is Re-Creation</th>

                            </tr>
                        </thead>
                        <tbody>
                            @if (recreations != null)
                            {
                                foreach (var item in recreations)
                                {
                                    <tr>
                                        <td>@item.EmpId</td>
                                        <td>@item.EmpName</td>
                                        <td>@item.EmpCode</td>
                                        <td>@item.EmpType</td>
                                        <td>@item.DeptName</td>
                                        <td>@item.SectName</td>
                                        <td>@item.DesigName</td>
                                        <td>@item.BS</td>
                                        <td>
                                            @String.Format("{0:dd-MMM-yyyy}", Convert.ToDateTime(Convert.ToDateTime(item.DtPayment)).ToShortDateString())
                                        </td>

                                        <td>
                                            @String.Format("{0:dd-MMM-yyyy}", Convert.ToDateTime(Convert.ToDateTime(item.DtReference)).ToShortDateString())
                                        </td>
                                        <td>@item.ReferenceNo</td>
                                        @if (item.IsReCreation)
                                        {
                                            <td>Yes</td>
                                        }
                                        else
                                        {
                                            <td>No</td>
                                        }

                                    </tr>
                                }
                            }


                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts {

    <script src=" https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script type="text/javascript">
        var table;



        $("#btnLoad").click(function () {
            DailyEmpFixedAttandanceData();
        });

        function initializeGrid(data) {
            $('#tblEmp').DataTable().clear().draw();
            for (var i = 0; i < data.length; i++) {
                //if (data[i].Remarks.length > 1) {alert(data[i].Remarks) };


                $('#tblEmp').dataTable().fnAddData(
                    [
                        data[i].EmpId,
                        data[i].EmpCode,
                        data[i].EmpName,
                        data[i].ProssType,
                        data[i].EmpType,
                        data[i].DeptName,
                        data[i].SectName,
                        data[i].DesigName,
                        data[i].BS,
                        data[i].TtlOT,
                        data[i].TtlNight,
                        data[i].TtlShiftNight,
                        data[i].TtlFC,
                        data[i].Remarks
                    ]
                );
            }
        };


        function DailyEmpFixedAttandanceData() {

            var antiForgeryToken = $("input[name=GTR_ANTIFORZERY]").val();
            let prossType = $("#prossType option:selected").val();

             $.ajax({
                  type: 'POST',
                  //url: '/FixedAtt/Index',
                  url: '@Url.Action("Search", "OTFC")',
                  dataType: 'json',
                  headers: { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },
                 //async: true,
                 data: { prossType: prossType },
                 success: function (data) {
                     if (data.Success == "1") {
                         if (data.result == null) {
                             alert("Result is null")
                         }
                         initializeGrid(data.result);
                     }
                     else {
                         toastr.error(result.ex);
                     }
                 },
                 error: function (ex) {
                     toastr.error("Sorry, an error occured . . . .");
                 }
            });

        };

        $(document).ready(function () {

            $("#DtPayment").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#DtPayment").datepicker("option", "dateFormat");
                    //setter
                    $("#DtPayment").datepicker("option", "dateFormat", 'dd-M-yy');
                }
            });

            $("#DtReference").datepicker({
                changeMonth: true,
                changeYear: true,
                onSelect: function (date) {
                    // Your CSS changes, just in case you still need them
                    $('a.ui-state-default').removeClass('ui-state-highlight');
                    $(this).addClass('ui-state-highlight');
                    var dateFormat = $("#DtReference").datepicker("option", "dateFormat");
                    //setter
                    $("#DtReference").datepicker("option", "dateFormat", 'dd-M-yy');
                }
            });

            // row select
            $("#btnSelect").click(function () {
                if ($("#btnSelect").val() == "Select All") {
                    $('#tblEmp tbody tr').each(function () {
                        if (!$(this).hasClass('selected')) {
                            $(this).addClass('selected');
                        }

                    });
                    $("#btnSelect").val("De Select");
                } else {
                    $('#tblEmp tbody tr').each(function () {
                        if ($(this).hasClass('selected')) {
                            $(this).removeClass('selected');
                        }


                    });
                    $("#btnSelect").val("Select All");
                }
            });

            table = $('#tblEmp').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
                'aoColumns': [
                    { 'sClass': 'EmpId', 'visible': false },
                    { 'sClass': 'EmpCode', 'visible': true },
                    { 'sClass': 'EmpName', 'visible': true },
                    { 'sClass': 'EmpType', 'visible': true },
                    { 'sClass': 'DeptName', 'visible': true },
                    { 'sClass': 'SectName', 'visible': true },
                    { 'sClass': 'DesigName', 'visible': true },
                    { 'sClass': 'BS', 'visible': true },
                    { 'sClass': 'DtPayment', 'visible': true },
                    { 'sClass': 'DtReference', 'visible': true },

                    { 'sClass': 'ReferenceNo', 'visible': true },
                    { 'sClass': 'IsReCreation', 'visible': true }
                    //{ 'sClass': 'IsPaid', 'visible': false }
                ],
                //columnDefs: [
                //    {
                //        'targets': 9, 'render': function (data, type, row) {
                //            return `<input class="form-control" type="text" data-val="true" value="${data}">`;
                //        }
                //    }
                //],
                select: {
                    style: 'multi'
                    //selector: 'tr>td:nth-child(1),tr>td:nth-child(2),tr>td:nth-child(3),tr>td:nth-child(4),tr>td:nth-child(5),tr>td:nth-child(6),tr>td:nth-child(7),tr>td:nth-child(9)'
                    //'tr>td:nth-child(2)
                },
                'paging': false,
                'info': false,
                "scrollY": 455,
                "scrollX": true,
                language: {
                    search: '',
                    searchPlaceholder: "Search..."
                },
            });

            $("#btnSave").click(function () {


                var antiForgeryToken = $("input[name=GTR_ANTIFORZERY]").val();

                var dtPayment = $('#DtPayment').val();
                var DtReference = $('#DtReference').val();
                var referenceNo = $('#ReferenceNo').val();

                if (dtPayment == "") {
                    $('#DtPayment').focus();
                    return false;
                }
                if (DtReference == "") {
                    $('#DtReference').focus();
                    return false;
                }
                var isRecreation = false;
                var isPaid = false;

                if ($("#IsRecreation").is(":checked"))
                    isRecreation = true;

                if ($("#IsPaid").is(":checked"))
                    isPaid = true;



                var reCreations = [];

                @*var HR_Emp_Recreation = {
                    EmpId: '', DtPayment: dtPayment, ReferenceNo: referenceNo, IsRecreation: false, IsPaid: false,
                    ComId: '@HttpContextAccessor.HttpContext.Session.GetString("comid")', PcName: "",
                    UserId: '@HttpContextAccessor.HttpContext.Session.GetString("userid")',
                    DateAdded: CurrentDate(), UpdateByUserId:CurrentDate(), DateUpdated: CurrentDate()
                }*@


                var data = table.rows('.selected').data();
               // console.log(data);


                for (var i = 0; i < data.length; i++) {
                     var HR_Emp_Recreation = {
                         EmpId: '', DtPayment: dtPayment, DtReference: DtReference, ReferenceNo: referenceNo, IsRecreation: false, IsPaid: false,
                            ComId: '@HttpContextAccessor.HttpContext.Session.GetString("comid")', PcName: "",
                            UserId: '@HttpContextAccessor.HttpContext.Session.GetString("userid")',
                            DateAdded: CurrentDate(), UpdateByUserId:CurrentDate(), DateUpdated: CurrentDate()
                    }

                    HR_Emp_Recreation.EmpId = data[i][0];
                    HR_Emp_Recreation.DtPayment = dtPayment;
                    HR_Emp_Recreation.DtReference = DtReference;
                    HR_Emp_Recreation.IsRecreation = isRecreation;
                    HR_Emp_Recreation.IsPaid = isPaid;
                    reCreations.push(HR_Emp_Recreation);


                };





                 $.ajax({
                     type: 'POST',
                     url: '@Url.Action("CreateRecreation", "HR")',
                    //url: '/FixedAtt/UpdateSelectedData',
                     dataType: 'json',
                     headers : { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },
                    //async: true,
                     data: { reCreations: reCreations},
                    success: function (data) {
                        if (data.Success == "1") {
                            customFile('1', data.ex);
                            window.location.href='@Url.Action("RecreationList", "HR")'
                        }
                        else
                            toastr.error(result.ex);
                    },
                    error: function (ex) {
                        toastr.error("Sorry, an error occured . . . .");
                    }
                });
            });
        });





        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
            return val;
        }



    </script>
}