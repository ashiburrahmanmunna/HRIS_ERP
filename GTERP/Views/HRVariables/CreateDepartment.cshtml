@model GTERP.Models.Cat_Department

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateDepartment", "HRVariables", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container">
        <div class="row">
            <div class="col-md-6 offset-md-3 col-12">
                @if (Model != null)
                {
                    <input type="hidden" id="DeptId" name="DeptId" value="@Model.DeptId" />
                }
                else
                {
                    <input type="hidden" asp-for="DeptId" value="0" />
                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext">Department Entry - @ViewBag.Title</h4>
                        </div>
                        <div class="card-body">
                            <form class="needs-validation" novalidate>
                                <input hidden asp-for="ComId" value="@Model.ComId" />
                                <input hidden asp-for="DateAdded" value="@Model.DateAdded" />
                                <input hidden asp-for="UserId" value="@Model.UserId" />

                                <div class="container">
                                    <div class="row">
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DeptName)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DeptCode)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.DeptCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DeptCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DeptBangla)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.DeptBangla, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DeptBangla, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.Slno)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.Slno, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Slno, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <span class="input-group-text py-0">
                                                    Department HOD
                                                </span>
                                                <input asp-for="DeptHODId" type="hidden" id="DeptHODId" />
                                                <input asp-for="DeptHODName" type="text" id="Emp1" class="form-control" placeholder="Select HOD ID" />
                                            </div>
                                            <div class="input-group mb-2">
                                                <span class="input-group-text py-0">
                                                    C Level
                                                </span>
                                                <input asp-for="DeptCLevelId" type="hidden" id="DeptCLevelId" />
                                                <input asp-for="DeptCLevelName" type="text" id="Emp2" class="form-control" placeholder="Select C Level ID" />
                                            </div>

                                        </div>
                                    </div>




                                </div>
                            </form>
                        </div>

                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />

                                        @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                        @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="Department_delete()">Delete</button>
                                    }


                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "DepartmentList", "HRVariables", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

       
    </div>

}

@section Scripts{
    <script>

    $("#DeptId").select2();

    function Department_delete() {

        var deptId = $("#DeptId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteDepartment", "HRVariables")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: deptId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("DepartmentList", "HRVariables")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>
    <script>
        $(function () {
            $("#Emp1").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("SearchEmployeesForHOD", "HR")",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $("#Emp1").val(ui.item.label); // Set the display value in the input field
                    $("#DeptHODId").val(ui.item.value); // Set the selected employee's ID in the hidden input field
                    return false;
                }
            });

            $("#Emp1").on('keyup', function () {
                var value = $(this).val();
                if (value.trim() === "") {
                    $("#DeptHODId").val(""); // Set the value to an empty string when the input field is blank
                    console.log("Input field is blank");
                } else {
                    // Input field is not blank
                    // Perform your logic here
                    console.log("Input field is not blank");
                }
            });
        });


        $(function () {
            $("#Emp2").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "@Url.Action("SearchEmployeesForCLevel", "HRVariables")",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response(data);
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $("#Emp2").val(ui.item.label); // Set the display value in the input field
                    $("#DeptCLevelId").val(ui.item.value); // Set the selected employee's ID in the hidden input field
                    return false;
                }
            });

            $("#Emp2").on('keyup', function () {
                var value = $(this).val();
                if (value.trim() === "") {
                    $("#DeptCLevelId").val(""); // Set the value to an empty string when the input field is blank
                    console.log("Input field is blank");
                } else {
                    // Input field is not blank
                    // Perform your logic here
                    console.log("Input field is not blank");
                }
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


