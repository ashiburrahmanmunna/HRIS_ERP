@model GTERP.Models.Cat_Line



<style>


    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateLine","HRVariables",FormMethod.Post))
{

    <div class="container" >
        <div class="row">
            <div class="col-md-6  offset-md-3 col-12">
                @if (Model != null)
                {
                    <input type="hidden" id="LineId" name="LineId" value="@Model.LineId" />
                }
                else
                {
                    <input type="hidden" asp-for="LineId" value="0" />

                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext">Line Entry - @ViewBag.Title</h4>

                        </div>
                        <div class="card-body">
                            <form class="needs-validation " novalidate>
                                <input hidden asp-for="ComId" />
                                <input hidden asp-for="UserId" />

                                <div>
                                    <div class="row">
                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LineName)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LineName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LineName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-12 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LineNameB)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LineNameB, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LineNameB, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                    </div>


                                </div>
                            </form>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="Line_delete()">Delete</button>
                                    }


                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "LineList", "HRVariables", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
        
        
    </div>

}

@section Scripts{
    <script>

        //$("#LineId").select2();




    function Line_delete() {

        var LineId = $("#LineId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteLine", "HRVariables")',
                data: JSON.stringify({ id: LineId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("LineList", "HRVariables")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
        }





    $('body').on('keydown', 'input, select', function (e) {
        if (e.key === "Enter") {
            var self = $(this), form = self.parents('form:eq(0)'), focusable, next;
            focusable = form.find('input,textarea').filter(':visible');
            next = focusable.eq(focusable.index(this) + 1);
            if (next.length) {
                next.focus();
            } else {
                form.submit();
            }
            return false;
        }
    });

        //$(document).ready(function () {
        //    $(window).keydown(function (event) {
        //        if (event.keyCode == 13) {

        //            event.preventDefault();
        //            return false;
        //        }
        //    });
        //});

        //$(".inputs").keyup(function () {
        //    if (this.value.length == this.maxLength) {
        //        $(this).next('.inputs').focus();
        //    }
        //});

    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
