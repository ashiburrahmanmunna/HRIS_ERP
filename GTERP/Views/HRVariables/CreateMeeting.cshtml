@model GTERP.Models.Cat_Meeting



<style>


    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateMeeting", "HRVaiables", FormMethod.Post))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container">
        <div class="row">
            <div class="col-md-6  offset-md-3 col-12">
                @if (Model != null)
                {
                <input type="hidden" id="MeetingId" name="MeetingId" value="@Model.MeetingId" />
                }
                else
                {
                <input type="hidden" asp-for="MeetingId" value="0" />
                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext">Technical Entry - @ViewBag.Title</h4>
                        </div>
                        <div class="card-body">
                            <form class="needs-validation" novalidate>

                                <input type="hidden" asp-for="ComId" />
                                <input type="hidden" asp-for="UserId" />

                                <div class="container">
                                    <div class="row">
                                        <div class="col mb-3">
                                            @Html.LabelFor(model => model.MeetingType)
                                            @*@Html.DropDownList("MeetingType", ViewBag.MeetingType, "--Please Select--", htmlAttributes: new { @class = "form-control" })*@
                                            @Html.DropDownListFor(x => x.MeetingId, new SelectList((IEnumerable<SelectListItem>
                                                )ViewBag.MeetingType, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "MeetingId" })
                                                @Html.ValidationMessageFor(model => model.MeetingType, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col mb-3">
                                            @Html.LabelFor(model => model.Meeting)
                                            @Html.EditorFor(model => model.Meeting, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Meeting, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col mb-3">
                                            @Html.LabelFor(model => model.MeetingBangla)
                                            @Html.EditorFor(model => model.MeetingBangla, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.MeetingBangla, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col mb-3">
                                            @Html.LabelFor(model => model.SLNo)
                                            @Html.EditorFor(model => model.SLNo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SLNo, "", new { @class = "text-danger" })

                                        </div>

                                    </div>

                                </div>
                            </form>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                    <input type="submit" value="Save" class="btn btn-primary btn-md btn-block" />

                                    @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block" />

                                    @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                    <button class="btn btn-danger btn-md btn-block" type="button" onclick="Section_delete()">Delete</button>
                                    }


                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "MeetingList", "HRVariables", null, new { @class = "btn btn-info btn-block", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
    </div>

}

@section Scripts{
    <script>

        $("#MeetingType").select2();

    function Section_delete() {

        var MeetingId = $("#MeetingId").val();
         //   alert(Sectid);
            $.ajax({

                url: '@Url.Action("DeleteMeeting", "HRVariables")',
                data: JSON.stringify({ id: MeetingId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    debugger;
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("MeetingList", "HRVariables")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

