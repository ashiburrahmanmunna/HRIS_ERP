@model GTERP.Models.Cat_Shift



<style>


    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

@using (Html.BeginForm("CreateShift", "HRVariables", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @*@Html.AntiForgeryToken()*@

    <div class="container">
        <div class="row">
            <div class="col-md-10 offset-1 col-12">
                @if (Model != null)
                {
                    <input type="hidden" id="ShiftId" name="ShiftId" value="@Model.ShiftId" />
                }
                else
                {
                    <input type="hidden" asp-for="ShiftId" value="0" />
                }
                <div id="modalbodyfahad" class="card">
                    <div>
                        <div class="card-header">
                            <h4 id="styletext"> Shift Entry - @ViewBag.Title</h4>
                        </div>

                        <div class="card-body">
                            <form class="needs-validation" novalidate>
                                <div class="container">
                                    <input type="hidden" asp-for="ComId" />
                                    <input type="hidden" asp-for="UserId" />

                                    <div class="row">
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftName)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ShiftName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftCode)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ShiftCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftDesc)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftDesc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ShiftDesc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftIn)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftIn, new { htmlAttributes = new { @Value = "0",@class = "form-control timepicker" ,@type="text"} })
                                                @Html.ValidationMessageFor(model => model.ShiftIn, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftOut)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftOut, new { htmlAttributes = new {@Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.ShiftOut, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftLate)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.ShiftLate, new { htmlAttributes = new {@Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.ShiftLate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LunchTime)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LunchTime, new { htmlAttributes = new {@Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.LunchTime, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LunchIn)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LunchIn, new { htmlAttributes = new {@Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.LunchIn, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.LunchOut)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.LunchOut, new { htmlAttributes = new {@Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.LunchOut, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.RegHour)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.RegHour, new { htmlAttributes = new { @Value = "0",@class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.RegHour, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftType)
                                                    </span>
                                                </div>
                                                @if (ViewBag.Title == "Edit")
                                                {
                                                    <select name="ShiftType" class="form-select" >
                                                      <option value="@Model.ShiftType" selected> @Model.ShiftType </option>
                                                      <option value="G">G</option>
                                                      <option value="S">S</option>
                                                    </select> 
                                                }
                                                else if(ViewBag.Title == "Delete")
                                                {
                                                    <select name="ShiftType" class="form-select" >
                                                      <option value="@Model.ShiftType" selected> @Model.ShiftType </option>
                                                      <option value="G">G</option>
                                                      <option value="S">S</option>
                                                    </select> 
                                                }
                                                else
                                                {
                                                    <select name="ShiftType" class="form-select" >
                                                      <option value="G" selected>G</option>
                                                      <option value="S">S</option>
                                                    </select>                                                    
                                                }

                                               @* @Html.EditorFor(model => model.ShiftType, new { htmlAttributes = new { @class = "form-control" } })*@
                                                @Html.ValidationMessageFor(model => model.ShiftType, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.ShiftCat)
                                                    </span>
                                                </div>
                                                @if (ViewBag.Title == "Edit")
                                                {
                                                    <select name="ShiftCat" class="form-select" >
                                                      <option value="@Model.ShiftCat" selected> @Model.ShiftCat </option>
                                                      <option value="G">G</option>
                                                      <option value="S">S</option>
                                                    </select> 
                                                }
                                                else if(ViewBag.Title == "Delete")
                                                {
                                                    <select name="ShiftCat" class="form-select" >
                                                      <option value="@Model.ShiftCat" selected> @Model.ShiftCat </option>
                                                      <option value="G">G</option>
                                                      <option value="S">S</option>
                                                    </select> 
                                                }
                                                else
                                                {
                                                    <select name="ShiftCat" class="form-select" >
                                                      <option value="G" selected>G</option>
                                                      <option value="S">S</option>
                                                    </select>                                                    
                                                }
                                                @Html.ValidationMessageFor(model => model.ShiftCat, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinTime)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinTime, new { htmlAttributes = new { @Value = "0", @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinIn)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinIn, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinIn, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinOut)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinOut, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinOut, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinTime1)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinTime1, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinTime1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinTimeIn1)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinTimeIn1, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinTimeIn1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinTime2)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinTime2, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinTime2, "", new { @class = "text-danger" })
                                            </div>

                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.TiffinTimeIn2)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.TiffinTimeIn2, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.TiffinTimeIn2, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.NightAllowTime)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.NightAllowTime, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.NightAllowTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DinnerAllowTime)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.DinnerAllowTime, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.DinnerAllowTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.FridayAllowTime)
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.FridayAllowTime, new { htmlAttributes = new { @class = "form-control timepicker", @type = "text" } })
                                                @Html.ValidationMessageFor(model => model.FridayAllowTime, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-6 col-12">
                                            @Html.LabelFor(model => model.IsInactive)
                                            @Html.EditorFor(model => model.IsInactive)
                                            @Html.ValidationMessageFor(model => model.IsInactive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                </div>
                            </form>
                        </div>
                        <div class="card-footer">
                            <div class="row text-center m-2">
                                <br />
                                <div class="col-md-2"></div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">

                                    @if (ViewBag.Title == "Create")
                                    {
                                        <input type="submit" value="Save" class="btn btn-primary btn-md btn-block rounded-0" />

                                        @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                        @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger btn-md btn-block rounded-0" type="button" onclick="Shift_delete()">Delete</button>
                                    }


                                </div>
                                <div class="col-md-4 col-xs-12 d-block mx-auto">
                                    @Html.ActionLink("Back", "ShiftList", "HRVariables", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                </div>
                                <div class="col-md-2"></div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

       
    </div>

}

@section Scripts{
    <script>

        //$('.timepicker').timepicker({
        //    timeFormat: 'h:mm p',
        //    interval: 60,
        //    minTime: '10',
        //    maxTime: '6:00pm',
        //    defaultTime: '11',
        //    startTime: '08:00',
        //    dynamic: false,
        //    dropdown: true,
        //    scrollbar: true
        //});
      

        document.addEventListener("DOMContentLoaded", function () {
           
            $(document).ready(function () {
                // Initialize timepicker
                $(".timepicker").timepicker({
                    timeFormat: 'HH:mm',
                    interval: 15,
                    dynamic: true,
                    dropdown: true,
                    scrollbar: true
                });

                // Check if in Edit & Delete mode
                var isInEditMode = "@ViewBag.Title" === "Edit";
                var isInDeleteMode = "@ViewBag.Title" === "Delete";
                // Set default time based on the mode
                if (!isInEditMode && !isInDeleteMode) {
                    $("#TiffinTime,#TiffinIn,#TiffinOut,#TiffinTime1,#TiffinTimeIn1,#TiffinTime2,#TiffinTimeIn2,#NightAllowTime,#DinnerAllowTime,#FridayAllowTime ").timepicker('setTime', '00:00');
                }
                
            });
            $("#ShiftId").select2();
            // var currentDate = new Date();


            // var formattedDate = currentDate.getFullYear() + '-' + ('0' + (currentDate.getMonth() + 1)).slice(-2) + '-' + ('0' + currentDate.getDate()).slice(-2);
            // var formattedTime = ('0' + currentDate.getHours()).slice(-2) + ':' + ('0' + currentDate.getMinutes()).slice(-2);

            // document.getElementById('TiffinTime1').value = formattedTime;
            // document.getElementById('ShiftIn').value = formattedTime;
            // document.getElementById('ShiftOut').value = formattedTime;
            // document.getElementById('ShiftLate').value = formattedTime;
            // document.getElementById('LunchTime').value = formattedTime;
            // document.getElementById('LunchIn').value = formattedTime;
            // document.getElementById('LunchOut').value = formattedTime;
            // document.getElementById('RegularHour').value = formattedTime;
            // document.getElementById('TiffinIn').value = formattedTime;
            // document.getElementById('TiffinOut').value = formattedTime;
            // document.getElementById('TiffinTime').value = formattedTime;
            // document.getElementById('TiffinTime2').value = formattedTime;
            // document.getElementById('TiffinTimeIn1').value = formattedTime;
            // document.getElementById('TiffinTimeIn2').value = formattedTime;
            // document.getElementById('NightAllowTime').value = formattedTime;
            // document.getElementById('DinnerAllowTime').value = formattedTime;
            // document.getElementById('FridayAllowTime').value = formattedTime;
            
        });
    function Shift_delete() {

        var ShiftId = $("#ShiftId").val();
            //alert(SalesId);
            $.ajax({

                url: '@Url.Action("DeleteShift", "HRVariables")',
                
                data: JSON.stringify({ id: ShiftId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                if (result.Success == "1") {
                    customFile('3', result.ex);
                    window.setTimeout(function () {
                        // Move to a new location or you can do something else
                        window.location.href = '@Url.Action("ShiftList", "HRVariables")';
                    }, 500);
                }
                else {
                    toastr.error(result.ex);
                }
            }
            });
    }
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
