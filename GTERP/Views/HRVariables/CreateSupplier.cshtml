
@model GTERP.Models.Supplier


<style>
</style>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

</head>

<body>
    @using (Html.BeginForm("CreateSupplier", "HRVariables", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


    <div class="container">
        <div class="row">
            <div class="col-md-8  offset-md-2 col-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (Model != null)
                {
                    <input type="hidden" id="Salesid" name="SupplierId" value="@Model.SupplierId" />

                    @Html.HiddenFor(model => model.DateAdded)
                    @Html.HiddenFor(model => model.DateUpdated)

                }
                else
                {
                    <input type="hidden" asp-for="SupplierId" value="0" />

                }

                <div id="modalbodyfahad" class="card">
                    <div class="card-header">
                        <h4 id="styletext">Supplier Information Entry - @ViewBag.Title</h4>
                    </div>


                    <div class="card-body">

                        <form class="needs-validation" novalidate>
                            <input type="hidden" name="ComId" asp-for="ComId" />
                            <input type="hidden" name="UserId" asp-for="UserId" />
                            <div class="row">

                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.SupplierCode, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.SupplierCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SupplierCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.SupplierNameB, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.SupplierNameB, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SupplierNameB, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.DropDownListFor(x => x.CountryId, new SelectList((IEnumerable<SelectListItem>
                                                               )ViewBag.CountryId, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "CountryId" })

                                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.DistId, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.DropDownListFor(x => x.DistId, new SelectList((IEnumerable<SelectListItem>
                                                                                           )ViewBag.DistId, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "DistId" })
                                        @Html.ValidationMessageFor(model => model.DistId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.PStationId, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        <select asp-for="PStationId" class="form-control">
                                            <option selected value="">--Please Select--</option>
                                        </select>
                                        @Html.ValidationMessageFor(model => model.PStationId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.PrimaryAddress, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.PrimaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PrimaryAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.SecoundaryAddress, new { htmlAttributes = new { @class = "control-label" } })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.SecoundaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SecoundaryAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.TinNo, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.TinNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TinNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-9 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.OpBalance, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.OpBalance, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OpBalance, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-3 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.IsInActive, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                        </div>
                                        <div class="input-group-append">
                                            <span class="input-group-text checkbox">
                                                @Html.EditorFor(model => model.IsInActive)
                                                @Html.ValidationMessageFor(model => model.IsInActive, "", new { @class = "text-danger" })
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>


                        </form>

                    </div>
                    <div class="card-footer">
                        <div class="row">
                            <div class="col-md-3"></div>
                            <div class="col-md-3 col-12">
                                @if (ViewBag.Title == "Create")
                                {
                                    <input type="submit" value="Create" class="btn btn-primary btn-block rounded-0" />
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <button class="btn btn-danger btn-block rounded-0" type="button" onclick="Suppliers_delete()">Delete</button>
                                }
                            </div>
                            <div class="col-md-3 col-12">
                                @Html.ActionLink("Back", "SupplierList", "HRVariables", null, new { @class = "btn btn-info btn-block rounded-0" })
                            </div>
                            <div class="col-md-3"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

       
    </div>




    }
    @section Scripts{ 

        <script type="text/javascript">



            $("#CountryId").select2();
            $("#DistId").select2();
            $("#PStationId").select2();

            $('#DistId').change(function () {

                if ($('#DistId').val() > 0) {
                //alert('enter');
                    CascadePoliceStation();
                }
                else {
                    alert('Please Select District Information First.')
                }
            });

        function CascadePoliceStation() {

                $("#PStationId").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("getPoliceStation", "HRVariables")',
                        dataType: 'json',
                        async: false,
                        data: { id: $("#DistId").val() },
                        success: function (data) {
                            var s ='<option value="-1">--Please Select--</option>';
                            //$.each(data, function (i, data) {
                            //    $("#Product").append('<option value="'+ data.Value + '">'
                            //        + data.Text + '</option>');
                            //});
                            for (var i = 0; i < data.length; i++) {
                                s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            }
                            $("#PStationId").html(s);
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });
                return false;

            };


             function Suppliers_delete() {

                 var SupplierId = $("#SupplierId").val();
                    //alert(SalesId);
                    $.ajax({

                        url: '@Url.Action("DeleteSupplier", "HRVariables")',
                        data: JSON.stringify({ id: SupplierId }), //use id here
                        //data: JSON.stringify(salesmain),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {

                            if (result.Success == "1") {
                                window.location.href = '@Url.Action("SupplierList", "HRVariables")';
                            }
                            else {
                                alert(result.ex);
                            }
                        }
                    });
            }

        </script>

    }
</body>

