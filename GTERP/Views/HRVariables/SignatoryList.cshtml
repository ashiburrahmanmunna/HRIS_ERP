@model IEnumerable<GTERP.Models.Cat_ReportSignatory>
@{
    ViewBag.Title = "Signature Input";
}
    <div class="container-fluid">

        <div class="text-center">
            <div class="row">

                <div class="col">
                    @Html.ActionLink("Signatory Creation", "CreateSignatory", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })
                </div>
                <div class="col">
                    <h2 id="styletext">Signatory List</h2>
                </div>
                <div class="col-lg-7">

                </div>
            </div>
        </div>


        <form class="card p-2 table-responsive">
            <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
                <thead class="text-nowrap">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model=>model.Module)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ReportName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FromDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ToDate)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory1)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory1B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig1)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig1B)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Signatory2)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory2B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig2)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig2B)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Signatory3)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory3B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig3)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig3B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory4)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory4B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig4)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig4B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory5)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory5B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig5)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig5B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory6)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Signatory6B)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig6)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SignatoryDesig6B)
                        </th>

                        <th>Action</th>
                    </tr>
                </thead>

                @foreach (var item in Model)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Module)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReportName)
                </td>
                <td>
                    @item.FromDate.ToString("dd-MMM-yyyy")
                </td>
                <td>
                    @item.ToDate.ToString("dd-MMM-yyyy")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory1B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig1B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory2B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig2B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory3B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig3B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory4)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory4B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig4)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig4B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory5)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory5B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig5)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig5B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory6)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Signatory6B)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig6)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SignatoryDesig6B)
                </td>


                <td class="text-nowrap">
                    <span data-toggle="tooltip" title="Edit!">
                        @Html.ActionLink(" ", "EditSignatory", new { id = item.SignatoryId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                    </span>
                    <span data-toggle="tooltip" title="Delete!">
                        @Html.ActionLink(" ", "DeleteSignatory", new { Id = item.SignatoryId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                    </span>
                </td>
            </tr>
                }
            </table>
            <br />
        </form>
    </div>


    @section Scripts{

        <script>
            $(document).ready(function () {
                $('#tbllist').DataTable({
                    dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                    //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                    //buttons: [
                    //    'copy', 'csv', 'excel', 'pdf'
                    //],
                    buttons: {
                        dom: {
                            button: {
                                className: 'btn rounded-0'
                            }
                        },
                        buttons: [
                            //'copy', 'csv', 'excel', 'pdf'
                            //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                            {
                                extend: 'colvis',
                                "columns": ':not(:last-child)',
                                text: '<i class="mdi mdi-view-column"></i>',
                                className: 'btn-info',
                                titleAttr: 'Show / hide columns',
                                //collectionLayout: 'fixed two-column'

                            },
                            //{
                            //    extend: 'copy',
                            //    text: '<i class="mdi mdi-content-copy"></i>',
                            //    className: 'btn-primary',
                            //    titleAttr: 'Copy to Clipboard'
                            //},
                            //{
                            //    extend: 'csv',
                            //    text: '<i class="mdi mdi-note-outline"></i>',
                            //    className: 'btn-secondary',
                            //    titleAttr: 'Export to csv'

                            //},
                            {
                                extend: 'excel',
                                text: '<i class="mdi mdi-file-excel"></i>',
                                className: 'btn-success',
                                titleAttr: 'Export to excel'
                            },
                            {
                                extend: 'pdfHtml5',
                                orientation: 'landscape',
                                pageSize: 'LEGAL',
                                text: '<i class="mdi mdi-file-pdf"></i>',
                                className: 'btn-danger',
                                titleAttr: 'Export to PDF',
                                //exportOptions: {
                                //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                                //}

                            },
                            {
                                extend: 'print',
                                text: '<i class="mdi mdi-printer"></i>',
                                className: 'btn-info',
                                titleAttr: 'Print Table'
                            }

                        ]
                    },
                    //"columnDefs": [
                    // Hide second, third and fourth columns
                    //{ "visible": false, "targets": [3, 4, 7, 9, 10] }
                    //],
                    "searching": true,
                    "paging": false,
                    "ordering": true,
                    "info": true,
                    "iDisplayLength": 15,
                    "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                    "scrollX": true,
                    "scrollY": "60vh",
                    "scrollCollapse": true,
                    language: {
                        sLengthMenu: "_MENU_",
                        search: "",
                        searchPlaceholder: "Search..."
                    }
                    //fixedColumns: {
                    //    leftColumns: 1,
                    //    rightColumns: 1
                    //}

                    //"sScrollXInner": "100%",
                    //dom: 'Blfrtip',
                    ////,"fixedHeader": true
                });
            });

                //$(".search_input").addClass('form-control input-lg col-xs-12');

        </script>
    }


