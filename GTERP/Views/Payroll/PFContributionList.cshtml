
@model GTERP.Models.HR_PFContribution
    <link href="~/Content/ProjectLibFile/css/customCssFile/customFormStyle.css" rel="stylesheet" />
    <style>
        .mCustomScrollbar {
            height: 300px;
            overflow: hidden;
        }
    </style>

    @using (Html.BeginForm("PFContributionList", "Payroll", FormMethod.Post))
    {
        <div class="card">
            <div class="form-header btn-info">
                <i class="fas fa-plus-square"></i> PF Contribution
                <div id="loading" style="display: inline;">
                    <div id="loadingGif" style="display: inline;">
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-md-8 col-12 card">
                        <div id="monthLoadDiv">
                            <fieldset id="fieldsetDate" class="pt-2 border-bottom">
                                <div class="input-group mb-2">
                                    <input type="hidden" asp-for="ComId" id="comid" />
                                    <input type="hidden" asp-for="UserId" id="userid" />
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.HiddenFor(m => m.PFContributionId)
                                            @Html.LabelFor(m => m.DtInput, new { @class = "control-label" })
                                        </span>
                                    </div>
                                    <input type="text" id="DtMonth" class="form-control formInput" />
                                    <div class="input-group-append">
                                        <button id="loadButton" class="btn btn-primary" style="margin-top: 0;">
                                            <span class="d-none spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Load List
                                        </button>
                                    </div>
                                </div>

                            </fieldset>
                        </div>

                        @*<div id="tableDiv">
                                <fieldset id="fieldsetSect">
                                    <div id="LoanReturnGrid" class="mCustomScrollbar">
                                        <partial name="_LoanReturnGrid" />
                                    </div>
                                </fieldset>
                            </div>*@
                        <div class="table-responsive my-2">
                            <table id="loanReturnTable" class="table table-sm table-striped trow table-hover text-nowrap" width="100%">
                                <thead>
                                    <tr>
                                        <th class="d-none">PFContributionId</th>
                                        <th>Employee Code</th>
                                        <th>Employee Name</th>
                                        <th>Join Date</th>
                                        <th>Section</th>
                                        <th>Designation</th>
                                        <th>Amount</th>
                                        <th>Input Date</th>
                                        <th>PF</th>
                                        <th class="d-none">EmpId</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="formDiv" class="col-md-4 col-12">
                        <fieldset id="fieldsetForm" class="card p-3">
                            <div id="formTable">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.LabelFor(m => m.EmpId)
                                        </span>
                                    </div>

                                    @Html.DropDownListFor(x => x.EmpId, new SelectList((IEnumerable<SelectListItem>
                                               )ViewBag.EmpId, "Value", "Text"), "--Please Select--", htmlAttributes: new { @class = "form-control", id = "EmpId" })


                                    @*@Html.DropDownList("EmpId", ViewBag.EmpId, "--Please Select--", htmlAttributes: new { @class = "form-control" })*@
                                </div>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            Name
                                        </span>
                                    </div>
                                    <input type="text" id="EmpName" class="form-control formInput" readonly />
                                </div>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.LabelFor(m => m.DtJoin)
                                        </span>
                                    </div>
                                    <input type="text" asp-for="DtJoin" name="DtJoin" class="form-control formInput" readonly />
                                </div>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.LabelFor(m => m.DtInput)
                                        </span>
                                    </div>
                                    <input type="text" asp-for="DtInput" class="form-control formInput" />
                                </div>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.LabelFor(m => m.Amount)
                                        </span>
                                    </div>
                                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control formInput" })
                                </div>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">
                                            @Html.LabelFor(m => m.PF)
                                        </span>
                                    </div>
                                    <select asp-items="ViewBag.PF" class="form-control" asp-for="PF">
                                        <option value="PF">PF</option>
                                        <option value="PF">PF Return</option>
                                    </select>
                                    @*@Html.DropDownList("PF", ViewBag.PF, "--Please Select--", htmlAttributes: new { @class = "form-control" })*@
                                </div>
                            </div>
                            <div id="buttonDiv">
                                <p class="text-center">
                                    <button id="saveButton" type="submit" class="btn btn-primary rounded-0">
                                        <i class="fa fa-floppy-o"></i> Save
                                    </button>
                                    <button id="updateButton" class="btn btn-success rounded-0">
                                        <i class="fa fa-pencil-square"></i> Update
                                    </button>
                                    <button id="resetButton" class="btn btn-warning rounded-0">
                                        <i class="fa fa-refresh"></i> Reset
                                    </button>

                                    <button id="deleteButton" class="btn btn-danger rounded-0">
                                        <i class="fa fa-trash-o"></i> Delete
                                    </button>
                                </p>

                            </div>
                        </fieldset>

                    </div>
                </div>

            </div>
        </div>

    }

    @section Scripts{

        <script>
        var empName, PFContributionId, dtInput, empId,empCode, joinDt, locOfJoin, locOfName, empIdAndJoinDt, empCodeAndEmpName,remarks,amount;

        var empInfos=@Html.Raw(Json.Serialize(ViewBag.EmpInfo));
        var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        var table;
        $(document).ready(function () {

            $("#JoinDate").prop("disabled", true);
            $("#EmpId").select2();
             $("#DtInput").datepicker({
                        changeMonth: true,
                        changeYear: true,
                        onSelect: function (date) {
                            // Your CSS changes, just in case you still need them
                            $('a.ui-state-default').removeClass('ui-state-highlight');
                            $(this).addClass('ui-state-highlight');
                            var dateFormat = $("#DtInput").datepicker("option", "dateFormat");
                            //setter
                            $("#DtInput").datepicker("option", "dateFormat", 'dd-M-yy');
                        }
             });

            $("#DtMonth").datepicker({
                        changeMonth: true,
                        changeYear: true,
                        onSelect: function (date) {
                            // Your CSS changes, just in case you still need them
                            $('a.ui-state-default').removeClass('ui-state-highlight');
                            $(this).addClass('ui-state-highlight');
                            var dateFormat = $("#DtMonth").datepicker("option", "dateFormat");
                            //setter
                            $("#DtMonth").datepicker("option", "dateFormat", "dd-M-yy");
                        }
                });

            $("#updateButton").prop("disabled", true);
            $("#deleteButton").prop("disabled", true);
            $("#EmpId").change(function () {
                var selectedEmp = empInfos.find(serachEmp);
                if (selectedEmp != null) {
                    var dFormat = new Date(selectedEmp.DtJoin);
                    $("#DtJoin").val(`${dFormat.getDate()}-${month[dFormat.getMonth()]}-${dFormat.getFullYear()}`);
                    $("#EmpName").val(selectedEmp.EmpName);
                }
            });
            $("#loading").css("display", "none");

            table = $('#loanReturnTable').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
                columns: [
                    { 'sClass': 'PFContributionId', 'visible': false },
                    { 'sClass': 'EmpCode', 'visible': true },
                    { 'sClass': 'EmpName', 'visible': true },
                    { "sClass": "DtJoin", 'visible': true },
                    { 'sClass': 'Section', 'visible': true },
                    { 'sClass': 'Designation', 'visible': true },
                    { 'sClass': 'Amount', 'visible': true },
                    { 'sClass': 'DtInput', 'visible': true },
                    { 'sClass': 'PF', 'visible': true },
                    { 'sClass': 'EmpId', 'visible': false }
                ],
                select: true,
                select: 'single',
                'paging': false,
                'info': false,
                //"scrollX": true,
                //"scrollY": "60vh",
                language: {
                    search: '',
                    searchPlaceholder: "Search..."
                },
                "scrollCollapse": true,
            });

        });

        // search employee
        function serachEmp(empInfos) {
            var empId = $("#EmpId option:selected").val();
            if (empId == "")
                return;
            return empInfos.EmpId == empId;
        }

        //save button click function
        $("#saveButton").click(function () {
            var PFContribution = {
                PFContributionId: $("#PFContributionId").val() || 0,
                EmpId: $("#EmpId option:selected").val(),
                DtInput: $("#DtInput").val(),
                DtJoin: $("#DtJoin").val(),
                PF: $("#PF option:selected").val(),
                Amount: $("#Amount").val(),
                ComId: "",
                PcName:"",
                UserId:"",
                UpdateByUserId:"",
                DateAdded:"",
                DateUpdated:""
            };

            if (PFContribution.EmpId !== "" && PFContribution.Amount !== 0 && PFContribution.DtInput !== "" && PFContribution.Amount!=="") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreatePFContribution", "Payroll")',
                    dataType: 'json',
                    data: { PFContribution: PFContribution },
                    success: function (result) {
                    if (result.Success == "1") {
                        customFile('1', result.ex);
                        location.reload();
                    }
                    else
                        toastr.error(result.ex);
                },
                error: function (ex) {
                           toastr.error("Sorry, an error occured . . . .");
                       }

                });

                ClearTextBoxes();
            } else {

                if (PFContribution.Amount === "" || PFContribution.Amount===0) {
                    $("#Amount").css("border-color", "red");
                }

                if (PFContribution.DtInput === "" || PFContribution.DtInput === "=N/A=") {
                    $("#DtInput").css("border-color", "red");
                }

                if (PFContribution.EmpName === "" || PFContribution.EmpName === "N/A") {
                    $("#EmpName").css("border-color", "red");
                }


                $(".messageBody").html("Please Provide all the required fields");
                $(".divforfull").css("display", "block");
                $(".myMessage").css("display", "block");
                setTimeout(function () {
                    $(".myMessage").fadeOut(500);
                    $(".divforfull").fadeOut(500);

                }, 2000);
            }


        });
        //save button click function end

        //update salary Deduction function ajax

            $("#updateButton").click(function () {
            var PFContribution = {
                PFContributionId: $("#PFContributionId").val() || 0,
                EmpId: $("#EmpId option:selected").val(),
                DtInput: $("#DtInput").val(),
                DtJoin: $("#DtJoin").val(),
                PF: $("#PF option:selected").val(),
                Amount: $("#Amount").val(),
                ComId: "",
                PcName:"",
                UserId:"",
                UpdateByUserId:"",
                DateAdded:"",
                DateUpdated:""
            };

            if (PFContribution.EmpId !== "" && PFContribution.Amount !== 0 && PFContribution.DtInput !== "" && PFContribution.Amount!=="") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("CreatePFContribution", "Payroll")',
                    dataType: 'json',
                    data: { PFContribution: PFContribution },
                    success: function (result) {
                    if (result.Success == "1") {
                        customFile('1', result.ex);
                        location.reload();
                    }
                    else
                        toastr.error(result.ex);
                },
                error: function (ex) {
                           toastr.error("Sorry, an error occured . . . .");
                       }

                });

                ClearTextBoxes();
            } else {

                if (PFContribution.Amount === "" || PFContribution.Amount===0) {
                    $("#Amount").css("border-color", "red");
                }

                if (PFContribution.DtInput === "" || PFContribution.DtInput === "=N/A=") {
                    $("#DtInput").css("border-color", "red");
                }

                if (PFContribution.EmpName === "" || PFContribution.EmpName === "N/A") {
                    $("#EmpName").css("border-color", "red");
                }


                $(".messageBody").html("Please Provide all the required fields");
                $(".divforfull").css("display", "block");
                $(".myMessage").css("display", "block");
                setTimeout(function () {
                    $(".myMessage").fadeOut(500);
                    $(".divforfull").fadeOut(500);

                }, 2000);
            }


        });

        @*$("#updateButton").click(function () {
            var PFContribution = {
                PFContributionId: $("#PFContributionId").val() || 0,
                EmpId: $("#EmpId option:selected").val(),
                DtInput: $("#DtInput").val(),
                DtJoin: $("#DtJoin").val(),
                PF: $("#PF option:selected").val(),
                Amount: $("#Amount").val(),
                ComId: "",
                PcName:"",
                UserId:"",
                UpdateByUserId:"",
                DateAdded:"",
                DateUpdated:""
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreatePFContribution", "Payroll")',
                dataType: 'json',

                data: { PFContribution: PFContribution},
                success: function (result) {
                    if (result.Success == "1") {
                        customFile('1', result.ex);
                        location.reload();
                    }
                    else
                        toastr.error(result.ex);
                },
                error: function (ex) {
                           toastr.error("Sorry, an error occured . . . .");
                       }

                });


                ClearTextBoxes();
        });*@

        //clear textboxes and reset buttons
        function ClearTextBoxes() {
            $("#EmpId").val("").change();
            $("#EmpName").val("");
            $("#Amount").val("");
            //$("#PF").val("");
            //$('#EmpId').select2({
            //    allowClear: true
            //});
            $("#DtInput").val("");
            $("#DtJoin").val("");

            $("#updateButton").prop("disabled", true);
            $("#deleteButton").prop("disabled", true);

            $("#saveButton").prop("disabled", false);

            $("input").css("border-color", "");
        }

        //reset button click function
        $("#resetButton").click(function() {

            ClearTextBoxes();
            var date = new Date();
            $(".datepicker").val("");
            //himu change
            //$("#DtMonth").val(monthNames[date.getMonth()] + '-' + date.getFullYear());

        });


        //load salary Deduction information of a month
        $("#loadButton").click(function () {
            var text = $("#DtMonth").val();
            //var position = text.indexOf("-");
            //var month = text.substring(0, position);
            //var year = text.substring(position + 1, text.strlen);
            //var date = '1' + '-' + month + '-' + year;
            @*$("#loanReturnTable").html('');
            $("#loanReturnTable").load('@Url.Action("LoadLoanReturnPartial", "LoanReturn")' + '?date=' + text, function () {

            });*@

            table.rows().remove().draw();
             $.ajax({
                type: 'POST',
                url: '@Url.Action("LoadPFContributionPartial", "Payroll")',
                dataType: 'json',
                // headers : { "X-CSRF-TOKEN-GTR_ANTIFORZERY": antiForgeryToken },
                 //async: true,
                 data: {date: text},
                success: function (result) {
                    initializeGrid(result);
                    StopSpinner("#loadButton");
               },
                 error: function (ex) {
                     StopSpinner("#loadButton");
                   alert("Sorry, an error occured . . . .");
               }
             });
        });

        function initializeGrid(data) {
                var arrays = [];
                for (var i = 0; i < data.length; i++) {
                    arrays.push([
                        data[i].PFContributionId,
                        data[i].EmpCode,
                        data[i].EmpName,
                        data[i].DtJoin,
                        data[i].Section,
                        data[i].Designation,
                        data[i].Amount,
                        data[i].DtInput,
                        data[i].PF,
                        data[i].EmpId
                    ]);
                }
                table.rows.add(arrays).draw(false);

            };

        //table row double click function
        $(document).on("click", "#loanReturnTable tr", function () {
            var rowData = table.row(".selected").data();
            //console.log(rowData);
            $("#PFContributionId").val(rowData[0]);
            $("#EmpId").val(`${rowData[9]}`).change();
            $("#EmpName").val(rowData[2]);
            $("#DtJoin").val(rowData[3]);
            $("#DtInput").val(rowData[7]);
            $("#Amount").val(rowData[6]);
            $("#PF").val(`${rowData[8]}`);


            $("#updateButton").prop("disabled", false);
            $("#deleteButton").prop("disabled", false);
            $("#saveButton").prop("disabled", true);
        });

        //update salary Deduction ajax function end

        //delete salary Deduction ajax function
        $("#deleteButton").click(function() {

            if ($("#PFContributionId").val() == "") {
                alert("Select Some entry");
            }
            else {
                var r = confirm("Are you sure to delete PF Contribution?");
                if (!r) {
                    event.preventDefault();
                } else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeletePFContributionAjax", "Payroll")',
                        dataType: 'json',
                        data: { DedId: $("#PFContributionId").val() },
                        success: function (result) {
                            if (result.Success == "1") {
                                customFile('1', result.ex);
                                location.reload();
                            }

                            else
                                toastr.error(result.ex);
                        },
                        error: function (ex) {
                                   toastr.error("Sorry, an error occured . . . .");
                               }

                });


                    @*$("#loanReturnTable tbody").html("");
                    $("#loanReturnTable").load('@Url.Action("LoadLoanReturnPartial", "LoanReturn")', function () { });*@

                }
            }
            ClearTextBoxes();
        });

        //delete salary Deduction ajax function end
        $(document).on("click", ".table tbody tr", function () {
            $(this).addClass("clicked").siblings().removeClass("clicked");
        });

        </script>

    }