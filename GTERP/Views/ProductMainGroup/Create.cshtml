@model GTERP.Models.ProductMainGroup

<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>

<body>
    @using (Html.BeginForm("Create", "ProductMainGroup", FormMethod.Post))

    {
        @Html.AntiForgeryToken()
        <div class="container" style="max-width:700px;">

            <div class="py-7 text-center">
                <h1 id="styletext">ProductMainGroup Information</h1>
                <p class="lead"></p>
            </div>
            <div id="modalbodyrakin" class="row card p-4">
                <div class="col-md-12 order-md-1">
                    <form class="needs-validation card" novalidate>
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @if (Model != null)
                            {

                                <input type="hidden" id="ProductMainGroupId" name="ProductMainGroupId" value="@Model.ProductMainGroupId" />
                                @Html.HiddenFor(model => model.userid)
                                @Html.HiddenFor(model => model.comid)
                                @Html.HiddenFor(model => model.useridUpdate)
                                @Html.HiddenFor(model => model.DateAdded)
                                @Html.HiddenFor(model => model.DateUpdated)

                            }
                            else
                            {
                                <input type="hidden" id="comid" name="comid" value="" />
                            }

                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.ProductMainGroupCode, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.ProductMainGroupCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductMainGroupCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                  
                        <div class="col-md-12 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.ProductMainGroupDescription, htmlAttributes: new { @class = "control-label" })
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.ProductMainGroupDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ProductMainGroupDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        </div>
                        <div class="row">
                            <div class="col-md-3"></div>
                            <div class="col-md-3 col-12">
                                @if (ViewBag.Title == "Create")
                                {
                                    <input type="submit" value="Create" class="btn btn-primary btn-block rounded-0" />
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <button class="btn btn-danger btn-block rounded-0" type="button" onclick="Categories_delete()">Delete</button>
                                }

                            </div>
                            <div class="col-md-3 col-12">
                                @Html.ActionLink("Back", "Index", "ProductMainGroup", null, new { @class = "btn btn-info btn-block rounded-0" })
                            </div>
                            <div class="col-md-3"></div>
                        </div>
                    </form>

                </div>
            </div>

        </div>
    }

    @section scripts{ 

    <script type="text/javascript">

     function Categories_delete() {

         var ProductMainGroupId = $("#ProductMainGroupId").val();
            $.ajax({

                url: '@Url.Action("Delete", "ProductMainGroup")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: ProductMainGroupId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "ProductMainGroup")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
    }


    $(document).ready(function () {


        })

    </script>

        }
</body>