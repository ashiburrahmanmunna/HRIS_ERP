@model IEnumerable<GTERP.Models.Production>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="text-center">
    <div class="row">

        <div class="col">
            @Html.ActionLink("Production Create", "Create", null, null, new { @class = "btn btn-outline-info btn-block", @id = "btnBack" })

        </div>

        <div class="col">
            <h2 id="styletext">Production List</h2>
        </div>
        <div class="col-lg-2">

        </div>

    </div>

</div>
<div class="card mt-2 mb-0">
    <div class="row px-4 py-3">

        <div class="col-md-4 col-12">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text py-0">
                        <label>From Date</label>
                    </span>
                </div>
                <input id="fromDate" type="date" asp-for="FirstOrDefault().ProductionDate" class="form-control" />
            </div>
        </div>

        <div class="col-md-4 col-12">
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text py-0">
                        <label>To Date</label>
                    </span>
                </div>
                <input id="toDate" type="date" asp-for="LastOrDefault().ProductionDate" class="form-control" />
            </div>
        </div>

        <div class="col-md-1 col-12">
            <input id="btnload" type="button" value="Load" class="btn btn-success p-md-1 btn-block rounded-0" />
        </div>
        <div class="col-md-3 col-12">
            <fieldset class="pull-right" style="height: auto;margin-bottom: 0px">
                <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>
            </fieldset>
        </div>
    </div>
    <hr />
    <form class="p-3">
        <div class="table-responsive text-nowrap">
            <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
                <thead class="">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Unit.PrdUnitName)
                        </th>
                        <th>
                            Production Date
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MonthName.MonthName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.YearName.FYName)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.DailySeedQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MonthlySeedQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.YearlySeedQty)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.DailyBagQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.MonthlyBagQty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.YearlyBagQty)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.PhosphoricPerTon)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AmmoniaPerTon)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SulfuricPerTon)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SandPerTon)
                        </th>

                        <th>Action</th>
                    </tr>
                </thead>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Unit.PrdUnitName)
                        </td>
                        <td>
                            @String.Format("{0:dd-MMM-yyyy}", Convert.ToDateTime(Convert.ToDateTime(item.ProductionDate).ToShortDateString()))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonthName.MonthName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.YearName.FYName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DailySeedQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonthlySeedQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.YearlySeedQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DailyBagQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MonthlyBagQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.YearlyBagQty)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhosphoricPerTon)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AmmoniaPerTon)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SulfuricPerTon)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SandPerTon)
                        </td>
                        <td>
                            <span data-toggle="tooltip" title="Edit!">
                                @Html.ActionLink(" ", "Edit", new { id = item.ProductionId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                            </span>
                            <span data-toggle="tooltip" title="Delete!">
                                @Html.ActionLink(" ", "Delete", new { Id = item.ProductionId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                            </span>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </form>
</div>
@section Scripts{
    <script>

        $(document).ready(function () {

            $("#btnload").click(function () {
                let from = $("#fromDate").val();
                let to = $("#toDate").val();

                if (from == "" && to == "") {
                    toastr.warning("Select From Date and To Date");
                    return false;
                }

                window.location.href = '@Url.Action("Index","Productions")?from=' + from + '&to=' + to;
            });

            $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        {
                            extend: 'copy',
                            text: '<i class="mdi mdi-content-copy"></i>',
                            className: 'btn-primary',
                            titleAttr: 'Copy to Clipboard'
                        },
                        {
                            extend: 'csv',
                            text: '<i class="mdi mdi-note-outline"></i>',
                            className: 'btn-secondary',
                            titleAttr: 'Export to csv'

                        },
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        },
                        {
                            extend: 'print',
                            text: '<i class="mdi mdi-printer"></i>',
                            className: 'btn-info',
                            titleAttr: 'Print Table'
                        }

                    ]
                },
                "searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 25,
                "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                //responsive: true,
                // fixedColumns: {
                //    leftColumns: 2,
                //    rightColumns: 1
                //},
                language: {
                    sLengthMenu: "_MENU_"
                }
                ////"fixedColumns": {
                ////    "leftColumns": 2,

                ////},
                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });
        });

                        //$(".search_input").addClass('form-control input-lg col-xs-12');

        function ReportPrint(btnvalue) {
            var date = $('#fromDate').val();
            var Monthid = $('#month').val();
            var reporttype = $("input[name=RptType]:checked").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProductionReport", "Productions")',
                dataType: 'json',
                async: true,
                data: { rptFormet: reporttype, action: btnvalue, ProductionDate: date, Monthid: Monthid },
                success: function (response) {

                    window.open(response.Url, '_blank')
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
        }

    </script>
}
