@Html.AntiForgeryToken()
@model GTERP.Models.Product
@*<h2>Create</h2>*@


<style>
    .input-validation-error {
        border: 2px solid #f00;
        background: #fee;
    }

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }

    div.dataTables_length {
        float: right;
    }
    
    div.dataTables_filter {
        float: left;
    }


    div.dataTables_paginate {
        float: right;
    }

    div.DTTT {
        float: left;
        margin-right: 50px;
    }

    div.buttons {
        clear: both;
    }

    .fas, .far {
        font-size: 10px !important;
    }


    table.dataTable tbody td, .sorting {
        vertical-align: middle;
        text-align: center;
    }

    .sorting_asc {
        color: green;
        vertical-align: middle;
        text-align: center;
        font-style: oblique;
    }

    .sorting_desc {
        color: #0932d1;
        vertical-align: middle;
        text-align: center;
        font-style: oblique;
    }

    .table-sm th {
        padding: .8em;
        background: rgb(192,196,196);
        background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
        font-family: 'Roboto Condensed', sans-serif;
        font-weight: 500;
        font-size: 15px;
    }

    .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
        background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
    }

    table.dataTable tbody tr.selected, table.dataTable tbody th.selected, table.dataTable tbody td.selected {
        color: green;
    }

    .select-box {
        position: relative;
        display: block;
        width: 100%;
        margin: 0 auto;
        font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
        font-size: 18px;
        color: #60666d;
    }

    #myInputSearch {
        background-image: url('../../Content/css/searchicon.png');
        background-position: 10px 12px;
        background-repeat: no-repeat;
        width: 100%;
        padding: 12px 20px 12px 40px;
        border: 1px solid #ddd;
        text-align: center;
        font-size: 22px;
        margin-bottom: 12px;
    }


    div#DataTables_Table_0_wrapper {
        width: 100% !important;
    }

    .tblExportInvoice th:first-child, .tblExportInvoice tbody td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6 !important;
        z-index: 1;
    }

    .tblExportInvoice tfoot td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6 !important;
        z-index: 1;
    }

    .tblExportInvoice th:nth-child(2) {
        position: sticky !important;
        left: 70px;
        background-color: #f2f2f2e6 !important;
        z-index: 1;
    }

    .tblExportInvoice tbody td:nth-child(2) {
        position: sticky !important;
        left: 70px;
        background-color: #f2f2f2e6 !important;
        z-index: 1;
    }

    .tblExportInvoice tbody td:nth-child(3), th:nth-child(3) {
        position: sticky !important;
        left: 140px;
        background-color: #f2f2f2e6 !important;
        z-index: 1;
    }

    table.dataTable.display tbody > tr.selected:hover, table.dataTable.display tbody > tr > .selected:hover {
        background-color: transparent;
    }
</style>


<body>



    @*@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
    @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { id = "myform", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="text-center">
                <h2 id="styletext" class="text-center">Product @ViewBag.Title</h2>
                @*<p class="lead"></p>*@
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null)
            {

                <input type="hidden" id="ProductId" name="ProductId" value="@Model.ProductId" />
                <input type="hidden" id="userid" name="userid" value="@Model.userid" />
                <input type="hidden" id="comid" name="comid" value="@Model.comid" />
                <input type="hidden" id="useridUpdate" name="useridUpdate" value="@Model.useridUpdate" />
                <input type="hidden" id="DateAdded" name="DateAdded" value="@Model.DateAdded" />
                <input type="hidden" id="DateUpdated" name="DateUpdated" value="@Model.DateUpdated" />



                @*@Html.HiddenFor(model => model.userid)
                    @Html.HiddenFor(model => model.comid)
                    @Html.HiddenFor(model => model.useridUpdate)
                    @Html.HiddenFor(model => model.DateAdded)
                    @Html.HiddenFor(model => model.DateUpdated)*@
            }
            else
            {
                <input type="hidden" id="comid" name="comid" value="0" />
                <input type="hidden" id="ProductId" name="ProductId" value="" />
                <input type="hidden" id="DateAdded" name="DateAdded" value="" />
                <input type="hidden" id="DateUpdated" name="DateUpdated" value="" />

                <!--If model has no value this code will execute-->
            }


        <div id="modalbodyfahad" class="card">
                <form class="needs-validation p-3" novalidate>
                
                        <div class="card">
                            <div class="card-header text-white bg-success">
                                <h6 class="text-center">Product / Material Information for Store WaresHouse</h6>
                            </div>
                            <div class="card-body row">
                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductCode)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductName)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductNameBangla)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductNameBangla, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductNameBangla, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductMainGroupId, "Product Main Group")
                                            </span>
                                        </div>
                                        @Html.DropDownList("ProductMainGroupId", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ProductMainGroupId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.CategoryId, "Category")
                                            </span>
                                        </div>
                                        @Html.DropDownList("CategoryId", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.CountryId, "Currency")
                                            </span>
                                        </div>
                                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-6 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.UnitId, "Unit")
                                            </span>
                                        </div>
                                        @Html.DropDownList("UnitId", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.UnitId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.Description)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductBrand)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductBrand, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductBrand, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductModel)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductModel, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductModel, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ProductBarcode)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ProductBarcode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ProductBarcode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    

                        <div class="card">
                            @*<div class="card-header text-white bg-info">
                                <h6 class="text-center">Product / Material Information For Store Accounts</h6>
                            </div>*@
                            <div class="card-body row">
                                @*<div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.RetailerPrice)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.RetailerPrice, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.RetailerPrice, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                                @*<div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.ReorderLevelOne)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.ReorderLevelOne, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReorderLevelOne, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                                @*<div class="col-md-4 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(model => model.MinimumOrderQty)
                                            </span>
                                        </div>
                                        @Html.EditorFor(model => model.MinimumOrderQty, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.MinimumOrderQty, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                      

                        <d@*iv class="col-md-3 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.CostPrice)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                            </div>
                        </d*@iv>

                        @*<div class="col-md-3 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.SalePrice)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        @*<div class="col-md-3 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.vatPercentage)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.vatPercentage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.vatPercentage, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                        @*<div class="col-md-3 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.vatAmount)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.vatAmount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.vatAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        @*<div class="col-md-6 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.AccIdInventory, "Inventory Code")
                                    </span>
                                </div>
                                @Html.DropDownList("AccIdInventory", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AccIdInventory, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        @*<div class="col-md-6 col-12">
                            <div class="input-group mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.AccIdConsumption, "Consumption Code")
                                    </span>
                                </div>
                                @Html.DropDownList("AccIdConsumption", null, "--Select From List--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AccIdConsumption, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        <div class="col-md-12 col-12">
                            @*<div class="d-block mx-auto">
        <div class="col-md-4 offset-md-2">*@
                            @Html.HiddenFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.FileExtension, new { htmlAttributes = new { @class = "form-control" } })


                            @Html.LabelFor(model => model.ProductImage)


                            @if (Model == null)
                            {
                            }
                            else
                            {


                                if (Model.ProductImage == null)
                                {

                                    <img src="@Url.Content("uploads/" + 0 + ".png")" class="img-thumbnail" multiple />
                                }
                                else
                                {
                                    <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.ProductImage))" class="img-thumbnail">
                                }
                            }

                            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
                            <input type="file" class="image-upload" name="file" id="myFile" />
                            @*<input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />*@
                            <br />
                            <img src="" height="200" id='image_X' alt="Image preview..." class="ml-4">
                            <div class="images pt-2">



                                @*</div>*@
                            </div>
                            <hr />
                        </div>

        
                  

                    <div class="col-md-12 order-md-2 my-2">
                        <div class="table-responsive" hidden>
                            <table id="tblInventorySub" class="table tblInventorySub display table-bordered table-striped table-hover" width="100%">
                                <thead>
                                    <tr>
                                        <th>Check</th>
                                        <th>InventoryId</th>
                                        <th>ProductId</th>
                                        <th>WarehouseId</th>
                                        <th>Warehouse</th>
                                        <th>Opening Stock Date</th>
                                        <th>Opening Stock</th>
                                        <th>Purchase Qty</th>
                                        <th>Purchase Ret Qty</th>
                                        <th>Purchase Exc Qty</th>
                                        <th>Sales Qty</th>
                                        <th>Sales Ret Qty</th>
                                        <th>Sales Exc Qty</th>
                                        <th>Challan Qty</th>
                                        <th>Ending Stock</th>
                                        <th>Current Stock</th>
                                        <th>Date Added</th>
                                        <th>User Id</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        @if (Model.InventorySubs != null)
                                        {
                                            foreach (var item in Model.InventorySubs)
                                            {
                                                <tr class="txtMultInventorySub">
                                                    <td>
                                                        <input type="checkbox" class="clickchk" onchange="cbChange(this)">
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.InventoryId)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.ProductId)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.WareHouseId)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.Warehouses.WhName)
                                                    </td>
                                                    <td>
                                                        @if (item.OpeningStockDate == null)
                                                        {
                                                            @Html.DisplayTextFor(i => item.OpeningStockDate)
                                                        }
                                                        else
                                                        {
                                                            @Convert.ToString(string.Format("{0:dd-MMM-yy}", @item.OpeningStockDate))

                                                        }
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.OpStock)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.PurQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.PurRetQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.PurExcQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.SalesQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.SalesRetQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.SalesExcQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.ChallanQty)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.EnStock)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.CurrentStock)
                                                    </td>

                                                    <td>
                                                        @Convert.ToString(string.Format("{0:dd-MMM-yy}", @item.DateAdded))
                                                    </td>
                                                    <td>
                                                        @Html.DisplayTextFor(i => item.userid)
                                                    </td>

                                                    <td>
                                                        <a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>
                                                    </td>

                                                </tr>
                                            }
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="5">
                                            <div type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus fa-lg"></i></div>

                                        </td>

                                        <td class="text-right" colspan="1">

                                            <h6>Total Stock Qty</h6>
                                        </td>
                                        <td colspan="1">
                                            <h6 class="ttlorderqtyProduct">0.00</h6>
                                        </td>

                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <div class="col-md-12 col-12">
                            <div class="row">
                                <div class="col-md-4 col-12">
                                    @if (ViewBag.Title == "Create")
                                    {
                                        @*<input type="submit" value="Create" class="btn btn-primary btn-block" />*@

                                        <button class="btn btn-primary btn-block rounded-0" type="button" onclick="Products_save()">Save</button>
                                    }
                                    else if (ViewBag.Title == "Edit")
                                    {
                                        @*<input type="submit" value="Update" class="btn btn-warning btn-block" />*@

                                        <button class="btn btn-warning btn-block rounded-0" type="button" onclick="Products_save()">Update</button>
                                    }
                                    else if (ViewBag.Title == "Delete")
                                    {
                                        <button class="btn btn-danger rounded-0 btn-block" type="button" onclick="Products_delete()">Delete</button>
                                    }
                                </div>
                                <div class="col-md-4 col-12">
                                    @Html.ActionLink("Back", "Index", "Products", null, new { @class = "btn btn-info btn-block rounded-0"})
                                </div>
                                <div class="col-md-8"></div>
                            </div>
                        </div>
                    </div>
                    </div>
                        </div>
                </form>

            </div>
            </div>
       


        <div class="modal fade my-2" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-body">
                        <div id="SubSectionList" class="row">
                            <div class="col order-md-1">
                                <form class="p-1">
                                    <div class="table-responsive">
                                        <table id="tblwarehouse" class="table table-striped table-hover text-center table-bordered" width="100%">
                                            <thead>
                                                <tr>
                                                    <th>Check</th>
                                                    <th>InventoryId</th>
                                                    <th>ProductId</th>
                                                    <th>WarehouseId</th>
                                                    <th>Warehouse</th>
                                                    <th>Opening Stock Date</th>
                                                    <th>Opening Stock</th>
                                                    <th>Purchase Qty</th>
                                                    <th>Purchase Ret Qty</th>
                                                    <th>Purchase Exc Qty</th>
                                                    <th>Sales Qty</th>
                                                    <th>Sales Ret Qty</th>
                                                    <th>Sales Exc Qty</th>
                                                    <th>Challan Qty</th>
                                                    <th>Ending Stock</th>
                                                    <th>Current Stock</th>
                                                    <th>Date Added</th>
                                                    <th>User Id</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (ViewBag.Warehouses != null)
                                                {
                                                    foreach (var item in ViewBag.Warehouses)
                                                    {
                                                        <tr class="txtMultmasterlcdetails">
                                                            <td>
                                                                <input type="checkbox" class="clickchk" onchange="cbChange(this)">
                                                            </td>
                                                            <td>
                                                                0
                                                            </td>
                                                            <td>
                                                                0
                                                            </td>
                                                            <td>
                                                                @item.WarehouseId
                                                            </td>
                                                            <td>
                                                                @item.WhName
                                                            </td>
                                                            <td></td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>
                                                            <td>
                                                                0.00
                                                            </td>

                                                            <td></td>
                                                            <td></td>

                                                            <td>
                                                                <a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>
                                                            </td>
                                                        </tr>
                                                    }
                                                }

                                            </tbody>

                                        </table>
                                    </div>
                                    <br />

                                </form>

                            </div>
                        </div>  @*Datatable Initializer tblproductserialsearch*@
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger rounded-0" data-dismiss="modal">Close</button>
                        @*<button type="button" class="btn btn-primary">Save changes</button>*@
                    </div>
                </div>
            </div>
        </div>
    }

    @section scripts{

        <script type="text/javascript">



        var files = [];

        //$("input[type=file]").change(function (event) {
        //    $.each(event.target.files, function (index, file) {
        //        var reader = new FileReader();
        //        reader.onload = function (event) {
        //            object = {};
        //            object.filename = file.name;
        //            object.data = event.target.result;
        //            files.push(object);
        //        };
        //        reader.readAsDataURL(file);
        //    });
        //});

     function Products_delete() {

            var ProductId = $("#ProductId").val();
            //alert(SalesId);

         $.ajax({

                url: '@Url.Action("Delete", "Products")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: ProductId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "Products")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
    }


    $(document).ready(function () {



        if ($('h2').text() == "Product Edit") {
        }
        else {


            $('#CostPrice').val(0);
            $('#SalePrice').val(0);
            $('#RetailerPrice').val(0);
            $('#vatPercentage').val(0);
            $('#vatAmount').val(0);
            $('#ReorderLevelOne').val(0);
            $('#MinimumOrderQty').val(0);
        }



        $('#myFile').bind('change', function () {

            //this.files[0].size gets the size of your file.

            //  alert(this.files[0].size);

            var a = this.files[0].size;

            if (a >= 6000000) {
                alert('File size is too large!! \n 50 KB maximum');
                $('#myFile').val('');
                document.getElementById('image_X').src = ''

            }
            else {
                //alert('its ok');
                previewFile();

            }
        });

        function previewFile() {
            var preview = document.querySelector('#image_X'); //selects the query named img
            var file = document.querySelector('input[type=file]').files[0]; //sames as here

            var reader = new FileReader();


            reader.onloadend = function () {
                preview.src = reader.result;
            }

            if (file) {
                reader.readAsDataURL(file); //reads the data as a URL
            } else {
                preview.src = "";
            }
        }

        })


            $('#CountryId').select2();
            $('#UnitId').select2();
            $('#SubCategoryId').select2();


            $('#ProductMainGroupId').select2();





        $('#AccIdInventory').select2();
        $('#AccIdConsumption').select2();



            $('#CategoryId').select2({})
                .on("select2:select", function (e) {
                if ($('#CategoryId').val() > 0) {

                    //alert('enter');
                    CascadeSubCategory();
                }
                else {
                    alert('Please Select Category Information First.')
                }

                console.log("select2:select")
            });

               $("select").select2({
                theme: "bootstrap4",
            });


        function CascadeSubCategory() {

        //alert('prdsearch');
            $("#SubCategoryId").empty();
        //$("#ProductDescription").val("=N/A=");
        //$("#Qty").val(1);


            $.ajax({
                type: 'POST',
                url: '@Url.Action("getSubCategory", "Products")',
                dataType: 'json',
                async: false,
                data: { id: $("#CategoryId").val() },
                success: function (data) {
                    var s ='<option value="-1">Please Select Sub Category</option>';
                    //$.each(data, function (i, data) {
                    //    $("#Product").append('<option value="'+ data.Value + '">'
                    //        + data.Text + '</option>');
                    //});
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    }
                    $("#SubCategoryId").html(s);
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };







        var tblInventorySub = $('#tblInventorySub').dataTable({


            "aoColumns": [
                {
                    "sClass": "checkbox",
                    "visible": false,
                    "render": function () {
                        return '<input type="checkbox" class="clickchk"  onchange ="cbChange(this)"  data-toggle="modal" data-target="#checkModal" >';
                    }
                },
                { "sClass": "InventoryId", "visible": false },
                { "sClass": "ProductId", "visible": false },
                { "sClass": "WarehouseId", "visible": false },
                { "sClass": "WarehouseName", "visible": true },
                { "sClass": "OpeningStockDate", "visible": true },
                { "sClass": "OpStock", "visible": true },
                { "sClass": "PurQty", "visible": false },
                { "sClass": "PurRetQty", "visible": false },
                { "sClass": "PurExcQty", "visible": false },
                { "sClass": "SalesQty", "visible": false },
                { "sClass": "SalesRetQty", "visible": false },
                { "sClass": "SalesExcQty", "visible": false },
                { "sClass": "Challanqty", "visible": false },
                { "sClass": "EnStock", "visible": false },
                { "sClass": "CurrStock", "visible": true },
                { "sClass": "DateAdded", "visible": false },
                { "sClass": "UserId", "visible": false },
                { "sClass": "action", "visible": false }

            ],


            "tableTools": {
                "sRowSelector": "td:not(:first-child)"
            },
            dom: 'litpfB',
            select: "single",
            columnDefs: [
                //{
                //    "render": function () {
                //        return "<button type='button' >=></button>"
                //    },
                //    "targets": -1
                //},
                {
                    "render": function (data, type, row) {
                        return '<input class="form-control form-control-sm" id="OpStock"  name="OpStock" type="text" data-val="true"  data-val-required="Please Fill OpStock Qty." value = ' + data + '  readonly="readonly" >';
                    },
                    "targets": 6

                },
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="PurQty" readonly="readonly" name="PurQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 7

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="PurRetQty" readonly="readonly" name="PurRetQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 8

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="PurExcQty" readonly="readonly" name=" PurExcQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 9

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="SalesQty" readonly="readonly" name=" SalesQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 10

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="SalesRetQty" readonly="readonly" name="SalesRetQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 11

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="SalesExcQty" readonly="readonly" name="SalesExcQty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 12

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="Challanqty" readonly="readonly" name="Challanqty" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 13

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="EnStock" readonly="readonly" name="EnStock" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 13

                //},
                //{
                //    "render": function (data, type, row) {
                //        return '<input class="form-control form-control-sm" id="CurrStock" readonly="readonly" name="CurrStock" type="text"  value = ' + data + '  >';
                //    },
                //    "targets": 14

                //},
                {

                    render: function (date) {
                        return "<input type='text' class='form-control form-control-sm datecell' value='" + date + "'/>"
                    },
                    "targets": 5
                }
                //,                {

                //    render: function (data, type, full, meta) {
                //        //return "<input type='text' class='form-control form-control-sm' value='" + data + "'/>"
                //        return '<select><option>A</option><option>B</option>' ;
                //    },
                //    "targets": 3
                //}

                //}
            ],
            createdRow: function (row) {
                $(".datecell", row).datepicker(
                    { dateFormat: 'dd-M-yy' }
                    //$('#datepicker').datepicker({ dateFormat: 'dd-mm-yy' }).val();

                ).val();
            },
            buttons: [{
                extend: "selectRows",
                className: 'btn-danger rounded-0 mr-1',
                text: 'Detach From Product Inventory',

                action: function (e, sourceTable, button, config) {

                    var selectedRows = sourceTable.rows(".selected");
                    var mData = selectedRows.data();
                    selectedRows.remove().draw();
                    targetTable = $("#tblwarehouse").DataTable();
                    $.each(mData, function (idx, item) {
                        targetTable.row.add(JSON.parse(JSON.stringify(item)));
                    })
                    targetTable.draw();
                    //multInputsProduct();
                }

            }],

            initComplete: function () {
                $("#tblInventorySub button").on("click", function (evt) {

                    var t1 = $("#tblInventorySub").DataTable();
                    var t2 = $("#tblwarehouse").DataTable();
                    var tr = $(this).closest("tr");
                    var row = t1.row(tr);
                    var data = JSON.parse(JSON.stringify(row.data()));



                    //alert(data[0]);
                    row.remove().draw();
                    t2.row.add(data).draw();

                    //multInputsProduct();
                });



            },


            "bFilter": true,
            //"bSort": true,
            "bInfo": true,
            "async": false,
            "paging": true,
            "retrieve": true,
            "iDisplayLength": 10,
            "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
            "scrollX": true,
            "language": {
                "processing": "processing... please wait",
                sLengthMenu: " _MENU_",
                search: "",
                searchPlaceholder: "Search..."
            },
            "scrollCollapse": true,
            rowCallback: function (row) {
                $(row).addClass('txtMultInventorySub');
            }
            //,select: "multi"
        });

        function AddInventory() {
            $('#tblInventorySub').dataTable().fnAddData([
                0,
                0,
                0,
                0,
                0,
                0,
                0.00,
                0.00,
                0.00,
                0, 0, 0,
                0, 0, 0, 0,
                0, 0,
                '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >'

            ]);
        };




        tblwarehouse = $('#tblwarehouse').dataTable({


            "aoColumns": [

                { "sClass": "checkbox", "visible": false },
                { "sClass": "InventoryId", "visible": false },
                { "sClass": "ProductId", "visible": false },
                { "sClass": "WarehouseId", "visible": false },
                { "sClass": "WarehouseName", "visible": true },
                { "sClass": "OpeningStockDate", "visible": true },
                { "sClass": "OpStock", "visible": true },
                { "sClass": "PurQty", "visible": false },
                { "sClass": "PurRetQty", "visible": false },
                { "sClass": "PurExcQty", "visible": false },
                { "sClass": "SalesQty", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '')  },
                { "sClass": "SalesRetQty", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '')  },
                { "sClass": "SalesExcQty", "visible": false, render: $.fn.dataTable.render.number(',', '.', 2, '')  },
                { "sClass": "Challanqty", "visible": false },
                { "sClass": "EnStock", "visible": false },
                { "sClass": "CurrStock", "visible": true },
                { "sClass": "DateAdded", "visible": false },
                { "sClass": "UserId", "visible": false },
                { "sClass": "action", "visible": false }

            ],
            //dom: '<"float-left">rt<"row"<"col-sm-4"l><"col-sm-4"><"col-sm-4"p>>',

            rowCallback: function (row) {
                $(row).addClass('txtMultmasterlcdetails');
            },
            select: "multi",
            columnDefs: [{
                targets: [-1],
                render: function () {
                    return "<button type='button'>=></button>"
                }
            }],
            buttons: [{
                extend: "selectRows",
                className: 'btn-success rounded-0',
                text: 'Attach To Product List',
                action: function (e, sourceTable, button, config) {

                    var selectedRows = sourceTable.rows(".selected");
                    var mData = selectedRows.data();

                    selectedRows.remove().draw();
                    targetTable = $("#tblInventorySub").DataTable(

                    );


                    var rowCount = targetTable
                        .column(0)
                        .data()
                        .length;

                    $.each(mData, function (idx, item) {

                        //alert(idx);
                        //alert(rowCount);
                        item[24] = idx + 1 + rowCount;
                        //alert(item[24]);
                        targetTable.row.add(JSON.parse(JSON.stringify(

                            item
                        )));
                        //alert('data added');

                    })

                    targetTable.draw();

                    //multInputsProduct();
                }
            }],
            initComplete: function () {
                $("#tblwarehouse button").on("click", function (evt) {

                    var t1 = $("#tblwarehouse").DataTable();
                    var t2 = $("#tblInventorySub").DataTable();
                    var tr = $(this).closest("tr");
                    var row = t1.row(tr);
                    var data = JSON.parse(JSON.stringify(row.data()));
                    //alert(data[0]);
                    row.remove().draw();
                    t2.row.add(data).draw();

                    //multInputsProduct();
                });
            },
            //"bFilter": true,
            "paging": true,
            //"retrieve": true,
            "iDisplayLength": 20,
            "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
            "scrollX": true,
            "order": [2, 'asc'],
            "oLanguage": {
                "sZeroRecords": "",
                "sEmptyTable": "",
                sLengthMenu: " _MENU_",
                //search: "",
                //searchPlaceholder: "Search..."

            },
            dom: 'tBlip'
        }); //

        //if (!$("#myform").valid()) {
        //    alert('Please Fill Up All Necessary Information Correctly.');
        //    $("html, body").animate({ scrollTop: 0 }, 500);
        //    return false;
        //}


        function Products_save() {

            // Step 1: Read View Data and Create JSON Object
            if (!$("#myform").valid()) {
                toastr.error('Please Fill Up All Necessary Information Correctly.');
                $("html, body").animate({ scrollTop: 0 }, 500);
                return false;
            }
            ///alert('save 1');


            // Creating Detail Json Object , "DeliveryTerm": ""
            var InventorySub = {
                "InventoryId": "", "ProductId": "", "WareHouseId": "", "OpStock": "", "PurQty": "", "PurRetQty": "", "PurExcQty": "",
                "SalesQty": "", "SalesRetQty": "", "SalesExcQty": "", "ChallanQty": "", "EnStock": "", "CurrentStock": "",
                "Remarks": "", "OpeningStockDate": "",
                "userid": "", "useridUpdate": "", "DateAdded": "", "DateUpdated": "", "comid": ""
            };

            ///alert('save 2');

            var Product = {
                "userid": "", "useridUpdate": "", "DateAdded": "", "DateUpdated": "", "comid": "0",
                "ProductId": "", "ProductName": "","ProductNameBangla": "", "CategoryId": "","ProductMainGroupId":"", "Description": "", "CostPrice": "", "SalePrice": "", "RetailerPrice": "", "ReorderLevelOne": "", "MinimumOrderQty": "", "CountryId": "", "ProductBarcode": "", "vatPercentage": "",
                "vatAmount": "", "ProductBrand": "", "ProductModel": "", "UnitId": "", "SubCategoryId": "", "ProductImage": "", "FileExtension": "", "ImagePath": "", "ProductCode": "", "AccIdInventory": "", "AccIdConsumption": "",
                "InventorySubs": []
            };



            Product.userid = $("#userid").val() || 0;
            Product.comid = $("#comid").val() || 0;


            Product.useridUpdate = $("#useridUpdate").val() || 0;
            Product.DateAdded = $("#DateAdded").val();
            Product.DateUpdated = $("#DateUpdated").val();

            Product.ProductId = $("#ProductId").val() || 0;
            Product.ProductName = $("#ProductName").val();
            Product.ProductNameBangla = $("#ProductNameBangla").val();
            Product.CategoryId = $("#CategoryId").val();
            Product.ProductMainGroupId = $("#ProductMainGroupId").val();



            Product.Description = $("#Description").val();
            Product.CostPrice = $("#CostPrice").val() || 0;

            Product.SalePrice = $("#SalePrice").val() || 0;
            Product.RetailerPrice = $("#RetailerPrice").val() || 0;
            Product.ReorderLevelOne = $("#ReorderLevelOne").val() || 0;
            Product.MinimumOrderQty = $("#MinimumOrderQty").val() || 0;


            Product.CountryId = $("#CountryId").val();
            Product.ProductImage = $("#ProductImage").val();

            Product.FileExtension = $("#FileExtension").val();
            Product.ImagePath = $("#ImagePath").val();



            Product.ProductCode = $("#ProductCode").val();
            Product.AccIdInventory = $("#AccIdInventory").val();
            Product.AccIdConsumption = $("#AccIdConsumption").val();




            //var fileInputtest = document.getElementById('myFile');
            //var filenametest = fileInputtest.files[0].data;

            //var files = document.getElementById("myFile").files;
            //alert(files[0].data);
            ////alert(filenametest);
            //Product.ProductImage = filenametest;




            Product.ProductBarcode = $("#ProductBarcode").val();
            Product.vatPercentage = $("#vatPercentage").val() || 0;


            Product.vatAmount = $("#vatAmount").val() || 0;
            Product.ProductBrand = $("#ProductBrand").val();
            Product.ProductModel = $("#ProductModel").val();
            Product.UnitId = $("#UnitId").val();
            Product.SubCategoryId = $("#SubCategoryId").val();




            ////Invoice subs data
            var oTable = $('#tblInventorySub').dataTable().fnGetData();

            var rows = $("#tblInventorySub").dataTable().fnGetNodes();
            for (var i = 0; i < oTable.length; i++) {
                //alert(oTable.length);

               // alert($('#styletext').text());


                if ($('#styletext').text() == "Product Edit") {
                    InventorySub.InventoryId = oTable[i][1];
                   // alert(InventorySub.InventoryId);

                }
                else {

                    InventorySub.InventoryId = 0;

                }


                InventorySub.ProductId = oTable[i][2];
                InventorySub.WareHouseId = oTable[i][3];

                InventorySub.OpeningStockDate = rows[i].cells[1].children[0].value;
                InventorySub.OpStock = rows[i].cells[2].children[0].value;
                //alert(rows[i].cells[2].children[0].value);


                InventorySub.PurQty = oTable[i][7];
                InventorySub.PurRetQty = oTable[i][8];
                InventorySub.PurExcQty = oTable[i][9];

                InventorySub.SalesQty = oTable[i][10];
                InventorySub.SalesRetQty = oTable[i][11];
                InventorySub.SalesExcQty = oTable[i][12];


                InventorySub.ChallanQty = oTable[i][13];
                InventorySub.EnStock = oTable[i][14];
                InventorySub.CurrentStock = oTable[i][15];

                InventorySub.DateAdded = oTable[i][16];
                InventorySub.userid = oTable[i][17];
                InventorySub.comid = 0;



                //alert('save 4');


                Product.InventorySubs.push(InventorySub);

                // Creating Detail Json Object , "DeliveryTerm": ""
                var InventorySub = {
                    "InventoryId": "", "ProductId": "", "WareHouseId": "", "OpStock": "", "PurQty": "", "PurRetQty": "", "PurExcQty": "",
                    "SalesQty": "", "SalesRetQty": "", "SalesExcQty": "", "ChallanQty": "", "EnStock": "", "CurrentStock": "",
                    "Remarks": "", "OpeningStockDate": "",
                    "userid": "", "useridUpdate": "", "DateAdded": "", "DateUpdated": "", "comid": "0"
                };

            }

            var x = JSON.stringify({ Product });
            //alert(x);

            //var file = new FormData();
            ////var files = document.getElementById("UploadedFiles").files;
            //for (var i = 0; i < selectedFiles.length; i++) {
            //    if (!selectedFiles[i].type.match('image.*')) {
            //        alert('enter');
            //        continue;
            //    }
            //    file.append("uploadedFiles", selectedFiles[i]);
            //}



            // alert('4');
            //console.log(Product);
            //alert(files[0].data);


            //var $file = document.getElementById('myFile'),
            //    $formData = new FormData();

            //if ($file.files.length > 0) {
            //    for (var i = 0; i < $file.files.length; i++) {
            //        $formData.append('file-' + i, $file.files[i]);
            //        alert('added');
            //    }
            //}
            var formData = new FormData($('form').get(0));
            var filename = null;
            //var formData = new FormData();

            var myformdata = $("#myform").serialize();
            var fileInput = document.getElementById('myFile');
            if (fileInput.files.length > 0)
            {
                filename = fileInput.files[0].name;
            }


            //console.log(Product)
            formData.append("producta", x);
            formData.append("filename", filename);
            //formData.append("httpPostedFileBase", fileInput.files[0]);///IFormFile
            formData.append('file', fileInput.files[0]);


            //$formData.append("Product", Product);

            //alert('fully ok');
            //console.log($formData);
            //$formData.append("file", file);


            $.ajax({
                url: '@Url.Action("Create", "Products")',
                type: 'POST',
                data: formData,
                processData: false, // do not process data
                contentType: false, // do not force content type
             success: function (result) {
                    //alert('Proceed for Bulk Data Save');

                 if (result.Success == "1") {

                     //window.location.href = "/Invoice/index";
                     //window.location.href = '@Url.Action("Index", "Products")';
                     //window.location.href = "Create?BuyerID=0&Flag = 1";


                     if ($('h2').text() == "Product Edit") {

                         customFile('2', result.ex);

                     }
                     else {
                         customFile('1', result.ex);
                     }



                     window.setTimeout(function () {

                         // Move to a new location or you can do something else
                         window.location.href = '@Url.Action("Create", "Products")';

                            @*var buyerids = 0;
                            buyerids = $('#BuyerID').val();

                                window.location.href =@Url.Action("Index", "COM_MasterLC") "~/Create?BuyerID=" + buyerids;*@

                     }, 500);


                 }
                 else {
                     customFile('3', result.ex);

                     //alert(result.ex);
                     if (!result.success) {
                         for (var error in result.errors) {
                             //alert(result.errors);
                             //$('#errorMessages').append(error + '<br />');
                             customFile('3', result.errors);
                         }
                     }
                 }
                },
                error: function (ex) {

                    customFile('3', result.ex);
                    if (!result.success) {
                        for (var error in result.errors) {
                            //alert(result.errors);
                            //$('#errorMessages').append(error + '<br />');
                            customFile('3', result.errors);
                        }
                    }
                }
            });

            @*$.ajax({
                //url: '/COM_MasterLC/Create',
                url: '@Url.Action("Create", "Products")',
                //data: JSON.stringify({ product: formdata }),

                //data: JSON.stringify({ product: Product, filename: filename, fileabc: fileInput.files[0] }),
                //data: formData,

                data: JSON.stringify({ product: Product}),
                //data: JSON.stringify({ product: Product }, {filename:filename}, { httpPostedFileBase: fileInput.files[0] }) ,
                //dataType: 'json',
                //contentType: false,
                dataType: 'json',

                contentType: false,
                //contentType: 'multipart/form-data',

                processData: false,

                type: 'POST',
                contentType: "application/json;charset=utf-8",
                async: true,
                //dataType: 'json',

                success: function (result) {


                    if (result.Success == "1") {
                        toastr.success('Data Save Successfully');
                        //window.location.href = "/Invoice/index";

                        @*window.setTimeout(function () {



                            var masterlcids = 0;
                            masterlcids = $("#MasterLCId").val();
                            window.location.href = "@Url.Action("Create", "ProductMasters", new { id = UrlParameter.Optional })" + "?MasterLCId=" + masterlcids;

                        }, 500);

                    }
                    else {
                        //alert(result.ex);
                        toastr.error(result.ex)
                    }
                },
                error: function (result) {
                    //toastr.error(result.errors);

                    if (result.errors = "") {
                        toastr.error("Unable To Save");
                    } else {
                        toastr.error(result.errors);

                    }
                }


            });*@


        }


        $('#exampleModal').on('shown.bs.modal', function () {
            $(this).trigger('resize')
        })


        //$(document).ready(function () {
        //    window.print();
        //});

        </script>
    }
</body>


