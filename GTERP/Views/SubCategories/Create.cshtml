@model GTERP.Models.SubCategory
<style>

    #styletext {
        color: transparent;
        background: #666666;
        -webkit-background-clip: text;
        -moz-background-clip: text;
        background-clip: text;
        text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
        font-weight: 100;
        font-size: 40px;
    }
</style>


<body>
    @*@using (Html.BeginForm("Create", "SubCategories", FormMethod.Post, new { enctype = "multipart/form-data" }))*@
    @using (Html.BeginForm("Create", "SubCategories", FormMethod.Post, new { id = "myform", enctype = "multipart/form-data" }))

    {
        @Html.AntiForgeryToken()
        <div class="container" style="max-width:700px;">

            <div class="py-7 text-center">
                <h1 id="styletext">Sub Category Information</h1>
                <p class="lead"></p>
            </div>
            <div id="modalbodyrakin" class="row card p-4">
                <div class="col-md-12 order-md-1">
                    <h4 class="mb-3">Category Information</h4>
                    <div class="needs-validation" novalidate>
                        <div class="row">

                            <br>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @if (Model != null)
                            {

                                <input type="hidden" id="SubCategoryId" name="SubCategoryId" value="@Model.SubCategoryId" />
                                @Html.HiddenFor(model => model.userid)
                                @Html.HiddenFor(model => model.comid)
                                @Html.HiddenFor(model => model.useridUpdate)
                                @Html.HiddenFor(model => model.DateAdded)
                                @Html.HiddenFor(model => model.DateUpdated)

                            }
                            else
                            {
                                <input type="hidden" id="comid" name="comid" value="" />
                            }

                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.DropDownListFor(m => m.CategoryId, ViewBag.CategoryId as List<SelectListItem>, "--Select From List--", new { id = "CategoryId", @class = "form-control form-control-sm" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.SubCategoryName, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.SubCategoryName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SubCategoryName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.SubCategoryCode, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.SubCategoryCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SubCategoryCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.SubCategoryDescription, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.SubCategoryDescription, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SubCategoryDescription, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-12">

                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.LinkAdd, htmlAttributes: new { @class = "control-label" })
                                        </span>
                                    </div>
                                    @Html.EditorFor(model => model.LinkAdd, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LinkAdd, "", new { @class = "text-danger" })

                                </div>

                            </div>
                        </div>
                        <br>

                        <div class="row">
                            <div class="col-md-4 offset-md-4 col-12">
                                @Html.HiddenFor(model => model.SubCategoryImage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.SubCategoryImagePath, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.HiddenFor(model => model.SubCategoryFileExtension, new { htmlAttributes = new { @class = "form-control" } })


                                @Html.LabelFor(model => model.SubCategoryImage)


                                @if (Model == null)
                                {
                                }
                                else
                                {


                                    if (Model.SubCategoryImage == null)
                                    {

                                        <img src="@Url.Content("uploads/" + 0 + ".png")" class="img-thumbnail" multiple />
                                    }
                                    else
                                    {
                                        <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.SubCategoryImage))" class="img-thumbnail">
                                    }
                                }


                                <input type="file" class="image-upload" name="file" id="myFile" />
                                @*<input type="hidden" id="imageDatatest" name="imageDatatest" value="data:image/jpeg;base64,....." />*@
                                <br />
                                <img src="" height="200" id='image_X' alt="Image preview...">
                                <div class="images">



                                </div>
                            </div>
                        </div>
                        <div class="row my-2">
                            <div class="col-md-3"></div>
                            <div class="col-md-3 col-12">
                                @if (ViewBag.Title == "Create")
                                {
                                    <input type="submit" value="Create" class="btn btn-primary btn-block rounded-0" />

                                    @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@
                                }
                                else if (ViewBag.Title == "Edit")
                                {
                                    <input type="submit" value="Update" class="btn btn-warning btn-block rounded-0" />

                                    @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@
                                }
                                else if (ViewBag.Title == "Delete")
                                {
                                    <button class="btn btn-danger btn-block rounded-0" type="button" onclick="SubCategories_delete()">Delete</button>
                                }
                            </div>
                            <div class="col-md-3 col-12">
                                @Html.ActionLink("Back", "Index", "SubCategories", null, new { @class = "btn btn-info btn-block rounded-0" })

                            </div>
                            <div class="col-md-3">

                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    }

    <script type="text/javascript">

     function SubCategories_delete() {

         var SubCategoryId = $("#SubCategoryId").val();
         //alert(SubCategoryId);
            $.ajax({

                url: '@Url.Action("Delete", "SubCategories")',
                //url: '@Url.Action("Delete")',
                data: JSON.stringify({ id: SubCategoryId }), //use id here
                //data: JSON.stringify(salesmain),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index", "SubCategories")';
                    }
                    else {
                        alert(result.ex);
                    }
                }
            });
    }


    $(document).ready(function () {


        $('#myFile').bind('change', function () {

            //this.files[0].size gets the size of your file.

            //  alert(this.files[0].size);

            var a = this.files[0].size;

            if (a >= 6000000) {
                alert('File size is too large!! \n 50 KB maximum');
                $('#myFile').val('');
                document.getElementById('image_X').src = ''

            }
            else {
                //alert('its ok');
                previewFile();

            }
        });

        function previewFile() {
            var preview = document.querySelector('#image_X'); //selects the query named img
            var file = document.querySelector('input[type=file]').files[0]; //sames as here

            var reader = new FileReader();


            reader.onloadend = function () {
                preview.src = reader.result;
            }

            if (file) {
                reader.readAsDataURL(file); //reads the data as a URL
            } else {
                preview.src = "";
            }
        }

        })

    </script>


</body>
