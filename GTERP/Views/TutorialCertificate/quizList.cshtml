@model IEnumerable<quizAnsVm>

@*@model IEnumerable<ModuleCourses>
@using GTERP.Models*@


<style>

    .tbllist th:first-child, .tbllist tbody td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:first-child {
        position: sticky;
        left: 0px;
        z-index: 1;
    }


    .tbllist th:last-child, .tbllist tbody td:last-child {
        position: sticky !important;
        right: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:last-child {
        position: sticky;
        right: 0px;
        z-index: 1;
    }

    .col1 {
        width: 25%;
    }

    .col2 {
        width: 25%;
    }

    .col3 {
        width: 25%;
    }

    .col4 {
        width: 25%;
    }
</style>

<div class="container-fluid">

     <div class="text-left mb-4 row">
    <a class="col-md-2 col-xs-12" href="@Url.Action( "ModuleRecordView", "TutorialCertificate")">Back to list  </a>
    </div>
    <div class="text-center">
        <div class="row">
            <div class="col">
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 text-left">
              @Html.ActionLink("Create", "Quiz","TutorialCertificate", null, new { @class = "btn btn-primary btn-xs", @target = "_blank" })
                            
             </div>
       
    </div>

    <div class="card p-2 table-responsive">
        <table id="tbllist" class="table table-striped table-bordered table-sm tbllist  table-hover" cellspacing="0" width="100%">
            <thead class="text-nowrap">
                <tr>
                    <th>
                        Module Name
                    </th>
                    <th>
                        Number Of Questions
                    </th>
                    <th>
                        Prepared By
                    </th>
                    <th>
                        Pass Mark
                    </th>
                    <th>
                        Author Sign
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>

            <tbody class="text-nowrap" style="text-align:left;">

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ModuleName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.totalques)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.preparedBy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.passMark)
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.authSign)*@
                            <img width="50px" src="@Url.Content(item.authSign)" />
                        </td>

                        <td class="text-nowrap">
                            <span data-toggle="tooltip" title="Edit!">
                                @Html.ActionLink(" ", "EditQuiz", new { moduleid = item.ModuleId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })
                                @*@Html.ActionLink(" ", "Create", new { id = item.ModuleCourseId }, new { @class = "fas fa-edit btn btn-warning btn-xs", @target = "_blank" })*@
                            </span>
                            <span data-toggle="tooltip" title="Delete!">
                                @Html.ActionLink("", "DeleteQuiz", new { moduleid = item.ModuleId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs", onclick = "return confirm('Do you really want to delete?')"})
                             @*   @Html.ActionLink("", "Delete", new { moduleid = item.ModuleId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs", onclick = "return confirm('Do you really want to delete?')" })*@
                            </span>
                        </td>
                        @* <td>
                    <a href="@Url.Action("Print", "HR", new { Id = item.ModuleMenuChildId, type="excel" })"
                    target="_blank"
                    class="far fa-file-pdf btn btn-success btn-xs">
                    </a>
                    </td>*@
                    </tr>
                }

            </tbody>


        </table>
        <br />
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function() {
            $('#tbllist thead tr').clone(true).appendTo('#tbllist thead');
            $('#tbllist thead:last tr:eq(0) th').each(function(i) {
                var title = $(this).text().trim();
                $(this).html('<input type="text" class="form-control"   placeholder="' + title + '" />');

                $('input', this).on('keyup change', function() {
                    if (table.column(i).search() !== this.value) {
                        table
                            .column(i)
                            .search(this.value)
                            .draw();
                    }
                });
            });

            var table = $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel',
                            exportOptions: {
                                columns: ':visible',
                                rows: ':visible'
                            }
                        }

                    ]
                },
                "searching": true,
                "ordering": true,
                "info": true,
                "iDisplayLength": 15,
                "lengthMenu": [[5, 15, 20, 50, -1], [5, 15, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                language: {
                    sLengthMenu: "_MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                dom: 'Blfrtip'
            });
        });

                                                //$(".search_input").addClass('form-control input-lg col-xs-12');

    </script>
}












    @*@model IEnumerable<GTERP.Models.ModuleCourses>

@{
    ViewData["Title"] = "ModuleRecordView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>ModuleRecordView</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>


            <th>
                @Html.DisplayNameFor(model => model.ModuleId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModuleMenuId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VideoLink)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FilePath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModuleMenuChildId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ModuleId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModuleMenuId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VideoLink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FilePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModuleMenuChildId)
            </td>
            <td>
                <a asp-action="Edit2" asp-route-id="@item.ModuleCourseId" class="btn btn-info">Edit</a>

               @Html.ActionLink("Delete", "Delete", new { id = item.ModuleCourseId }, new {@class="btn btn-danger", onclick="return confirm('Do you really want to delete?')"})
            </td>
        </tr>
}
    </tbody>
</table>*@
