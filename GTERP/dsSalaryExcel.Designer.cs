//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GTERP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSalaryExcel")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSalaryExcel : global::System.Data.DataSet {
        
        private Payroll_rptSalarySheetExcelDataTable tablePayroll_rptSalarySheetExcel;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public dsSalaryExcel() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected dsSalaryExcel(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Payroll_rptSalarySheetExcel"] != null)) {
                    base.Tables.Add(new Payroll_rptSalarySheetExcelDataTable(ds.Tables["Payroll_rptSalarySheetExcel"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Payroll_rptSalarySheetExcelDataTable Payroll_rptSalarySheetExcel {
            get {
                return this.tablePayroll_rptSalarySheetExcel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsSalaryExcel cln = ((dsSalaryExcel)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Payroll_rptSalarySheetExcel"] != null)) {
                    base.Tables.Add(new Payroll_rptSalarySheetExcelDataTable(ds.Tables["Payroll_rptSalarySheetExcel"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablePayroll_rptSalarySheetExcel = ((Payroll_rptSalarySheetExcelDataTable)(base.Tables["Payroll_rptSalarySheetExcel"]));
            if ((initTable == true)) {
                if ((this.tablePayroll_rptSalarySheetExcel != null)) {
                    this.tablePayroll_rptSalarySheetExcel.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsSalaryExcel";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSalaryExcel.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePayroll_rptSalarySheetExcel = new Payroll_rptSalarySheetExcelDataTable();
            base.Tables.Add(this.tablePayroll_rptSalarySheetExcel);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializePayroll_rptSalarySheetExcel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSalaryExcel ds = new dsSalaryExcel();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Payroll_rptSalarySheetExcelRowChangeEventHandler(object sender, Payroll_rptSalarySheetExcelRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Payroll_rptSalarySheetExcelDataTable : global::System.Data.TypedTableBase<Payroll_rptSalarySheetExcelRow> {
            
            private global::System.Data.DataColumn columnSalaryMonth;
            
            private global::System.Data.DataColumn columnSalaryFromDate;
            
            private global::System.Data.DataColumn columnSalaryToDate;
            
            private global::System.Data.DataColumn columnIdCardNo;
            
            private global::System.Data.DataColumn columnEmployeeName;
            
            private global::System.Data.DataColumn columnDOJ;
            
            private global::System.Data.DataColumn columnSeparationDate;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDesigNation;
            
            private global::System.Data.DataColumn columnDepartMent;
            
            private global::System.Data.DataColumn columnLINE;
            
            private global::System.Data.DataColumn columnSection;
            
            private global::System.Data.DataColumn columnGrade;
            
            private global::System.Data.DataColumn columnStaffCatagory;
            
            private global::System.Data.DataColumn columnEarnDays;
            
            private global::System.Data.DataColumn columnWorkingDays;
            
            private global::System.Data.DataColumn columnMonthDays;
            
            private global::System.Data.DataColumn columnCL;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnEL;
            
            private global::System.Data.DataColumn columnAB;
            
            private global::System.Data.DataColumn columnBASIC;
            
            private global::System.Data.DataColumn columnHR;
            
            private global::System.Data.DataColumn columnMA;
            
            private global::System.Data.DataColumn columnGROSS;
            
            private global::System.Data.DataColumn columnADVANCE;
            
            private global::System.Data.DataColumn columnLaunchDeduction;
            
            private global::System.Data.DataColumn columnAttBonus;
            
            private global::System.Data.DataColumn columnInrementAmount;
            
            private global::System.Data.DataColumn columnCompBasic;
            
            private global::System.Data.DataColumn columnAbsentAmount;
            
            private global::System.Data.DataColumn columnActualOTHour;
            
            private global::System.Data.DataColumn columnOTRate;
            
            private global::System.Data.DataColumn columnOTAmount;
            
            private global::System.Data.DataColumn columnReleasedAbsentDeduction;
            
            private global::System.Data.DataColumn columnTotalPayable;
            
            private global::System.Data.DataColumn columnNetPayable;
            
            private global::System.Data.DataColumn columnWeeklyHoliday;
            
            private global::System.Data.DataColumn columnHoliday;
            
            private global::System.Data.DataColumn columnCompWH;
            
            private global::System.Data.DataColumn columnPresentDay;
            
            private global::System.Data.DataColumn columnAbsent;
            
            private global::System.Data.DataColumn columnActualWorkHour;
            
            private global::System.Data.DataColumn columnPayableWorkHour;
            
            private global::System.Data.DataColumn columnTransPort;
            
            private global::System.Data.DataColumn columnCompTA;
            
            private global::System.Data.DataColumn columnEmployeeStatus;
            
            private global::System.Data.DataColumn columnPayableHouseRent;
            
            private global::System.Data.DataColumn columnPayableMedicalAllowance;
            
            private global::System.Data.DataColumn columnFestiveBonus;
            
            private global::System.Data.DataColumn columnStampDeduction;
            
            private global::System.Data.DataColumn columnWeeklyWorkHour;
            
            private global::System.Data.DataColumn columnDailyWoringHour;
            
            private global::System.Data.DataColumn columnUnitName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelDataTable() {
                this.TableName = "Payroll_rptSalarySheetExcel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Payroll_rptSalarySheetExcelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Payroll_rptSalarySheetExcelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalaryMonthColumn {
                get {
                    return this.columnSalaryMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalaryFromDateColumn {
                get {
                    return this.columnSalaryFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SalaryToDateColumn {
                get {
                    return this.columnSalaryToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdCardNoColumn {
                get {
                    return this.columnIdCardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EmployeeNameColumn {
                get {
                    return this.columnEmployeeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DOJColumn {
                get {
                    return this.columnDOJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeparationDateColumn {
                get {
                    return this.columnSeparationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DesigNationColumn {
                get {
                    return this.columnDesigNation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DepartMentColumn {
                get {
                    return this.columnDepartMent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LINEColumn {
                get {
                    return this.columnLINE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SectionColumn {
                get {
                    return this.columnSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GradeColumn {
                get {
                    return this.columnGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StaffCatagoryColumn {
                get {
                    return this.columnStaffCatagory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EarnDaysColumn {
                get {
                    return this.columnEarnDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WorkingDaysColumn {
                get {
                    return this.columnWorkingDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MonthDaysColumn {
                get {
                    return this.columnMonthDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CLColumn {
                get {
                    return this.columnCL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ELColumn {
                get {
                    return this.columnEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ABColumn {
                get {
                    return this.columnAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BASICColumn {
                get {
                    return this.columnBASIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HRColumn {
                get {
                    return this.columnHR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MAColumn {
                get {
                    return this.columnMA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GROSSColumn {
                get {
                    return this.columnGROSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADVANCEColumn {
                get {
                    return this.columnADVANCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LaunchDeductionColumn {
                get {
                    return this.columnLaunchDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AttBonusColumn {
                get {
                    return this.columnAttBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InrementAmountColumn {
                get {
                    return this.columnInrementAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompBasicColumn {
                get {
                    return this.columnCompBasic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AbsentAmountColumn {
                get {
                    return this.columnAbsentAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActualOTHourColumn {
                get {
                    return this.columnActualOTHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OTRateColumn {
                get {
                    return this.columnOTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OTAmountColumn {
                get {
                    return this.columnOTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ReleasedAbsentDeductionColumn {
                get {
                    return this.columnReleasedAbsentDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TotalPayableColumn {
                get {
                    return this.columnTotalPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NetPayableColumn {
                get {
                    return this.columnNetPayable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeeklyHolidayColumn {
                get {
                    return this.columnWeeklyHoliday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HolidayColumn {
                get {
                    return this.columnHoliday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompWHColumn {
                get {
                    return this.columnCompWH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PresentDayColumn {
                get {
                    return this.columnPresentDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AbsentColumn {
                get {
                    return this.columnAbsent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActualWorkHourColumn {
                get {
                    return this.columnActualWorkHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PayableWorkHourColumn {
                get {
                    return this.columnPayableWorkHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TransPortColumn {
                get {
                    return this.columnTransPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompTAColumn {
                get {
                    return this.columnCompTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EmployeeStatusColumn {
                get {
                    return this.columnEmployeeStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PayableHouseRentColumn {
                get {
                    return this.columnPayableHouseRent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PayableMedicalAllowanceColumn {
                get {
                    return this.columnPayableMedicalAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FestiveBonusColumn {
                get {
                    return this.columnFestiveBonus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StampDeductionColumn {
                get {
                    return this.columnStampDeduction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WeeklyWorkHourColumn {
                get {
                    return this.columnWeeklyWorkHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DailyWoringHourColumn {
                get {
                    return this.columnDailyWoringHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelRow this[int index] {
                get {
                    return ((Payroll_rptSalarySheetExcelRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Payroll_rptSalarySheetExcelRowChangeEventHandler Payroll_rptSalarySheetExcelRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Payroll_rptSalarySheetExcelRowChangeEventHandler Payroll_rptSalarySheetExcelRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Payroll_rptSalarySheetExcelRowChangeEventHandler Payroll_rptSalarySheetExcelRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Payroll_rptSalarySheetExcelRowChangeEventHandler Payroll_rptSalarySheetExcelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddPayroll_rptSalarySheetExcelRow(Payroll_rptSalarySheetExcelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelRow AddPayroll_rptSalarySheetExcelRow(
                        string SalaryMonth, 
                        string SalaryFromDate, 
                        string SalaryToDate, 
                        string IdCardNo, 
                        string EmployeeName, 
                        System.DateTime DOJ, 
                        System.DateTime SeparationDate, 
                        string Gender, 
                        string DesigNation, 
                        string DepartMent, 
                        string LINE, 
                        string Section, 
                        string Grade, 
                        string StaffCatagory, 
                        float EarnDays, 
                        float WorkingDays, 
                        float MonthDays, 
                        float CL, 
                        float SL, 
                        float EL, 
                        float AB, 
                        decimal BASIC, 
                        decimal HR, 
                        decimal MA, 
                        decimal GROSS, 
                        decimal ADVANCE, 
                        short LaunchDeduction, 
                        decimal AttBonus, 
                        int InrementAmount, 
                        float CompBasic, 
                        float AbsentAmount, 
                        float ActualOTHour, 
                        decimal OTRate, 
                        decimal OTAmount, 
                        float ReleasedAbsentDeduction, 
                        decimal TotalPayable, 
                        decimal NetPayable, 
                        float WeeklyHoliday, 
                        float Holiday, 
                        float CompWH, 
                        float PresentDay, 
                        float Absent, 
                        float ActualWorkHour, 
                        float PayableWorkHour, 
                        decimal TransPort, 
                        decimal CompTA, 
                        string EmployeeStatus, 
                        float PayableHouseRent, 
                        float PayableMedicalAllowance, 
                        int FestiveBonus, 
                        decimal StampDeduction, 
                        float WeeklyWorkHour, 
                        float DailyWoringHour, 
                        string UnitName) {
                Payroll_rptSalarySheetExcelRow rowPayroll_rptSalarySheetExcelRow = ((Payroll_rptSalarySheetExcelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalaryMonth,
                        SalaryFromDate,
                        SalaryToDate,
                        IdCardNo,
                        EmployeeName,
                        DOJ,
                        SeparationDate,
                        Gender,
                        DesigNation,
                        DepartMent,
                        LINE,
                        Section,
                        Grade,
                        StaffCatagory,
                        EarnDays,
                        WorkingDays,
                        MonthDays,
                        CL,
                        SL,
                        EL,
                        AB,
                        BASIC,
                        HR,
                        MA,
                        GROSS,
                        ADVANCE,
                        LaunchDeduction,
                        AttBonus,
                        InrementAmount,
                        CompBasic,
                        AbsentAmount,
                        ActualOTHour,
                        OTRate,
                        OTAmount,
                        ReleasedAbsentDeduction,
                        TotalPayable,
                        NetPayable,
                        WeeklyHoliday,
                        Holiday,
                        CompWH,
                        PresentDay,
                        Absent,
                        ActualWorkHour,
                        PayableWorkHour,
                        TransPort,
                        CompTA,
                        EmployeeStatus,
                        PayableHouseRent,
                        PayableMedicalAllowance,
                        FestiveBonus,
                        StampDeduction,
                        WeeklyWorkHour,
                        DailyWoringHour,
                        UnitName};
                rowPayroll_rptSalarySheetExcelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPayroll_rptSalarySheetExcelRow);
                return rowPayroll_rptSalarySheetExcelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Payroll_rptSalarySheetExcelDataTable cln = ((Payroll_rptSalarySheetExcelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Payroll_rptSalarySheetExcelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSalaryMonth = base.Columns["SalaryMonth"];
                this.columnSalaryFromDate = base.Columns["SalaryFromDate"];
                this.columnSalaryToDate = base.Columns["SalaryToDate"];
                this.columnIdCardNo = base.Columns["IdCardNo"];
                this.columnEmployeeName = base.Columns["EmployeeName"];
                this.columnDOJ = base.Columns["DOJ"];
                this.columnSeparationDate = base.Columns["SeparationDate"];
                this.columnGender = base.Columns["Gender"];
                this.columnDesigNation = base.Columns["DesigNation"];
                this.columnDepartMent = base.Columns["DepartMent"];
                this.columnLINE = base.Columns["LINE"];
                this.columnSection = base.Columns["Section"];
                this.columnGrade = base.Columns["Grade"];
                this.columnStaffCatagory = base.Columns["StaffCatagory"];
                this.columnEarnDays = base.Columns["EarnDays"];
                this.columnWorkingDays = base.Columns["WorkingDays"];
                this.columnMonthDays = base.Columns["MonthDays"];
                this.columnCL = base.Columns["CL"];
                this.columnSL = base.Columns["SL"];
                this.columnEL = base.Columns["EL"];
                this.columnAB = base.Columns["AB"];
                this.columnBASIC = base.Columns["BASIC"];
                this.columnHR = base.Columns["HR"];
                this.columnMA = base.Columns["MA"];
                this.columnGROSS = base.Columns["GROSS"];
                this.columnADVANCE = base.Columns["ADVANCE"];
                this.columnLaunchDeduction = base.Columns["LaunchDeduction"];
                this.columnAttBonus = base.Columns["AttBonus"];
                this.columnInrementAmount = base.Columns["InrementAmount"];
                this.columnCompBasic = base.Columns["CompBasic"];
                this.columnAbsentAmount = base.Columns["AbsentAmount"];
                this.columnActualOTHour = base.Columns["ActualOTHour"];
                this.columnOTRate = base.Columns["OTRate"];
                this.columnOTAmount = base.Columns["OTAmount"];
                this.columnReleasedAbsentDeduction = base.Columns["ReleasedAbsentDeduction"];
                this.columnTotalPayable = base.Columns["TotalPayable"];
                this.columnNetPayable = base.Columns["NetPayable"];
                this.columnWeeklyHoliday = base.Columns["WeeklyHoliday"];
                this.columnHoliday = base.Columns["Holiday"];
                this.columnCompWH = base.Columns["CompWH"];
                this.columnPresentDay = base.Columns["PresentDay"];
                this.columnAbsent = base.Columns["Absent"];
                this.columnActualWorkHour = base.Columns["ActualWorkHour"];
                this.columnPayableWorkHour = base.Columns["PayableWorkHour"];
                this.columnTransPort = base.Columns["TransPort"];
                this.columnCompTA = base.Columns["CompTA"];
                this.columnEmployeeStatus = base.Columns["EmployeeStatus"];
                this.columnPayableHouseRent = base.Columns["PayableHouseRent"];
                this.columnPayableMedicalAllowance = base.Columns["PayableMedicalAllowance"];
                this.columnFestiveBonus = base.Columns["FestiveBonus"];
                this.columnStampDeduction = base.Columns["StampDeduction"];
                this.columnWeeklyWorkHour = base.Columns["WeeklyWorkHour"];
                this.columnDailyWoringHour = base.Columns["DailyWoringHour"];
                this.columnUnitName = base.Columns["UnitName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSalaryMonth = new global::System.Data.DataColumn("SalaryMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryMonth);
                this.columnSalaryFromDate = new global::System.Data.DataColumn("SalaryFromDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryFromDate);
                this.columnSalaryToDate = new global::System.Data.DataColumn("SalaryToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalaryToDate);
                this.columnIdCardNo = new global::System.Data.DataColumn("IdCardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdCardNo);
                this.columnEmployeeName = new global::System.Data.DataColumn("EmployeeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeName);
                this.columnDOJ = new global::System.Data.DataColumn("DOJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOJ);
                this.columnSeparationDate = new global::System.Data.DataColumn("SeparationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeparationDate);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDesigNation = new global::System.Data.DataColumn("DesigNation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesigNation);
                this.columnDepartMent = new global::System.Data.DataColumn("DepartMent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartMent);
                this.columnLINE = new global::System.Data.DataColumn("LINE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINE);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnGrade = new global::System.Data.DataColumn("Grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrade);
                this.columnStaffCatagory = new global::System.Data.DataColumn("StaffCatagory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffCatagory);
                this.columnEarnDays = new global::System.Data.DataColumn("EarnDays", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEarnDays);
                this.columnWorkingDays = new global::System.Data.DataColumn("WorkingDays", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWorkingDays);
                this.columnMonthDays = new global::System.Data.DataColumn("MonthDays", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonthDays);
                this.columnCL = new global::System.Data.DataColumn("CL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCL);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnEL = new global::System.Data.DataColumn("EL", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEL);
                this.columnAB = new global::System.Data.DataColumn("AB", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAB);
                this.columnBASIC = new global::System.Data.DataColumn("BASIC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIC);
                this.columnHR = new global::System.Data.DataColumn("HR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHR);
                this.columnMA = new global::System.Data.DataColumn("MA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA);
                this.columnGROSS = new global::System.Data.DataColumn("GROSS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROSS);
                this.columnADVANCE = new global::System.Data.DataColumn("ADVANCE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADVANCE);
                this.columnLaunchDeduction = new global::System.Data.DataColumn("LaunchDeduction", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaunchDeduction);
                this.columnAttBonus = new global::System.Data.DataColumn("AttBonus", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttBonus);
                this.columnInrementAmount = new global::System.Data.DataColumn("InrementAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInrementAmount);
                this.columnCompBasic = new global::System.Data.DataColumn("CompBasic", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompBasic);
                this.columnAbsentAmount = new global::System.Data.DataColumn("AbsentAmount", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentAmount);
                this.columnActualOTHour = new global::System.Data.DataColumn("ActualOTHour", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualOTHour);
                this.columnOTRate = new global::System.Data.DataColumn("OTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRate);
                this.columnOTAmount = new global::System.Data.DataColumn("OTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTAmount);
                this.columnReleasedAbsentDeduction = new global::System.Data.DataColumn("ReleasedAbsentDeduction", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReleasedAbsentDeduction);
                this.columnTotalPayable = new global::System.Data.DataColumn("TotalPayable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayable);
                this.columnNetPayable = new global::System.Data.DataColumn("NetPayable", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPayable);
                this.columnWeeklyHoliday = new global::System.Data.DataColumn("WeeklyHoliday", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeeklyHoliday);
                this.columnHoliday = new global::System.Data.DataColumn("Holiday", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHoliday);
                this.columnCompWH = new global::System.Data.DataColumn("CompWH", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompWH);
                this.columnPresentDay = new global::System.Data.DataColumn("PresentDay", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentDay);
                this.columnAbsent = new global::System.Data.DataColumn("Absent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsent);
                this.columnActualWorkHour = new global::System.Data.DataColumn("ActualWorkHour", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualWorkHour);
                this.columnPayableWorkHour = new global::System.Data.DataColumn("PayableWorkHour", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableWorkHour);
                this.columnTransPort = new global::System.Data.DataColumn("TransPort", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransPort);
                this.columnCompTA = new global::System.Data.DataColumn("CompTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompTA);
                this.columnEmployeeStatus = new global::System.Data.DataColumn("EmployeeStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmployeeStatus);
                this.columnPayableHouseRent = new global::System.Data.DataColumn("PayableHouseRent", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableHouseRent);
                this.columnPayableMedicalAllowance = new global::System.Data.DataColumn("PayableMedicalAllowance", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayableMedicalAllowance);
                this.columnFestiveBonus = new global::System.Data.DataColumn("FestiveBonus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFestiveBonus);
                this.columnStampDeduction = new global::System.Data.DataColumn("StampDeduction", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStampDeduction);
                this.columnWeeklyWorkHour = new global::System.Data.DataColumn("WeeklyWorkHour", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeeklyWorkHour);
                this.columnDailyWoringHour = new global::System.Data.DataColumn("DailyWoringHour", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDailyWoringHour);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnSalaryMonth.MaxLength = 50;
                this.columnSalaryFromDate.ReadOnly = true;
                this.columnSalaryFromDate.MaxLength = 30;
                this.columnSalaryToDate.ReadOnly = true;
                this.columnSalaryToDate.MaxLength = 30;
                this.columnIdCardNo.MaxLength = 30;
                this.columnEmployeeName.AllowDBNull = false;
                this.columnEmployeeName.MaxLength = 100;
                this.columnSeparationDate.ReadOnly = true;
                this.columnGender.MaxLength = 30;
                this.columnDesigNation.AllowDBNull = false;
                this.columnDesigNation.MaxLength = 100;
                this.columnDepartMent.AllowDBNull = false;
                this.columnDepartMent.MaxLength = 100;
                this.columnLINE.MaxLength = 100;
                this.columnSection.AllowDBNull = false;
                this.columnSection.MaxLength = 100;
                this.columnGrade.MaxLength = 25;
                this.columnStaffCatagory.MaxLength = 30;
                this.columnEarnDays.AllowDBNull = false;
                this.columnWorkingDays.AllowDBNull = false;
                this.columnMonthDays.AllowDBNull = false;
                this.columnCL.AllowDBNull = false;
                this.columnSL.AllowDBNull = false;
                this.columnEL.AllowDBNull = false;
                this.columnAB.ReadOnly = true;
                this.columnBASIC.AllowDBNull = false;
                this.columnHR.AllowDBNull = false;
                this.columnMA.AllowDBNull = false;
                this.columnGROSS.AllowDBNull = false;
                this.columnADVANCE.AllowDBNull = false;
                this.columnAttBonus.AllowDBNull = false;
                this.columnInrementAmount.ReadOnly = true;
                this.columnCompBasic.ReadOnly = true;
                this.columnAbsentAmount.ReadOnly = true;
                this.columnActualOTHour.AllowDBNull = false;
                this.columnOTRate.AllowDBNull = false;
                this.columnOTAmount.AllowDBNull = false;
                this.columnReleasedAbsentDeduction.ReadOnly = true;
                this.columnWeeklyHoliday.AllowDBNull = false;
                this.columnHoliday.AllowDBNull = false;
                this.columnCompWH.AllowDBNull = false;
                this.columnPresentDay.AllowDBNull = false;
                this.columnAbsent.AllowDBNull = false;
                this.columnActualWorkHour.ReadOnly = true;
                this.columnPayableWorkHour.ReadOnly = true;
                this.columnTransPort.AllowDBNull = false;
                this.columnCompTA.AllowDBNull = false;
                this.columnEmployeeStatus.ReadOnly = true;
                this.columnEmployeeStatus.MaxLength = 8;
                this.columnPayableHouseRent.ReadOnly = true;
                this.columnPayableMedicalAllowance.ReadOnly = true;
                this.columnFestiveBonus.ReadOnly = true;
                this.columnStampDeduction.AllowDBNull = false;
                this.columnWeeklyWorkHour.ReadOnly = true;
                this.columnDailyWoringHour.ReadOnly = true;
                this.columnUnitName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelRow NewPayroll_rptSalarySheetExcelRow() {
                return ((Payroll_rptSalarySheetExcelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Payroll_rptSalarySheetExcelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Payroll_rptSalarySheetExcelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Payroll_rptSalarySheetExcelRowChanged != null)) {
                    this.Payroll_rptSalarySheetExcelRowChanged(this, new Payroll_rptSalarySheetExcelRowChangeEvent(((Payroll_rptSalarySheetExcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Payroll_rptSalarySheetExcelRowChanging != null)) {
                    this.Payroll_rptSalarySheetExcelRowChanging(this, new Payroll_rptSalarySheetExcelRowChangeEvent(((Payroll_rptSalarySheetExcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Payroll_rptSalarySheetExcelRowDeleted != null)) {
                    this.Payroll_rptSalarySheetExcelRowDeleted(this, new Payroll_rptSalarySheetExcelRowChangeEvent(((Payroll_rptSalarySheetExcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Payroll_rptSalarySheetExcelRowDeleting != null)) {
                    this.Payroll_rptSalarySheetExcelRowDeleting(this, new Payroll_rptSalarySheetExcelRowChangeEvent(((Payroll_rptSalarySheetExcelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovePayroll_rptSalarySheetExcelRow(Payroll_rptSalarySheetExcelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSalaryExcel ds = new dsSalaryExcel();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Payroll_rptSalarySheetExcelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Payroll_rptSalarySheetExcelRow : global::System.Data.DataRow {
            
            private Payroll_rptSalarySheetExcelDataTable tablePayroll_rptSalarySheetExcel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Payroll_rptSalarySheetExcelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePayroll_rptSalarySheetExcel = ((Payroll_rptSalarySheetExcelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalaryMonth {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.SalaryMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryMonth\' in table \'Payroll_rptSalarySheetExcel\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SalaryMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalaryFromDate {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.SalaryFromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryFromDate\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SalaryFromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SalaryToDate {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.SalaryToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalaryToDate\' in table \'Payroll_rptSalarySheetExcel\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SalaryToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IdCardNo {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.IdCardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdCardNo\' in table \'Payroll_rptSalarySheetExcel\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.IdCardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EmployeeName {
                get {
                    return ((string)(this[this.tablePayroll_rptSalarySheetExcel.EmployeeNameColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.EmployeeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DOJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePayroll_rptSalarySheetExcel.DOJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOJ\' in table \'Payroll_rptSalarySheetExcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.DOJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime SeparationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePayroll_rptSalarySheetExcel.SeparationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeparationDate\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SeparationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'Payroll_rptSalarySheetExcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DesigNation {
                get {
                    return ((string)(this[this.tablePayroll_rptSalarySheetExcel.DesigNationColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.DesigNationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DepartMent {
                get {
                    return ((string)(this[this.tablePayroll_rptSalarySheetExcel.DepartMentColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.DepartMentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LINE {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.LINEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LINE\' in table \'Payroll_rptSalarySheetExcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.LINEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Section {
                get {
                    return ((string)(this[this.tablePayroll_rptSalarySheetExcel.SectionColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Grade {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.GradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grade\' in table \'Payroll_rptSalarySheetExcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.GradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string StaffCatagory {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.StaffCatagoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffCatagory\' in table \'Payroll_rptSalarySheetExcel\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.StaffCatagoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float EarnDays {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.EarnDaysColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.EarnDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float WorkingDays {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.WorkingDaysColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.WorkingDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float MonthDays {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.MonthDaysColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.MonthDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float CL {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.CLColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.CLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float SL {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.SLColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float EL {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.ELColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float AB {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.ABColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AB\' in table \'Payroll_rptSalarySheetExcel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal BASIC {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.BASICColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.BASICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal HR {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.HRColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.HRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal MA {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.MAColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.MAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal GROSS {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.GROSSColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.GROSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ADVANCE {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.ADVANCEColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ADVANCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short LaunchDeduction {
                get {
                    try {
                        return ((short)(this[this.tablePayroll_rptSalarySheetExcel.LaunchDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaunchDeduction\' in table \'Payroll_rptSalarySheetExcel\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.LaunchDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AttBonus {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.AttBonusColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.AttBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int InrementAmount {
                get {
                    try {
                        return ((int)(this[this.tablePayroll_rptSalarySheetExcel.InrementAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InrementAmount\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.InrementAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float CompBasic {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.CompBasicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompBasic\' in table \'Payroll_rptSalarySheetExcel\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.CompBasicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float AbsentAmount {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.AbsentAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentAmount\' in table \'Payroll_rptSalarySheetExcel\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.AbsentAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float ActualOTHour {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.ActualOTHourColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ActualOTHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OTRate {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.OTRateColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.OTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal OTAmount {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.OTAmountColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.OTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float ReleasedAbsentDeduction {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.ReleasedAbsentDeductionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReleasedAbsentDeduction\' in table \'Payroll_rptSalarySheetEx" +
                                "cel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ReleasedAbsentDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TotalPayable {
                get {
                    try {
                        return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.TotalPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayable\' in table \'Payroll_rptSalarySheetExcel\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.TotalPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NetPayable {
                get {
                    try {
                        return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.NetPayableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPayable\' in table \'Payroll_rptSalarySheetExcel\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.NetPayableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float WeeklyHoliday {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.WeeklyHolidayColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.WeeklyHolidayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float Holiday {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.HolidayColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.HolidayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float CompWH {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.CompWHColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.CompWHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float PresentDay {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.PresentDayColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.PresentDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float Absent {
                get {
                    return ((float)(this[this.tablePayroll_rptSalarySheetExcel.AbsentColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.AbsentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float ActualWorkHour {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.ActualWorkHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualWorkHour\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.ActualWorkHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float PayableWorkHour {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.PayableWorkHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableWorkHour\' in table \'Payroll_rptSalarySheetExcel\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.PayableWorkHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TransPort {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.TransPortColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.TransPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CompTA {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.CompTAColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.CompTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EmployeeStatus {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.EmployeeStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmployeeStatus\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.EmployeeStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float PayableHouseRent {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.PayableHouseRentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableHouseRent\' in table \'Payroll_rptSalarySheetExcel\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.PayableHouseRentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float PayableMedicalAllowance {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.PayableMedicalAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayableMedicalAllowance\' in table \'Payroll_rptSalarySheetEx" +
                                "cel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.PayableMedicalAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int FestiveBonus {
                get {
                    try {
                        return ((int)(this[this.tablePayroll_rptSalarySheetExcel.FestiveBonusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FestiveBonus\' in table \'Payroll_rptSalarySheetExcel\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.FestiveBonusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal StampDeduction {
                get {
                    return ((decimal)(this[this.tablePayroll_rptSalarySheetExcel.StampDeductionColumn]));
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.StampDeductionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float WeeklyWorkHour {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.WeeklyWorkHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WeeklyWorkHour\' in table \'Payroll_rptSalarySheetExcel\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.WeeklyWorkHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public float DailyWoringHour {
                get {
                    try {
                        return ((float)(this[this.tablePayroll_rptSalarySheetExcel.DailyWoringHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DailyWoringHour\' in table \'Payroll_rptSalarySheetExcel\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.DailyWoringHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablePayroll_rptSalarySheetExcel.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'Payroll_rptSalarySheetExcel\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablePayroll_rptSalarySheetExcel.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalaryMonthNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.SalaryMonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalaryMonthNull() {
                this[this.tablePayroll_rptSalarySheetExcel.SalaryMonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalaryFromDateNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.SalaryFromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalaryFromDateNull() {
                this[this.tablePayroll_rptSalarySheetExcel.SalaryFromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSalaryToDateNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.SalaryToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSalaryToDateNull() {
                this[this.tablePayroll_rptSalarySheetExcel.SalaryToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIdCardNoNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.IdCardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIdCardNoNull() {
                this[this.tablePayroll_rptSalarySheetExcel.IdCardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDOJNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.DOJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDOJNull() {
                this[this.tablePayroll_rptSalarySheetExcel.DOJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeparationDateNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.SeparationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeparationDateNull() {
                this[this.tablePayroll_rptSalarySheetExcel.SeparationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGenderNull() {
                this[this.tablePayroll_rptSalarySheetExcel.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLINENull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.LINEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLINENull() {
                this[this.tablePayroll_rptSalarySheetExcel.LINEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGradeNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.GradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGradeNull() {
                this[this.tablePayroll_rptSalarySheetExcel.GradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStaffCatagoryNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.StaffCatagoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStaffCatagoryNull() {
                this[this.tablePayroll_rptSalarySheetExcel.StaffCatagoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsABNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.ABColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetABNull() {
                this[this.tablePayroll_rptSalarySheetExcel.ABColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLaunchDeductionNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.LaunchDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLaunchDeductionNull() {
                this[this.tablePayroll_rptSalarySheetExcel.LaunchDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInrementAmountNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.InrementAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInrementAmountNull() {
                this[this.tablePayroll_rptSalarySheetExcel.InrementAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCompBasicNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.CompBasicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCompBasicNull() {
                this[this.tablePayroll_rptSalarySheetExcel.CompBasicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAbsentAmountNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.AbsentAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAbsentAmountNull() {
                this[this.tablePayroll_rptSalarySheetExcel.AbsentAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsReleasedAbsentDeductionNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.ReleasedAbsentDeductionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetReleasedAbsentDeductionNull() {
                this[this.tablePayroll_rptSalarySheetExcel.ReleasedAbsentDeductionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTotalPayableNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.TotalPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTotalPayableNull() {
                this[this.tablePayroll_rptSalarySheetExcel.TotalPayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNetPayableNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.NetPayableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNetPayableNull() {
                this[this.tablePayroll_rptSalarySheetExcel.NetPayableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActualWorkHourNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.ActualWorkHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActualWorkHourNull() {
                this[this.tablePayroll_rptSalarySheetExcel.ActualWorkHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPayableWorkHourNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.PayableWorkHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPayableWorkHourNull() {
                this[this.tablePayroll_rptSalarySheetExcel.PayableWorkHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEmployeeStatusNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.EmployeeStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEmployeeStatusNull() {
                this[this.tablePayroll_rptSalarySheetExcel.EmployeeStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPayableHouseRentNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.PayableHouseRentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPayableHouseRentNull() {
                this[this.tablePayroll_rptSalarySheetExcel.PayableHouseRentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPayableMedicalAllowanceNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.PayableMedicalAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPayableMedicalAllowanceNull() {
                this[this.tablePayroll_rptSalarySheetExcel.PayableMedicalAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFestiveBonusNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.FestiveBonusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFestiveBonusNull() {
                this[this.tablePayroll_rptSalarySheetExcel.FestiveBonusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWeeklyWorkHourNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.WeeklyWorkHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWeeklyWorkHourNull() {
                this[this.tablePayroll_rptSalarySheetExcel.WeeklyWorkHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDailyWoringHourNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.DailyWoringHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDailyWoringHourNull() {
                this[this.tablePayroll_rptSalarySheetExcel.DailyWoringHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablePayroll_rptSalarySheetExcel.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablePayroll_rptSalarySheetExcel.UnitNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Payroll_rptSalarySheetExcelRowChangeEvent : global::System.EventArgs {
            
            private Payroll_rptSalarySheetExcelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelRowChangeEvent(Payroll_rptSalarySheetExcelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Payroll_rptSalarySheetExcelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GTERP.dsSalaryExcelTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Payroll_rptSalarySheetExcelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Payroll_rptSalarySheetExcelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Payroll_rptSalarySheetExcel";
            tableMapping.ColumnMappings.Add("SalaryMonth", "SalaryMonth");
            tableMapping.ColumnMappings.Add("SalaryFromDate", "SalaryFromDate");
            tableMapping.ColumnMappings.Add("SalaryToDate", "SalaryToDate");
            tableMapping.ColumnMappings.Add("IdCardNo", "IdCardNo");
            tableMapping.ColumnMappings.Add("EmployeeName", "EmployeeName");
            tableMapping.ColumnMappings.Add("DOJ", "DOJ");
            tableMapping.ColumnMappings.Add("SeparationDate", "SeparationDate");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DesigNation", "DesigNation");
            tableMapping.ColumnMappings.Add("DepartMent", "DepartMent");
            tableMapping.ColumnMappings.Add("LINE", "LINE");
            tableMapping.ColumnMappings.Add("Section", "Section");
            tableMapping.ColumnMappings.Add("Grade", "Grade");
            tableMapping.ColumnMappings.Add("StaffCatagory", "StaffCatagory");
            tableMapping.ColumnMappings.Add("EarnDays", "EarnDays");
            tableMapping.ColumnMappings.Add("WorkingDays", "WorkingDays");
            tableMapping.ColumnMappings.Add("MonthDays", "MonthDays");
            tableMapping.ColumnMappings.Add("CL", "CL");
            tableMapping.ColumnMappings.Add("SL", "SL");
            tableMapping.ColumnMappings.Add("EL", "EL");
            tableMapping.ColumnMappings.Add("AB", "AB");
            tableMapping.ColumnMappings.Add("BASIC", "BASIC");
            tableMapping.ColumnMappings.Add("HR", "HR");
            tableMapping.ColumnMappings.Add("MA", "MA");
            tableMapping.ColumnMappings.Add("GROSS", "GROSS");
            tableMapping.ColumnMappings.Add("ADVANCE", "ADVANCE");
            tableMapping.ColumnMappings.Add("LaunchDeduction", "LaunchDeduction");
            tableMapping.ColumnMappings.Add("AttBonus", "AttBonus");
            tableMapping.ColumnMappings.Add("InrementAmount", "InrementAmount");
            tableMapping.ColumnMappings.Add("CompBasic", "CompBasic");
            tableMapping.ColumnMappings.Add("AbsentAmount", "AbsentAmount");
            tableMapping.ColumnMappings.Add("ActualOTHour", "ActualOTHour");
            tableMapping.ColumnMappings.Add("OTRate", "OTRate");
            tableMapping.ColumnMappings.Add("OTAmount", "OTAmount");
            tableMapping.ColumnMappings.Add("ReleasedAbsentDeduction", "ReleasedAbsentDeduction");
            tableMapping.ColumnMappings.Add("TotalPayable", "TotalPayable");
            tableMapping.ColumnMappings.Add("NetPayable", "NetPayable");
            tableMapping.ColumnMappings.Add("WeeklyHoliday", "WeeklyHoliday");
            tableMapping.ColumnMappings.Add("Holiday", "Holiday");
            tableMapping.ColumnMappings.Add("CompWH", "CompWH");
            tableMapping.ColumnMappings.Add("PresentDay", "PresentDay");
            tableMapping.ColumnMappings.Add("Absent", "Absent");
            tableMapping.ColumnMappings.Add("ActualWorkHour", "ActualWorkHour");
            tableMapping.ColumnMappings.Add("PayableWorkHour", "PayableWorkHour");
            tableMapping.ColumnMappings.Add("TransPort", "TransPort");
            tableMapping.ColumnMappings.Add("CompTA", "CompTA");
            tableMapping.ColumnMappings.Add("EmployeeStatus", "EmployeeStatus");
            tableMapping.ColumnMappings.Add("PayableHouseRent", "PayableHouseRent");
            tableMapping.ColumnMappings.Add("PayableMedicalAllowance", "PayableMedicalAllowance");
            tableMapping.ColumnMappings.Add("FestiveBonus", "FestiveBonus");
            tableMapping.ColumnMappings.Add("StampDeduction", "StampDeduction");
            tableMapping.ColumnMappings.Add("WeeklyWorkHour", "WeeklyWorkHour");
            tableMapping.ColumnMappings.Add("DailyWoringHour", "DailyWoringHour");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=103.204.80.173;Initial Catalog=GTRERP_ALL;Persist Security Info=True;" +
                "User ID=gterpall;Password=Gr@wth#W@rk@#@!45;Encrypt=True;TrustServerCertificate=" +
                "True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Payroll_rptSalarySheetExcel";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComId", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProssType", global::System.Data.SqlDbType.VarChar, 40, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayMode", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpTypeId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DesigId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SectId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubSectId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FloorId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LineId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpStatus", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BankId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSalaryExcel.Payroll_rptSalarySheetExcelDataTable dataTable, string ComId, string ProssType, string PayMode, global::System.Nullable<int> UnitId, global::System.Nullable<int> EmpTypeId, global::System.Nullable<int> DeptId, global::System.Nullable<int> DesigId, global::System.Nullable<int> SectId, global::System.Nullable<int> SubSectId, global::System.Nullable<int> EmpId, global::System.Nullable<short> FloorId, global::System.Nullable<int> LineId, string EmpStatus, global::System.Nullable<int> BankId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ComId == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ComId));
            }
            if ((ProssType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProssType));
            }
            if ((PayMode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PayMode));
            }
            if ((UnitId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(UnitId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((EmpTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(EmpTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DesigId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(DesigId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(SectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((SubSectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(SubSectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((EmpId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(EmpId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FloorId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((short)(FloorId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LineId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(LineId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EmpStatus == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(EmpStatus));
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSalaryExcel.Payroll_rptSalarySheetExcelDataTable GetData(string ComId, string ProssType, string PayMode, global::System.Nullable<int> UnitId, global::System.Nullable<int> EmpTypeId, global::System.Nullable<int> DeptId, global::System.Nullable<int> DesigId, global::System.Nullable<int> SectId, global::System.Nullable<int> SubSectId, global::System.Nullable<int> EmpId, global::System.Nullable<short> FloorId, global::System.Nullable<int> LineId, string EmpStatus, global::System.Nullable<int> BankId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ComId == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ComId));
            }
            if ((ProssType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProssType));
            }
            if ((PayMode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(PayMode));
            }
            if ((UnitId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(UnitId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((EmpTypeId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(EmpTypeId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DeptId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(DeptId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DesigId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(DesigId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(SectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((SubSectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((int)(SubSectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((EmpId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(EmpId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((FloorId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((short)(FloorId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LineId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(LineId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((EmpStatus == null)) {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = ((string)(EmpStatus));
            }
            if ((BankId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[14].Value = ((int)(BankId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            dsSalaryExcel.Payroll_rptSalarySheetExcelDataTable dataTable = new dsSalaryExcel.Payroll_rptSalarySheetExcelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(dsSalaryExcel dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(dsSalaryExcel dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(dsSalaryExcel dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(dsSalaryExcel dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591